{"version":3,"sources":["webpack:///node_modules/angular-cc-library/__ivy_ngcc__/fesm2015/angular-cc-library.js","webpack:///src/app/views/cart/cart-routing.module.ts","webpack:///src/app/views/cart/cart-resolver.service.ts","webpack:///src/app/views/cart/cart-address/cart-address.component.ts","webpack:///src/app/views/cart/cart-address/cart-address.component.html","webpack:///src/app/services/route-guard.guard.ts","webpack:///src/app/views/cart/cart-details/cart-details.component.ts","webpack:///src/app/views/cart/cart-details/cart-details.component.html","webpack:///src/app/dataModels/cardError.ts","webpack:///src/app/views/cart/cart-payment/cart-payment.component.html","webpack:///src/app/views/cart/cart-payment/cart-payment.component.ts","webpack:///src/app/views/cart/cart.module.ts","webpack:///src/app/views/cart/deactive-guard.guard.ts"],"names":["defaultFormat","cards","type","patterns","format","length","cvvLength","luhn","CreditCard","num","replace","i","len","card","ref","j","len1","pattern","p","substr","e","metaKey","ctrlKey","which","input","String","fromCharCode","test","target","selectionStart","selectionEnd","cardFromNumber","upperLength","slice","global","matches","match","join","groups","exec","shift","filter","Boolean","value","updateValue","cursor","last","result","error","document","activeElement","prevPair","currPair","digit","key","hasTextSelected","str","fullWidth","halfWidth","chars","split","chr","idx","indexOf","expiry","parts","mon","sep","year","substring","val","digits","reverse","odd","sum","parseInt","CreditCardValidators","control","required","undefined","ccNumber","toString","includes","luhnCheck","upperlength","registeredNum","expDate","month","prefix","Date","getFullYear","currentTime","setMonth","getMonth","CreditCardFormatDirective","el","resolvedScheme$","nativeElement","setValue","restrictNumeric","isCardNumber","formatCardNumber","preventDefault","formatBackCardNumber","reFormatCardNumber","setCardType","selStart","cardType","next","classList","contains","forEach","remove","add","toggle","replaceFullWidthChars","oldValue","safeVal","ɵfac","CreditCardFormatDirective_Factory","t","ɵdir","selectors","hostBindings","CreditCardFormatDirective_HostBindings","rf","ctx","CreditCardFormatDirective_keypress_HostBindingHandler","$event","onKeypress","CreditCardFormatDirective_keydown_HostBindingHandler","onKeydown","CreditCardFormatDirective_keyup_HostBindingHandler","onKeyup","CreditCardFormatDirective_paste_HostBindingHandler","onPaste","CreditCardFormatDirective_change_HostBindingHandler","onChange","CreditCardFormatDirective_input_HostBindingHandler","onInput","exportAs","ctorParameters","decorators","propDecorators","args","selector","CvcFormatDirective","restrictCvc","oldVal","CvcFormatDirective_Factory","CvcFormatDirective_HostBindings","CvcFormatDirective_keypress_HostBindingHandler","CvcFormatDirective_paste_HostBindingHandler","reformatCvc","CvcFormatDirective_change_HostBindingHandler","CvcFormatDirective_input_HostBindingHandler","ExpiryFormatDirective","restrictExpiry","formatExpiry","formatForwardSlashAndSpace","formatForwardExpiry","formatBackExpiry","reformatExpiry","m1","m2","valueOf","ExpiryFormatDirective_Factory","ExpiryFormatDirective_HostBindings","ExpiryFormatDirective_keypress_HostBindingHandler","ExpiryFormatDirective_keydown_HostBindingHandler","ExpiryFormatDirective_change_HostBindingHandler","ExpiryFormatDirective_input_HostBindingHandler","CREDIT_CARD_LIBRARY_DIRECTIVES","CreditCardDirectivesModule","ɵmod","ɵinj","factory","CreditCardDirectivesModule_Factory","ngJitMode","declarations","exports","routes","path","component","resolve","cartData","canActivate","canDeactivate","CartRoutingModule","forChild","imports","CartResolverService","apiService","route","state","sessionStorage","getItem","getCartById","window","atob","pipe","data","JSON","parse","cart","providedIn","CartAddressComponent","fb","toaster","spinner","products","grandTotal","shippingCharges","finalPrice","toggleAddress","subscribe","emptyAddress","stateInfo","countryInfo","cityInfo","buyNowCartId","toggleCanDeactivate","applyDealerDiscount","dealerDiscountAmount","show","userId","getAddressList","dealerDiscount","res","dealerDiscountPercentage","userDiscount","getCartItems","user_id","stringify","addToCart","id","push","findGrandTotal","err","message","getCountries","createAddressForm","address","selectedAddress","getUserDetails","productPrice","ele","productQuantity","discountPrice","price","Math","round","toFixed","gstPrice","additionalPaymentDetails","btoa","subtotal_amount","shipping_amount","gst_amount","setItem","getCountryData","onChangeCountry","userData","getAllAddress","addressList","hide","getSelectedAddress","patchAddressForm","name","userName","addressForm","patchValue","first_name","middle_name","last_name","countryValue","countryIndex","findIndex","states","stateValue","stateIndex","cities","group","title","phone","house_no","city","pincode","country","validNumber","maxLength","formGroup","Object","keys","formControl","field","get","markAsTouched","onlySelf","validateAllFields","form","invalid","addAddress","success","reset","cartLocalData","console","log","accessoriesToAdd","sparesToAdd","productId","code","description","pole","flow","head","speed","power","engineSpeed","enginekW","driveType","cartDetails","cartAccessoryDataSet","Array","cartSpareDataSet","cartProductDataSet","spareNotExist","accessoryNotExist","some","updateCart","response","removeItem","totalItemsInCart","navigate","Promise","cartNotExist","s","unsubscribe","controls","onInputChange","onChangeState","saveAddress","templateUrl","styleUrls","RouteGuard","router","CartDetailsComponent","activatedRoute","toggleBtn","showDeleteMsg","updateCartDetails","insertImages","getProductQuantity","pumpModel","element","product","cartArray","updateCartData","productCount","productItemQuantity","getElementById","style","display","deleteItemIndex","productType","productData","eachProduct","productIndex","splice","productTotal","relativeTo","queryParams","origin","sub","removeItemFromCart","closeDeleteModal","inputList","CardError","CartPaymentComponent","toastr","ngZone","zone","paymentLoading","cardErrors","cardHandler","bind","total","countryList","toggleCardNumberError","toggleCardMonthError","toggleCardCvvError","params","id1","addressId","id2","getAddress","createPaymentForm","cardStyle","base","iconColor","color","fontFamily","fontSmoothing","fontSize","stripe","Stripe","stripeTestKey","elements","cardNumber","create","showIcon","placeholder","mount","on","cardNumberError","cardExpiry","cardMonthError","cardCvc","cardCvvError","subPrice","getAddressById","addressDetails","createElement","src","onload","setPublishableKey","body","appendChild","paymentForm","cardUserName","minLength","createToken","address_city","address_country","address_line1","address_state","address_zip","token","onSuccess","onError","paymentData","amount","payment","createOrder","additionalDetails","orderData","address_id","transaction_id","purchase_details","cart_id","addOrders","orderId","destroy","cardElement","CartModule","providers","DeactiveGuard","currentRoute","currentState","nextState"],"mappings":"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","file":"views-cart-cart-module-es5.js","sourcesContent":["import { Validators, NgControl } from '@angular/forms';\nimport { Directive, ElementRef, Self, Optional, HostListener, NgModule } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/forms';\nconst defaultFormat = /(\\d{1,4})/g;\nconst cards = [\n    {\n        type: 'maestro',\n        patterns: [5018, 502, 503, 506, 56, 58, 639, 6220, 67],\n        format: defaultFormat,\n        length: [12, 13, 14, 15, 16, 17, 18, 19],\n        cvvLength: [3],\n        luhn: true,\n    }, {\n        type: 'forbrugsforeningen',\n        patterns: [600],\n        format: defaultFormat,\n        length: [16],\n        cvvLength: [3],\n        luhn: true,\n    }, {\n        type: 'dankort',\n        patterns: [5019],\n        format: defaultFormat,\n        length: [16],\n        cvvLength: [3],\n        luhn: true,\n    }, {\n        type: 'visa',\n        patterns: [4],\n        format: defaultFormat,\n        length: [13, 16, 19],\n        cvvLength: [3],\n        luhn: true,\n    }, {\n        type: 'mastercard',\n        patterns: [51, 52, 53, 54, 55, 22, 23, 24, 25, 26, 27],\n        format: defaultFormat,\n        length: [16],\n        cvvLength: [3],\n        luhn: true,\n    }, {\n        type: 'amex',\n        patterns: [34, 37],\n        format: /(\\d{1,4})(\\d{1,6})?(\\d{1,5})?/,\n        length: [15],\n        cvvLength: [3, 4],\n        luhn: true,\n    }, {\n        type: 'dinersclub',\n        patterns: [30, 36, 38, 39],\n        format: /(\\d{1,4})(\\d{1,6})?(\\d{1,4})?/,\n        length: [14],\n        cvvLength: [3],\n        luhn: true,\n    }, {\n        type: 'discover',\n        patterns: [60, 64, 65, 622],\n        format: defaultFormat,\n        length: [16],\n        cvvLength: [3],\n        luhn: true,\n    }, {\n        type: 'unionpay',\n        patterns: [62, 88],\n        format: defaultFormat,\n        length: [16, 17, 18, 19],\n        cvvLength: [3],\n        luhn: false,\n    }, {\n        type: 'jcb',\n        patterns: [35],\n        format: defaultFormat,\n        length: [16, 19],\n        cvvLength: [3],\n        luhn: true,\n    },\n];\n// @dynamic\nclass CreditCard {\n    static cards() {\n        return cards;\n    }\n    static cardFromNumber(num) {\n        num = (num + '').replace(/\\D/g, '');\n        for (let i = 0, len = cards.length; i < len; i++) {\n            const card = cards[i];\n            const ref = card.patterns;\n            for (let j = 0, len1 = ref.length; j < len1; j++) {\n                const pattern = ref[j];\n                const p = pattern + '';\n                if (num.substr(0, p.length) === p) {\n                    return card;\n                }\n            }\n        }\n    }\n    static restrictNumeric(e) {\n        if (e.metaKey || e.ctrlKey) {\n            return true;\n        }\n        if (e.which === 32) {\n            return false;\n        }\n        if (e.which === 0) {\n            return true;\n        }\n        if (e.which < 33) {\n            return true;\n        }\n        const input = String.fromCharCode(e.which);\n        return !!/[\\d\\s]/.test(input);\n    }\n    static hasTextSelected(target) {\n        return target.selectionStart !== null && target.selectionStart !== target.selectionEnd;\n    }\n    static cardType(num) {\n        if (!num) {\n            return num;\n        }\n        const card = this.cardFromNumber(num);\n        if (card !== null && typeof card !== 'undefined') {\n            return card.type;\n        }\n        else {\n            return null;\n        }\n    }\n    static formatCardNumber(num) {\n        num = num.replace(/\\D/g, '');\n        const card = this.cardFromNumber(num);\n        if (!card) {\n            return num;\n        }\n        const upperLength = card.length[card.length.length - 1];\n        num = num.slice(0, upperLength);\n        if (card.format.global) {\n            const matches = num.match(card.format);\n            if (matches != null) {\n                return matches.join(' ');\n            }\n        }\n        else {\n            const groups = card.format.exec(num);\n            if (groups == null) {\n                return;\n            }\n            groups.shift();\n            return groups.filter(Boolean).join(' ');\n        }\n    }\n    static safeVal(value, target, updateValue) {\n        let cursor = null;\n        const last = target.value;\n        let result = null;\n        try {\n            cursor = target.selectionStart;\n        }\n        catch (error) { }\n        updateValue(value);\n        if (cursor !== null && target === document.activeElement) {\n            if (cursor === last.length) {\n                cursor = value.length;\n            }\n            if (last !== value) {\n                const prevPair = last.slice(cursor - 1, +cursor + 1 || 9e9);\n                const currPair = value.slice(cursor - 1, +cursor + 1 || 9e9);\n                const digit = value[cursor];\n                if (/\\d/.test(digit) && prevPair === (`${digit} `) && currPair === (` ${digit}`)) {\n                    cursor = cursor + 1;\n                }\n            }\n            result = cursor;\n        }\n        return result;\n    }\n    static isCardNumber(key, target) {\n        const digit = String.fromCharCode(key);\n        if (!/^\\d+$/.test(digit)) {\n            return false;\n        }\n        if (CreditCard.hasTextSelected(target)) {\n            return true;\n        }\n        const value = (target.value + digit).replace(/\\D/g, '');\n        const card = CreditCard.cardFromNumber(value);\n        if (card) {\n            return value.length <= card.length[card.length.length - 1];\n        }\n        else {\n            return value.length <= 16;\n        }\n    }\n    static restrictExpiry(key, target) {\n        const digit = String.fromCharCode(key);\n        if (!/^\\d+$/.test(digit) || this.hasTextSelected(target)) {\n            return false;\n        }\n        const value = `${target.value}${digit}`.replace(/\\D/g, '');\n        return value.length > 6;\n    }\n    static replaceFullWidthChars(str) {\n        if (str === null) {\n            str = '';\n        }\n        const fullWidth = '\\uff10\\uff11\\uff12\\uff13\\uff14\\uff15\\uff16\\uff17\\uff18\\uff19';\n        const halfWidth = '0123456789';\n        let value = '';\n        const chars = str.split('');\n        // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < chars.length; i++) {\n            let chr = chars[i];\n            const idx = fullWidth.indexOf(chr);\n            if (idx > -1) {\n                chr = halfWidth[idx];\n            }\n            value += chr;\n        }\n        return value;\n    }\n    static formatExpiry(expiry) {\n        const parts = expiry.match(/^\\D*(\\d{1,2})(\\D+)?(\\d{1,4})?/);\n        if (!parts) {\n            return '';\n        }\n        let mon = parts[1] || '';\n        let sep = parts[2] || '';\n        const year = parts[3] || '';\n        if (year.length > 0) {\n            sep = ' / ';\n        }\n        else if (sep === ' /') {\n            mon = mon.substring(0, 1);\n            sep = '';\n        }\n        else if (mon.length === 2 || sep.length > 0) {\n            sep = ' / ';\n        }\n        else if (mon.length === 1 && (mon !== '0' && mon !== '1')) {\n            mon = `0${mon}`;\n            sep = ' / ';\n        }\n        return `${mon}${sep}${year}`;\n    }\n    static restrictCvc(key, target) {\n        const digit = String.fromCharCode(key);\n        if (!/^\\d+$/.test(digit) || this.hasTextSelected(target)) {\n            return false;\n        }\n        const val = `${target.value}${digit}`;\n        return val.length <= 4;\n    }\n    static luhnCheck(num) {\n        const digits = num.split('').reverse();\n        let odd = true;\n        let sum = 0;\n        // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < digits.length; i++) {\n            let digit = parseInt(digits[i], 10);\n            // tslint:disable-next-line:no-conditional-assignment\n            if ((odd = !odd)) {\n                digit *= 2;\n            }\n            if (digit > 9) {\n                digit -= 9;\n            }\n            sum += digit;\n        }\n        return sum % 10 === 0;\n    }\n}\n\nclass CreditCardValidators {\n    static validateCCNumber(control) {\n        if (Validators.required(control) !== undefined && Validators.required(control) !== null) {\n            return { ccNumber: true };\n        }\n        const num = control.value.toString().replace(/\\s+|-/g, '');\n        if (!/^\\d+$/.test(num)) {\n            return { ccNumber: true };\n        }\n        const card = CreditCard.cardFromNumber(num);\n        if (!card) {\n            return { ccNumber: true };\n        }\n        if (card.length.includes(num.length) && (card.luhn === false || CreditCard.luhnCheck(num))) {\n            return null;\n        }\n        const upperlength = card.length[card.length.length - 1];\n        if (num.length > upperlength) {\n            const registeredNum = num.substring(0, upperlength);\n            if (CreditCard.luhnCheck(registeredNum)) {\n                return null;\n            }\n        }\n        return { ccNumber: true };\n    }\n    static validateExpDate(control) {\n        if (Validators.required(control) !== undefined && Validators.required(control) !== null) {\n            return { expDate: true };\n        }\n        if (typeof control.value !== 'undefined' && control.value.length >= 5) {\n            let [month, year] = control.value.split(/[\\s\\/]+/, 2);\n            if ((year != null ? year.length : void 0) === 2 && /^\\d+$/.test(year)) {\n                const prefix = new Date().getFullYear().toString().slice(0, 2);\n                year = prefix + year;\n            }\n            month = parseInt(month, 10).toString();\n            year = parseInt(year, 10).toString();\n            if (/^\\d+$/.test(month) && /^\\d+$/.test(year) && (month >= 1 && month <= 12)) {\n                const expiry = new Date(year, month);\n                const currentTime = new Date();\n                expiry.setMonth(expiry.getMonth() - 1);\n                expiry.setMonth(expiry.getMonth() + 1, 1);\n                if (expiry > currentTime) {\n                    return null;\n                }\n            }\n        }\n        return { expDate: true };\n    }\n}\n\nclass CreditCardFormatDirective {\n    constructor(el, control) {\n        this.el = el;\n        this.control = control;\n        this.cards = CreditCard.cards();\n        this.resolvedScheme$ = new BehaviorSubject('unknown');\n        this.target = this.el.nativeElement;\n    }\n    /**\n     * Updates the value to target element, or FormControl if exists.\n     * @param value New input value.\n     */\n    updateValue(value) {\n        if (this.control) {\n            this.control.control.setValue(value);\n        }\n        else {\n            this.target.value = value;\n        }\n    }\n    onKeypress(e) {\n        if (CreditCard.restrictNumeric(e)) {\n            if (CreditCard.isCardNumber(e.which, this.target)) {\n                this.formatCardNumber(e);\n            }\n        }\n        else {\n            e.preventDefault();\n        }\n    }\n    onKeydown(e) {\n        this.formatBackCardNumber(e);\n        this.reFormatCardNumber();\n    }\n    onKeyup() {\n        this.setCardType();\n    }\n    onPaste() {\n        this.reFormatCardNumber();\n    }\n    onChange() {\n        this.reFormatCardNumber();\n    }\n    onInput() {\n        this.reFormatCardNumber();\n        this.setCardType();\n    }\n    formatCardNumber(e) {\n        const digit = String.fromCharCode(e.which);\n        if (!/^\\d+$/.test(digit)) {\n            return;\n        }\n        const value = this.target.value;\n        const card = CreditCard.cardFromNumber(value + digit);\n        const length = (value.replace(/\\D/g, '') + digit).length;\n        const upperLength = card ? card.length[card.length.length - 1] : 19;\n        if (length >= upperLength) {\n            return;\n        }\n    }\n    formatBackCardNumber(e) {\n        const value = this.target.value;\n        const selStart = this.target.selectionStart;\n        if (e.which !== 8) {\n            return;\n        }\n        if (selStart != null\n            && selStart === this.target.selectionEnd\n            && selStart > 0\n            && selStart !== value.length\n            && value[selStart - 1] === ' ') {\n            e.preventDefault();\n            if (selStart <= 2) {\n                this.updateValue(value.slice(selStart));\n                this.target.selectionStart = 0;\n                this.target.selectionEnd = 0;\n            }\n            else {\n                this.updateValue(value.slice(0, selStart - 2) + value.slice(selStart));\n                this.target.selectionStart = selStart - 2;\n                this.target.selectionEnd = selStart - 2;\n            }\n        }\n    }\n    setCardType() {\n        const cardType = CreditCard.cardType(this.target.value) || 'unknown';\n        this.resolvedScheme$.next(cardType);\n        if (!this.target.classList.contains(cardType)) {\n            this.cards.forEach((card) => {\n                this.target.classList.remove(card.type);\n            });\n            this.target.classList.remove('unknown');\n            this.target.classList.add(cardType);\n            this.target.classList.toggle('identified', cardType !== 'unknown');\n        }\n    }\n    reFormatCardNumber() {\n        const value = CreditCard.formatCardNumber(CreditCard.replaceFullWidthChars(this.target.value));\n        const oldValue = this.target.value;\n        if (value !== oldValue) {\n            this.target.selectionStart = this.target.selectionEnd = CreditCard.safeVal(value, this.target, (safeVal => {\n                this.updateValue(safeVal);\n            }));\n        }\n    }\n}\nCreditCardFormatDirective.ɵfac = function CreditCardFormatDirective_Factory(t) { return new (t || CreditCardFormatDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgControl, 10)); };\nCreditCardFormatDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CreditCardFormatDirective, selectors: [[\"\", \"ccNumber\", \"\"]], hostBindings: function CreditCardFormatDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keypress\", function CreditCardFormatDirective_keypress_HostBindingHandler($event) { return ctx.onKeypress($event); })(\"keydown\", function CreditCardFormatDirective_keydown_HostBindingHandler($event) { return ctx.onKeydown($event); })(\"keyup\", function CreditCardFormatDirective_keyup_HostBindingHandler() { return ctx.onKeyup(); })(\"paste\", function CreditCardFormatDirective_paste_HostBindingHandler() { return ctx.onPaste(); })(\"change\", function CreditCardFormatDirective_change_HostBindingHandler() { return ctx.onChange(); })(\"input\", function CreditCardFormatDirective_input_HostBindingHandler() { return ctx.onInput(); });\n    } }, exportAs: [\"ccNumber\"] });\nCreditCardFormatDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] }\n];\nCreditCardFormatDirective.propDecorators = {\n    onKeypress: [{ type: HostListener, args: ['keypress', ['$event'],] }],\n    onKeydown: [{ type: HostListener, args: ['keydown', ['$event'],] }],\n    onKeyup: [{ type: HostListener, args: ['keyup',] }],\n    onPaste: [{ type: HostListener, args: ['paste',] }],\n    onChange: [{ type: HostListener, args: ['change',] }],\n    onInput: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CreditCardFormatDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ccNumber]',\n                exportAs: 'ccNumber'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }]; }, { onKeypress: [{\n            type: HostListener,\n            args: ['keypress', ['$event']]\n        }], onKeydown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }], onKeyup: [{\n            type: HostListener,\n            args: ['keyup']\n        }], onPaste: [{\n            type: HostListener,\n            args: ['paste']\n        }], onChange: [{\n            type: HostListener,\n            args: ['change']\n        }], onInput: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\nclass CvcFormatDirective {\n    constructor(el, control) {\n        this.el = el;\n        this.control = control;\n        this.target = this.el.nativeElement;\n    }\n    /**\n     * Updates the value to target element, or FormControl if exists.\n     * @param value New input value.\n     */\n    updateValue(value) {\n        if (this.control) {\n            this.control.control.setValue(value);\n        }\n        else {\n            this.target.value = value;\n        }\n    }\n    onKeypress(e) {\n        if (!CreditCard.restrictNumeric(e) && !CreditCard.restrictCvc(e.which, this.target)) {\n            e.preventDefault();\n        }\n    }\n    reformatCvc() {\n        const val = CreditCard.replaceFullWidthChars(this.target.value)\n            .replace(/\\D/g, '')\n            .slice(0, 4);\n        const oldVal = this.target.value;\n        if (val !== oldVal) {\n            this.target.selectionStart = this.target.selectionEnd = CreditCard.safeVal(val, this.target, (safeVal => {\n                this.updateValue(safeVal);\n            }));\n        }\n    }\n}\nCvcFormatDirective.ɵfac = function CvcFormatDirective_Factory(t) { return new (t || CvcFormatDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgControl, 10)); };\nCvcFormatDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CvcFormatDirective, selectors: [[\"\", \"ccCVC\", \"\"]], hostBindings: function CvcFormatDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keypress\", function CvcFormatDirective_keypress_HostBindingHandler($event) { return ctx.onKeypress($event); })(\"paste\", function CvcFormatDirective_paste_HostBindingHandler() { return ctx.reformatCvc(); })(\"change\", function CvcFormatDirective_change_HostBindingHandler() { return ctx.reformatCvc(); })(\"input\", function CvcFormatDirective_input_HostBindingHandler() { return ctx.reformatCvc(); });\n    } } });\nCvcFormatDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] }\n];\nCvcFormatDirective.propDecorators = {\n    onKeypress: [{ type: HostListener, args: ['keypress', ['$event'],] }],\n    reformatCvc: [{ type: HostListener, args: ['paste',] }, { type: HostListener, args: ['change',] }, { type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CvcFormatDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ccCVC]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }]; }, { onKeypress: [{\n            type: HostListener,\n            args: ['keypress', ['$event']]\n        }], reformatCvc: [{\n            type: HostListener,\n            args: ['paste']\n        }, {\n            type: HostListener,\n            args: ['change']\n        }, {\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\nclass ExpiryFormatDirective {\n    constructor(el, control) {\n        this.el = el;\n        this.control = control;\n        this.target = this.el.nativeElement;\n    }\n    /**\n     * Updates the value to target element, or FormControl if exists.\n     * @param value New input value.\n     */\n    updateValue(value) {\n        if (this.control) {\n            this.control.control.setValue(value);\n        }\n        else {\n            this.target.value = value;\n        }\n    }\n    onKeypress(e) {\n        if (CreditCard.restrictNumeric(e)) {\n            if (CreditCard.restrictExpiry(e.which, this.target)) {\n                this.formatExpiry(e);\n                this.formatForwardSlashAndSpace(e);\n                this.formatForwardExpiry(e);\n            }\n        }\n        else {\n            e.preventDefault();\n            return false;\n        }\n    }\n    onKeydown(e) {\n        if (CreditCard.restrictNumeric(e) && CreditCard.restrictExpiry(e.which, this.target)) {\n            this.formatBackExpiry(e);\n        }\n    }\n    onChange() {\n        this.reformatExpiry();\n    }\n    onInput() {\n        this.reformatExpiry();\n    }\n    formatExpiry(e) {\n        const digit = String.fromCharCode(e.which);\n        const val = `${this.target.value}${digit}`;\n        if (!/^\\d+$/.test(digit)) {\n            return;\n        }\n        if (/^\\d$/.test(val) && (val !== '0' && val !== '1')) {\n            e.preventDefault();\n            this.updateValue(`0${val} / `);\n        }\n        else if (/^\\d\\d$/.test(val)) {\n            e.preventDefault();\n            const m1 = parseInt(val[0], 10);\n            const m2 = parseInt(val[1], 10);\n            if (m2 > 2 && m1 !== 0) {\n                this.updateValue(`0${m1} / ${m2}`);\n            }\n            else {\n                this.updateValue(`${val} / `);\n            }\n        }\n    }\n    formatForwardSlashAndSpace(e) {\n        const which = String.fromCharCode(e.which);\n        const val = this.target.value;\n        if (!(which === '/' || which === ' ')) {\n            return false;\n        }\n        if (/^\\d$/.test(val) && val !== '0') {\n            this.updateValue(`0${val} / `);\n        }\n    }\n    formatForwardExpiry(e) {\n        const digit = String.fromCharCode(e.which);\n        const val = this.target.value;\n        if (!/^\\d+$/.test(digit) && /^\\d\\d$/.test(val)) {\n            this.updateValue(this.target.value = `${val} / `);\n        }\n    }\n    formatBackExpiry(e) {\n        const val = this.target.valueOf;\n        if (e.which !== 8) {\n            return;\n        }\n        if ((this.target.selectionStart != null) && this.target.selectionStart !== val.length) {\n            return;\n        }\n        if (/\\d\\s\\/\\s$/.test(val)) {\n            e.preventDefault();\n            this.updateValue(val.replace(/\\d\\s\\/\\s$/, ''));\n        }\n    }\n    reformatExpiry() {\n        const val = CreditCard.formatExpiry(CreditCard.replaceFullWidthChars(this.target.value));\n        const oldVal = this.target.value;\n        if (val !== oldVal) {\n            this.target.selectionStart = this.target.selectionEnd = CreditCard.safeVal(val, this.target, (safeVal => {\n                this.updateValue(safeVal);\n            }));\n        }\n    }\n}\nExpiryFormatDirective.ɵfac = function ExpiryFormatDirective_Factory(t) { return new (t || ExpiryFormatDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgControl, 10)); };\nExpiryFormatDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ExpiryFormatDirective, selectors: [[\"\", \"ccExp\", \"\"]], hostBindings: function ExpiryFormatDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keypress\", function ExpiryFormatDirective_keypress_HostBindingHandler($event) { return ctx.onKeypress($event); })(\"keydown\", function ExpiryFormatDirective_keydown_HostBindingHandler($event) { return ctx.onKeydown($event); })(\"change\", function ExpiryFormatDirective_change_HostBindingHandler() { return ctx.onChange(); })(\"input\", function ExpiryFormatDirective_input_HostBindingHandler() { return ctx.onInput(); });\n    } } });\nExpiryFormatDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] }\n];\nExpiryFormatDirective.propDecorators = {\n    onKeypress: [{ type: HostListener, args: ['keypress', ['$event'],] }],\n    onKeydown: [{ type: HostListener, args: ['keydown', ['$event'],] }],\n    onChange: [{ type: HostListener, args: ['change',] }],\n    onInput: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ExpiryFormatDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ccExp]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }]; }, { onKeypress: [{\n            type: HostListener,\n            args: ['keypress', ['$event']]\n        }], onKeydown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }], onChange: [{\n            type: HostListener,\n            args: ['change']\n        }], onInput: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\nconst CREDIT_CARD_LIBRARY_DIRECTIVES = [\n    CreditCardFormatDirective,\n    ExpiryFormatDirective,\n    CvcFormatDirective,\n];\nclass CreditCardDirectivesModule {\n}\nCreditCardDirectivesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CreditCardDirectivesModule });\nCreditCardDirectivesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CreditCardDirectivesModule_Factory(t) { return new (t || CreditCardDirectivesModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CreditCardDirectivesModule, { declarations: [CreditCardFormatDirective, ExpiryFormatDirective, CvcFormatDirective], exports: [CreditCardFormatDirective, ExpiryFormatDirective, CvcFormatDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CreditCardDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CREDIT_CARD_LIBRARY_DIRECTIVES],\n                exports: [CREDIT_CARD_LIBRARY_DIRECTIVES]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of angular-cc-library\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CreditCard, CreditCardDirectivesModule, CreditCardFormatDirective, CreditCardValidators, CvcFormatDirective, ExpiryFormatDirective };\n\n//# sourceMappingURL=angular-cc-library.js.map","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CartDetailsComponent } from './cart-details/cart-details.component';\r\nimport { CartAddressComponent } from './cart-address/cart-address.component';\r\nimport { CartPaymentComponent } from './cart-payment/cart-payment.component';\r\nimport { RouteGuard } from 'src/app/services/route-guard.guard';\r\nimport { CartResolverService } from './cart-resolver.service';\r\nimport { DeactiveGuard } from './deactive-guard.guard';\r\n\r\nconst routes: Routes = [\r\n  {path: '' , component: CartDetailsComponent, resolve: { cartData : CartResolverService} },\r\n  {path: 'deliveryAddress' , component: CartAddressComponent, canActivate: [RouteGuard], canDeactivate: [DeactiveGuard] },\r\n  {path: 'payment/:id1/:id2' , component: CartPaymentComponent, canActivate: [RouteGuard], canDeactivate: [DeactiveGuard] }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class CartRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { CartDetails } from 'src/app/dataModels/cart-details';\r\n\r\nexport interface OrderResponse {\r\n  code: number;\r\n  details: {};\r\n  message: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartResolverService implements Resolve<OrderResponse>{\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<any> | Promise<any> | OrderResponse {\r\n    if (sessionStorage.getItem('cartId')) {\r\n      return this.apiService.getCartById(window.atob(sessionStorage.getItem('cartId'))).pipe(map((data: CartDetails)  => {\r\n        if (+data[`code`] === 200) {\r\n          return JSON.parse(data[`details`].cart);\r\n        } else {\r\n          return [];\r\n        }\r\n      }));\r\n    }\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { CartDetails } from 'src/app/dataModels/cart-details';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { CanComponentDeactivate } from '../deactive-guard.guard';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n@Component({\r\n  selector: 'app-cart-address',\r\n  templateUrl: './cart-address.component.html',\r\n  styleUrls: ['./cart-address.component.css']\r\n})\r\nexport class CartAddressComponent implements OnInit, CanComponentDeactivate, OnDestroy {\r\n  products: CartDetails[] = []; // assign product to be of CartDetails array type\r\n  grandTotal: number = 0; // used to store totalPrice\r\n  shippingCharges: number = 0; // default shipping charges value\r\n  finalPrice: number = 0; // default final Price\r\n  toggleAddress: string = ''; // change address according to radio buttons\r\n  selectedAddress: any; // assign selectedAddress Assign value\r\n  subscribe: Subscription[] = []; // used to store subscription\r\n  addressForm: FormGroup;  // address form of type formGroup\r\n  addressList: any; // used to store addressList\r\n  userId: any; // used to store userId\r\n  emptyAddress: boolean = false; // emptyAddress\r\n  stateInfo: any[] = [];  // used to store state data\r\n  countryInfo: any[] = []; // used to store country data\r\n  cityInfo: any[] = []; // used to store city data\r\n  buyNowCartId: string = ''; // assign value of buyNowCartId\r\n  toggleCanDeactivate: boolean = true; // change CanDeactivate resolve according to condition\r\n  gstPrice: number;\r\n  applyDealerDiscount: boolean = false; // used to apply for dealer discount\r\n  dealerDiscountAmount: number = 0; // initial dealer discount\r\n  dealerDiscountPercentage: number ;\r\n\r\n  constructor(private apiService: ApiService, private fb: FormBuilder,\r\n              private toaster: ToastrService, private route: Router, private spinner: NgxSpinnerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    if (sessionStorage.getItem('id')) { // checking if userId is present or not\r\n      this.userId = window.atob(sessionStorage.getItem('id')); // assigning userId from sessionStorage Id\r\n      this.getAddressList(window.atob(sessionStorage.getItem('id')));\r\n    }\r\n\r\n    if (\r\n      window.atob(sessionStorage.getItem('userType')) ===\r\n        'Dealer' &&\r\n      window.atob(sessionStorage.getItem('userStatus')) === 'D'\r\n    ) {\r\n      this.applyDealerDiscount = true;\r\n      if (window.atob(sessionStorage.getItem('userDiscount')) === null) {\r\n        this.apiService.dealerDiscount().subscribe(res => {\r\n          if (res[`return`] === true) {\r\n            this.dealerDiscountPercentage = res[`dealer_discount`];\r\n            this.dealerDiscountPercentage = this.dealerDiscountPercentage * 0.01;\r\n          }\r\n        })\r\n      }else {\r\n        let userDiscount = window.atob(sessionStorage.getItem('userDiscount'));\r\n        this.dealerDiscountPercentage = +userDiscount * 0.01;\r\n      }\r\n    }\r\n\r\n    if (sessionStorage.getItem('buyNow')) { // checking if buyNow value is present or not\r\n      this.getCartItems();\r\n      const cartData = {\r\n        // user_id: window.atob(localStorage.getItem('id')),\r\n        user_id: window.atob(sessionStorage.getItem('id')),\r\n        cart: JSON.stringify(this.products)\r\n      };\r\n      // calling addToCart api to add data in cart\r\n      this.apiService.addToCart(cartData).subscribe(res => {\r\n        if (res[`code`] === 200) {\r\n          this.buyNowCartId = res[`cart_details`].id; // assigning buyNowCartId with response cart value id\r\n        }\r\n      });\r\n    } else {\r\n      // calling getCartById api to get CartDetails by cartId\r\n      // this.subscribe.push(this.apiService.getCartById(window.atob(localStorage.getItem('cartId'))).subscribe(res => {\r\n      this.subscribe.push(this.apiService.getCartById(window.atob(sessionStorage.getItem('cartId'))).subscribe(res => {\r\n        if (res[`code`] === 200) {\r\n          this.products = (JSON.parse(res[`details`].cart) as CartDetails[]); // assigning response to products\r\n          this.findGrandTotal();\r\n        }\r\n      }, err => {\r\n        this.toaster.error(err?.error?.message || err?.message);\r\n      }));\r\n    }\r\n\r\n    this.getCountries();\r\n    this.createAddressForm();\r\n  }\r\n\r\n  // function to getSelectedAddress according to addressId\r\n  getSelectedAddress(address): void {\r\n    if (address !== 'newAddress') { // checking if address is newAddress or not\r\n      this.selectedAddress = address;\r\n      this.toggleAddress = '';\r\n      this.emptyAddress = false;\r\n    } else {\r\n      this.toggleAddress = 'newAddress';\r\n      this.emptyAddress = true;\r\n      this.getUserDetails(this.userId);\r\n    }\r\n  }\r\n\r\n  // function to getCartItems from sessionStorage\r\n  getCartItems(): void {\r\n    this.products = (JSON.parse(window.atob(sessionStorage.getItem('buyNow'))) as CartDetails[]);\r\n    this.findGrandTotal();\r\n  }\r\n\r\n  // function to findGrandTotal\r\n  findGrandTotal(): void {\r\n    let productPrice = 0; // default product price\r\n\r\n    // calculating eachProduct price using forEach loop for products array\r\n    this.products.forEach((ele) => {\r\n      if (ele.productQuantity) {  // checking if productQuantity is greater than 0\r\n        // multiplying eachProduct price with eachProduct quantity and adding the result with productPrice\r\n        productPrice = ((ele.discountPrice > 0 ? ele.discountPrice : ele.price) * ele.productQuantity) + productPrice;\r\n      }\r\n    });\r\n    this.grandTotal = productPrice;\r\n    this.shippingCharges = Math.round(+(0.05 * this.grandTotal).toFixed(3)); // 5% of totalCharges\r\n    this.finalPrice = Math.round(this.grandTotal + this.shippingCharges); // adding price with shippingCharges and assigning to total\r\n    this.gstPrice = Math.round(+(0.10 * this.finalPrice).toFixed(3));\r\n    this.dealerDiscountAmount = Math.round(+(this.dealerDiscountPercentage * (this.finalPrice + this.gstPrice)).toFixed(3));\r\n    const additionalPaymentDetails = window.btoa(JSON.stringify({\r\n      subtotal_amount: this.grandTotal, \r\n      shipping_amount: this.shippingCharges, \r\n      gst_amount: this.gstPrice\r\n    }))\r\n    sessionStorage.setItem('additionalPaymentDetails', additionalPaymentDetails);\r\n  }\r\n\r\n  // function to getCountries from getCountryData function\r\n  getCountries(): void {\r\n    this.subscribe.push(this.apiService.getCountryData().subscribe(res => {\r\n      if (res) {\r\n        this.countryInfo = res[`countries`];\r\n        this.onChangeCountry('Australia');\r\n      }\r\n    }));\r\n  }\r\n\r\n  // function to getAddressList according to userId\r\n  getAddressList(userId): void {\r\n    const userData = {\r\n      user_id: +userId\r\n    };\r\n    this.subscribe.push(this.apiService.getAllAddress(userData).subscribe(res => {\r\n      if (res[`code`] === 200) {\r\n        this.addressList = res[`address`]; // assigning address response to addressList\r\n        this.spinner.hide();\r\n        if (this.addressList.length > 0) {\r\n          this.selectedAddress = res[`address`][0];\r\n          this.emptyAddress = false;\r\n        } else {\r\n          this.emptyAddress = true;\r\n          this.getSelectedAddress('newAddress');\r\n        }\r\n      }\r\n    }, err => {\r\n      this.toaster.error('No address found');\r\n      this.spinner.hide();\r\n    }));\r\n  }\r\n\r\n  getUserDetails(userId): void {\r\n    this.apiService.getUserDetails(userId).subscribe(res => {\r\n      if (res[`code`]) {\r\n        // console.log('userDetails', res[`details`])\r\n        this.patchAddressForm(res[`details`].name);\r\n      }\r\n    });\r\n  }\r\n\r\n  patchAddressForm(userName): void {\r\n    const name = userName.split(\" \");\r\n    if (name.length === 3) {\r\n      this.addressForm.patchValue({\r\n        first_name: name[0],\r\n        middle_name: name[1],\r\n        last_name: name[2]\r\n      });\r\n    } else if (name.length > 1 && name.length <= 2) {\r\n      this.addressForm.patchValue({\r\n        first_name: name[0],\r\n        last_name: name[1]\r\n      });\r\n    } else if (name.length === 1) {\r\n      this.addressForm.patchValue({\r\n        first_name: name[0]\r\n      });\r\n    }\r\n  }\r\n\r\n  // function to get countryName and statesList according to countryValue\r\n  onChangeCountry(countryValue): void {\r\n    this.cityInfo = [];\r\n    const countryIndex = this.countryInfo.findIndex(res => res.name === countryValue);\r\n    this.stateInfo = this.countryInfo[countryIndex].states;\r\n  }\r\n\r\n  // function to get stateName and cityList according to stateValue\r\n  onChangeState(stateValue): void {\r\n    const stateIndex = this.stateInfo.findIndex(res => res.name === stateValue);\r\n    this.cityInfo = this.stateInfo[stateIndex].cities;\r\n  }\r\n\r\n\r\n  // function to create addressForm\r\n  createAddressForm(): void {\r\n    this.addressForm = this.fb.group({\r\n      title: new FormControl('', Validators.required),\r\n      first_name: new FormControl('', Validators.required),\r\n      middle_name: new FormControl(''),\r\n      last_name: new FormControl('', Validators.required),\r\n      phone: new FormControl('', [Validators.pattern('[0-9 ]{10,12}'), Validators.required]),\r\n      house_no: new FormControl('', Validators.required),\r\n      city: new FormControl('', Validators.required),\r\n      state: new FormControl('', Validators.required),\r\n      pincode: new FormControl('', [Validators.pattern('[0-9 ]{4}'), Validators.required]),\r\n      country: new FormControl('Australia', Validators.required)\r\n    });\r\n  }\r\n\r\n  // function to get controls of address form\r\n  get formControl(): any {\r\n    return this.addressForm.controls;\r\n  }\r\n\r\n  onInputChange(validNumber, type): void{\r\n    let maxLength = 0;\r\n    if (type === 'phone'){\r\n      maxLength = 12;\r\n      if (validNumber.length >= maxLength){\r\n        this.addressForm.patchValue({\r\n          phone: validNumber.substring(0, 12)\r\n        });\r\n      }\r\n    }else if (type === 'zip'){\r\n      maxLength = 4;\r\n      if (validNumber.length >= maxLength){\r\n        this.addressForm.patchValue({\r\n          pincode: validNumber.substring(0, 4)\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  // function to validate all fields according to formType\r\n  validateAllFields(formGroup: FormGroup): void {\r\n    Object.keys(this.formControl).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        control.markAsTouched({ onlySelf: true });\r\n      } else if (control instanceof FormGroup) {\r\n        this.validateAllFields(control);\r\n      }\r\n    });\r\n  }\r\n\r\n  // function to save address\r\n  saveAddress(form): void {\r\n    if (form.invalid) {\r\n      this.validateAllFields(form); // if form in invalid then call validateAllfields function\r\n    } else {\r\n      form.value.user_id = +this.userId;\r\n      this.subscribe.push(this.apiService.addAddress(form.value).subscribe(res => {\r\n        if (res[`code`] === 200) {\r\n          this.toaster.success(res[`message`]);\r\n          this.getAddressList(this.userId);\r\n          this.toggleAddress = '';\r\n          form.reset();\r\n        }\r\n      }, err => {\r\n        this.toaster.error(err?.error?.message || err?.message);\r\n      }));\r\n    }\r\n  }\r\n\r\n  updateCart(): void {\r\n    const cartLocalData = JSON.parse(window.atob(sessionStorage.getItem('buyNow'))) as CartDetails[]; // assigning buyNow value to cartLocalData\r\n    let cart;\r\n    console.log(cartLocalData, 'cartLocal')\r\n    const accessoriesToAdd = [];  // accessoriesToAdd[] to add accessory\r\n    const sparesToAdd = []; // sparesToAdd[] to add spare\r\n    if (cartLocalData !== null) { // checking if cartLocalData is not null\r\n      cartLocalData.forEach(cartData => {\r\n        if (cartData.type === 'product') {\r\n          // assigning value in cart\r\n          cart = new CartDetails(\r\n            cartData.productId,\r\n            cartData.code,\r\n            cartData.description,\r\n            cartData.price,\r\n            cartData.discountPrice,\r\n            cartData.type,\r\n            cartData.pole,\r\n            cartData.flow,\r\n            cartData.head,\r\n            cartData.speed,\r\n            cartData.power,\r\n            cartData.engineSpeed,\r\n            cartData.enginekW,\r\n            cartData.driveType,\r\n            cartData.productQuantity\r\n          );\r\n        } else if (cartData.type === 'accessory') {\r\n          accessoriesToAdd.push(cartData); // pushing cartData of type accessory in accessoriesToAdd array\r\n        } else if (cartData.type === 'spare') {\r\n          sparesToAdd.push(cartData); // pushing cartData of type spare in sparesToAdd array\r\n        }\r\n      });\r\n    }\r\n    // this.subscribe.push(this.apiService.getCartById(window.atob(localStorage.getItem('cartId'))).subscribe(res => {\r\n    this.subscribe.push(this.apiService.getCartById(window.atob(sessionStorage.getItem('cartId'))).subscribe(res => {\r\n      if (res[`code`] === 200) {\r\n        let cartDetails = [];\r\n        cartDetails = (JSON.parse(res[`details`].cart) as CartDetails[]);  // assigning response value to cartDetails\r\n        console.log(cartDetails, 'cartDetails');\r\n        if (cartDetails.length <= 0) {  // checking cartDetails length is smaller or equal to 0\r\n          // (...)spread operator takes in an iterable (e.g an array) and expands it into individual elements.\r\n          cartDetails.push(cart); // pushing cart value in cartDetails\r\n          cartDetails.push(...accessoriesToAdd); // pushing each accessoriesToAdd value in cartDetails\r\n          cartDetails.push(...sparesToAdd); // pushing each sparesToAdd value in cartDetails\r\n        } else {\r\n          const cartAccessoryDataSet = new Array(); // creating new accessoryArray\r\n          const cartSpareDataSet = new Array(); // creating new spareArray\r\n          let cartProductDataSet; // variable to set productData\r\n          let spareNotExist = true; // check if spare type is present in cartLocalData\r\n          let accessoryNotExist = true; // check if accessory type is present in cartLocalData\r\n\r\n          for (let i = 0; i < cartDetails.length; i++) {\r\n            if (cartDetails[i].type === 'product') { // checking type of product\r\n              // checking cartDetails(got by getCartDetails api) with buyNow cartDetails(from sessionStorage)\r\n              if ((cartDetails[i].driveType === cart.driveType) && (cartDetails[i].code === cart.code) &&\r\n                (cartDetails[i].pole === cart.pole)) {\r\n                cartDetails[i].productQuantity++;\r\n              } else {\r\n                cartProductDataSet = cart;\r\n              }\r\n            } else if (cartDetails[i].type === 'accessory') {\r\n              accessoryNotExist = false;\r\n              for (let j = 0; j < accessoriesToAdd.length; j++) {\r\n                if (accessoriesToAdd[j].description === cartDetails[i].description\r\n                  && accessoriesToAdd[j].pole === cartDetails[i].pole\r\n                  && accessoriesToAdd[j].driveType === cartDetails[i].driveType) {\r\n                  cartDetails[i].productQuantity++;\r\n                } else {\r\n                  /* some() is used to checks whether at least one of the elements of the array satisfies\r\n                      the condition then returns true (and does not check the remaining values) otherwise return false*/\r\n                  if (!cartDetails.some(res => (res.description === accessoriesToAdd[j].description)\r\n                    && (res.pole === accessoriesToAdd[j].pole) && (res.driveType === accessoriesToAdd[j].driveType)) &&\r\n                    (!cartAccessoryDataSet.some(res => (res.description === accessoriesToAdd[j].description)\r\n                      && (res.pole === accessoriesToAdd[j].pole) && (res.driveType === accessoriesToAdd[j].driveType)))) {\r\n                    cartAccessoryDataSet.push(accessoriesToAdd[j]);\r\n                  }\r\n                }\r\n              }\r\n            } else if (cartDetails[i].type === 'spare') {\r\n              spareNotExist = false;\r\n              for (let j = 0; j < sparesToAdd.length; j++) {\r\n                if (sparesToAdd[j].description === cartDetails[i].description\r\n                  && sparesToAdd[j].pole === cartDetails[i].pole\r\n                  && sparesToAdd[j].driveType === cartDetails[i].driveType) {\r\n                  cartDetails[i].productQuantity++;\r\n                } else {\r\n                  /* some() is used to checks whether at least one of the elements of the array satisfies\r\n                      the condition then returns true (and does not check the remaining values) otherwise return false*/\r\n                  if ((!cartDetails.some(res => (res.description === sparesToAdd[j].description)\r\n                    && (res.pole === sparesToAdd[j].pole) && (res.driveType === sparesToAdd[j].driveType))) &&\r\n                    (!cartSpareDataSet.some(res => (res.description === sparesToAdd[j].description) &&\r\n                      (res.pole === sparesToAdd[j].pole) && (res.driveType === sparesToAdd[j].driveType)))) {\r\n                    cartSpareDataSet.push(sparesToAdd[j]);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          // checking to push if cartAccessoryDataSet length is greater than 0\r\n          if (cartAccessoryDataSet.length > 0) {\r\n            cartDetails.push(...cartAccessoryDataSet);\r\n          }\r\n\r\n          // checking to push if cartSpareDataSet length is greater than 0\r\n          if (cartSpareDataSet.length > 0) {\r\n            cartDetails.push(...cartSpareDataSet);\r\n          }\r\n\r\n          // checking to push if cartProductDataSet is not undefined\r\n          if (cartProductDataSet.length > 0) {\r\n            cartDetails.push(cartProductDataSet);\r\n            console.log(cartDetails, 'push')\r\n          }\r\n\r\n          // checking to push if accessory exist\r\n          if (accessoryNotExist) {\r\n            cartDetails.push(...accessoriesToAdd);\r\n          }\r\n\r\n          // checking to push if spare exist\r\n          if (spareNotExist) {\r\n            cartDetails.push(...sparesToAdd);\r\n          }\r\n        }\r\n\r\n        const updateCart = {\r\n          // id: window.atob(localStorage.getItem('cartId')),\r\n          // user_id: window.atob(localStorage.getItem('id')),\r\n          id: window.atob(sessionStorage.getItem('cartId')),\r\n          user_id: window.atob(sessionStorage.getItem('id')),\r\n          cart: JSON.stringify(cartDetails)\r\n        };\r\n        // calling updateCart api\r\n        return this.subscribe.push(this.apiService.updateCart(updateCart).subscribe(response => {\r\n          if (response[`code`] === 200) {\r\n            this.buyNowCartId = updateCart.id;\r\n            sessionStorage.removeItem('buyNow');\r\n            this.apiService.totalItemsInCart();\r\n          }\r\n        }));\r\n      }\r\n    }));\r\n  }\r\n\r\n  // checkOut function to check whether any address is selected or not\r\n  checkOut(): void {\r\n    if (this.toggleAddress === '') {\r\n      this.toggleCanDeactivate = false;\r\n      if (this.buyNowCartId !== '') {\r\n        this.route.navigate(['/cart/payment', this.selectedAddress?.id, this.buyNowCartId]);\r\n      } else {\r\n        this.route.navigate(['/cart/payment', this.selectedAddress?.id, window.atob(sessionStorage.getItem('cartId'))]);\r\n      }\r\n    } else {\r\n      this.toaster.success('Please add and select one address to continue');\r\n    }\r\n  }\r\n\r\n  // canDeactivate router function to  check is navigation allowed or not\r\n  canDeactivate(): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.toggleCanDeactivate) { // checking toggleCanDeactivate value\r\n      // if (localStorage.getItem('cartId')) { // checking cartId is present or not\r\n      if (sessionStorage.getItem('cartId')) { // checking cartId is present or not\r\n        if (sessionStorage.getItem('buyNow')) { // checking buyNow is present or not\r\n          // tslint:disable-next-line: max-line-length\r\n          const cartLocalData = JSON.parse(window.atob(sessionStorage.getItem('buyNow'))) as CartDetails[]; // assigning buyNow value to cartLocalData\r\n          const accessoriesToAdd = [];  // accessoriesToAdd[] to add accessory\r\n          const sparesToAdd = []; // sparesToAdd[] to add spare;\r\n          let cart;\r\n          if (cartLocalData !== null) { // checking if cartLocalData is not null\r\n            cartLocalData.forEach(cartData => {\r\n              if (cartData.type === 'product') {\r\n                // assigning value in cart\r\n                cart = new CartDetails(\r\n                  cartData.productId,\r\n                  cartData.code,\r\n                  cartData.description,\r\n                  cartData.price,\r\n                  cartData.discountPrice,\r\n                  cartData.type,\r\n                  cartData.pole,\r\n                  cartData.flow,\r\n                  cartData.head,\r\n                  cartData.speed,\r\n                  cartData.power,\r\n                  cartData.engineSpeed,\r\n                  cartData.enginekW,\r\n                  cartData.driveType,\r\n                  cartData.productQuantity\r\n                );\r\n              } else if (cartData.type === 'accessory') {\r\n                accessoriesToAdd.push(cartData); // pushing cartData of type accessory in accessoriesToAdd array\r\n              } else if (cartData.type === 'spare') {\r\n                sparesToAdd.push(cartData); // pushing cartData of type spare in sparesToAdd array\r\n              }\r\n            });\r\n          }\r\n          // creating Promise to get return value\r\n          return new Promise((resolve) => {\r\n            // this.subscribe.push(this.apiService.getCartById(window.atob(localStorage.getItem('cartId'))).subscribe(res => {\r\n            this.subscribe.push(this.apiService.getCartById(window.atob(sessionStorage.getItem('cartId'))).subscribe(res => {\r\n              if (res[`code`] === 200) {\r\n                let cartDetails = [];\r\n                cartDetails = (JSON.parse(res[`details`].cart) as CartDetails[]);  // assigning response value to cartDetails\r\n                console.log('cartDetails', cartDetails);\r\n                if (cartDetails.length <= 0) {  // checking cartDetails length is smaller or equal to 0\r\n                  // (...)spread operator takes in an iterable (e.g an array) and expands it into individual elements.\r\n                  cartDetails.push({...cart}); // pushing cart value in cartDetails\r\n                  cartDetails.push(...accessoriesToAdd); // pushing each accessoriesToAdd value in cartDetails\r\n                  cartDetails.push(...sparesToAdd); // pushing each sparesToAdd value in cartDetails\r\n                }\r\n                else {\r\n                  const cartAccessoryDataSet = new Array(); // creating new accessoryArray\r\n                  const cartSpareDataSet = new Array(); // creating new spareArray\r\n                  let cartProductDataSet = {}; // variable to set productData\r\n                  let spareNotExist = true; // check if spare type is present in cartLocalData\r\n                  let accessoryNotExist = true; // check if accessory type is present in cartLocalData\r\n                  let cartNotExist = true;\r\n\r\n                  for (let i = 0; i < cartDetails.length; i++) {\r\n                    if (cartDetails[i].type === 'product') { // checking type of product\r\n                      // checking cartDetails(got by getCartDetails api) with buyNow cartDetails(from sessionStorage)\r\n                      cartNotExist = false;\r\n                      if (((cartDetails[i].driveType === '' || cartDetails[i].driveType)\r\n                        === (cart.driveType === '' || cart.driveType))\r\n                        && (cartDetails[i].code === cart.code) &&\r\n                        (cartDetails[i].pole === cart.pole)) {\r\n                        cartDetails[i].productQuantity++;\r\n                      } else {\r\n                        cartProductDataSet = cart;\r\n                      }\r\n                    } else if (cartDetails[i].type === 'accessory') {\r\n                      accessoryNotExist = false;\r\n                      for (let j = 0; j < accessoriesToAdd.length; j++) {\r\n                        if (accessoriesToAdd[j].description === cartDetails[i].description\r\n                          && accessoriesToAdd[j].pole === cartDetails[i].pole\r\n                          && accessoriesToAdd[j].driveType === cartDetails[i].driveType) {\r\n                          cartDetails[i].productQuantity++;\r\n                        } else {\r\n                          /* some() is used to checks whether at least one of the elements of the array satisfies\r\n                              the condition then returns true (and does not check the remaining values) otherwise return false*/\r\n                          if (!cartDetails.some(res => (res.description === accessoriesToAdd[j].description)\r\n                            && (res.pole === accessoriesToAdd[j].pole) && (res.driveType === accessoriesToAdd[j].driveType)) &&\r\n                            (!cartAccessoryDataSet.some(res => (res.description === accessoriesToAdd[j].description)\r\n                              && (res.pole === accessoriesToAdd[j].pole) && (res.driveType === accessoriesToAdd[j].driveType)))) {\r\n                            cartAccessoryDataSet.push(accessoriesToAdd[j]);\r\n                          }\r\n                        }\r\n                      }\r\n                    } else if (cartDetails[i].type === 'spare') {\r\n                      spareNotExist = false;\r\n                      for (let j = 0; j < sparesToAdd.length; j++) {\r\n                        if (sparesToAdd[j].description === cartDetails[i].description\r\n                          && sparesToAdd[j].pole === cartDetails[i].pole\r\n                          && sparesToAdd[j].driveType === cartDetails[i].driveType) {\r\n                          cartDetails[i].productQuantity++;\r\n                        } else {\r\n                          /* some() is used to checks whether at least one of the elements of the array satisfies\r\n                              the condition then returns true (and does not check the remaining values) otherwise return false*/\r\n                          if ((!cartDetails.some(res => (res.description === sparesToAdd[j].description)\r\n                            && (res.pole === sparesToAdd[j].pole) && (res.driveType === sparesToAdd[j].driveType))) &&\r\n                            (!cartSpareDataSet.some(res => (res.description === sparesToAdd[j].description) &&\r\n                              (res.pole === sparesToAdd[j].pole) && (res.driveType === sparesToAdd[j].driveType)))) {\r\n                            cartSpareDataSet.push(sparesToAdd[j]);\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n\r\n                  // checking to push if cartAccessoryDataSet length is greater than 0\r\n                  if (cartAccessoryDataSet.length > 0) {\r\n                    cartDetails.push(...cartAccessoryDataSet);\r\n                  }\r\n\r\n                  // checking to push if cartSpareDataSet length is greater than 0\r\n                  if (cartSpareDataSet.length > 0) {\r\n                    cartDetails.push(...cartSpareDataSet);\r\n                  }\r\n\r\n                  // checking to push if cartProductDataSet is not undefined\r\n                  if (Object.keys(cartProductDataSet).length > 0) {\r\n                    cartDetails.push({...cartProductDataSet});\r\n                  }\r\n\r\n                  // checking to push if accessory exist\r\n                  if (accessoryNotExist) {\r\n                    cartDetails.push(...accessoriesToAdd);\r\n                  }\r\n\r\n                  // checking to push if spare exist\r\n                  if (spareNotExist) {\r\n                    cartDetails.push(...sparesToAdd);\r\n                  }\r\n\r\n                  if (cartNotExist) {\r\n                    cartDetails.push({...cart});\r\n                  }\r\n                }\r\n\r\n                const updateCart = {\r\n                  // id: window.atob(localStorage.getItem('cartId')),\r\n                  // user_id: window.atob(localStorage.getItem('id')),\r\n                  id: window.atob(sessionStorage.getItem('cartId')),\r\n                  user_id: window.atob(sessionStorage.getItem('id')),\r\n                  cart: JSON.stringify(cartDetails)\r\n                };\r\n                // calling updateCart api\r\n                console.log(cartDetails, 'ooo');\r\n                return this.subscribe.push(this.apiService.updateCart(updateCart).subscribe(response => {\r\n                  if (response[`code`] === 200) {\r\n                    sessionStorage.removeItem('buyNow');\r\n                    this.apiService.totalItemsInCart();\r\n                    return resolve(true);\r\n                  }\r\n                }));\r\n              }\r\n            }));\r\n\r\n          });\r\n        }\r\n        else {\r\n          return true;\r\n        }\r\n      }\r\n      else {\r\n        // localStorage.setItem('cartId', window.btoa(this.buyNowCartId)); // setting buyNowCartId as cartId in localStorage\r\n        sessionStorage.setItem('cartId', window.btoa(this.buyNowCartId)); // setting buyNowCartId as cartId in sessionStorage\r\n        this.apiService.totalItemsInCart(); // calling totalItemsInCart function to update cartQuantity'\r\n        sessionStorage.removeItem('buyNow');\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // used to unsubscribe the subscription\r\n  ngOnDestroy(): void {\r\n    // Called once, before the instance is destroyed.\r\n    // Add 'implements OnDestroy' to the class.\r\n    this.subscribe.forEach(s => {\r\n      if (s) {\r\n        s.unsubscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<ngx-spinner\r\n  bdColor=\"rgb(0,0,0)\"\r\n  size=\"medium\"\r\n  color=\"#2e94ef\"\r\n  type=\"ball-newton-cradle\"\r\n  [fullScreen]=\"true\"\r\n  ><p style=\"color: white\">Loading...</p></ngx-spinner\r\n>\r\n\r\n<div class=\"main-container cartpage addresspage\">\r\n  <div class=\"breadcrum\">\r\n    <div class=\"container\">\r\n      <p>\r\n        <a href=\"javascript:void(0)\" [routerLink]=\"['/home']\">Home</a> /\r\n        <a href=\"javascript:void(0)\" [routerLink]=\"['/cart']\">Cart</a>\r\n        <span>/</span> Address\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"cart-scale\">\r\n    <div class=\"container\">\r\n      <div class=\"cart-scale-inner\">\r\n        <div class=\"scale-no active-scale\">\r\n          <a style=\"pointer-events: none\">1</a><small>Cart</small>\r\n        </div>\r\n        <div class=\"scale-no\">\r\n          <a style=\"pointer-events: none\">2</a><small>Address</small>\r\n        </div>\r\n        <div class=\"scale-no\">\r\n          <a style=\"pointer-events: none\">3</a><small>Payment</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"cart-section\">\r\n    <div class=\"container\">\r\n      <div class=\"cart-inner\">\r\n        <div class=\"cart\">\r\n          <div class=\"address-row same-add-row\">\r\n            <h3>Use saved addresses</h3>\r\n            <div class=\"same-address\">\r\n              <div\r\n                class=\"address-box\"\r\n                *ngFor=\"\r\n                  let eachAddress of addressList;\r\n                  let addressCount = index\r\n                \"\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"address\"\r\n                  id=\"{{ 'address-' + addressCount }}\"\r\n                  (change)=\"getSelectedAddress(eachAddress)\"\r\n                  [checked]=\"addressCount === 0\"\r\n                />\r\n                <label for=\"{{ 'address-' + addressCount }}\"\r\n                  >{{ eachAddress?.house_no }} {{ eachAddress?.city }}\r\n                  {{ eachAddress?.state }} {{ eachAddress?.country }}\r\n                  {{ eachAddress?.pincode }}</label\r\n                >\r\n              </div>\r\n\r\n              <div class=\"address-box\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"address\"\r\n                  id=\"address\"\r\n                  (change)=\"getSelectedAddress('newAddress')\"\r\n                  [checked]=\"emptyAddress\"\r\n                />\r\n                <label for=\"address\">New Address</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            class=\"address-row\"\r\n            [ngStyle]=\"{\r\n              display: toggleAddress === 'newAddress' ? 'flex' : 'none'\r\n            }\"\r\n          >\r\n            <h3>Contact Detail</h3>\r\n\r\n            <form [formGroup]=\"addressForm\">\r\n              <div class=\"address-feild\">\r\n                <label>Title <span>*</span></label>\r\n                <select\r\n                  formControlName=\"title\"\r\n                  [ngClass]=\"\r\n                    formControl?.title?.invalid &&\r\n                    (formControl?.title?.touched || formControl?.title?.dirty)\r\n                      ? 'red'\r\n                      : formControl?.title?.valid &&\r\n                        (formControl?.title?.touched ||\r\n                          formControl?.title?.dirty)\r\n                      ? 'green'\r\n                      : ''\r\n                  \"\r\n                  required\r\n                >\r\n                  <option value=\"\" selected disabled>Select title</option>\r\n                  <option value=\"Mr\">Mr.</option>\r\n                  <option value=\"Ms\">Ms.</option>\r\n                  <option value=\" \"></option>\r\n                </select>\r\n                <p\r\n                  class=\"error-addressMsg\"\r\n                  *ngIf=\"\r\n                    formControl?.title?.invalid &&\r\n                    (formControl?.title?.touched || formControl?.title?.dirty)\r\n                  \"\r\n                >\r\n                  Select title\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"name-container\">\r\n                <div class=\"address-feild address2\">\r\n                  <label>First Name<span>*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    formControlName=\"first_name\"\r\n                    appTextOnly\r\n                    [ngClass]=\"\r\n                      formControl?.first_name?.errors?.required &&\r\n                      (formControl?.first_name?.touched ||\r\n                        formControl?.first_name?.dirty)\r\n                        ? 'red'\r\n                        : formControl?.first_name?.valid &&\r\n                          (formControl?.first_name?.touched ||\r\n                            formControl?.first_name?.dirty)\r\n                        ? 'green'\r\n                        : ''\r\n                    \"\r\n                    required\r\n                  />\r\n                  <ng-container\r\n                    *ngIf=\"\r\n                      formControl?.first_name?.invalid &&\r\n                      (formControl?.first_name?.touched ||\r\n                        formControl?.first_name?.dirty)\r\n                    \"\r\n                  >\r\n                    <p\r\n                      class=\"error-addressMsg\"\r\n                      *ngIf=\"formControl?.first_name?.errors.required\"\r\n                    >\r\n                      First name is required\r\n                    </p>\r\n                  </ng-container>\r\n                </div>\r\n                <div class=\"address-feild address2\">\r\n                  <label>Middle Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Middle Name\"\r\n                    appTextOnly\r\n                    formControlName=\"middle_name\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"address-feild address2\">\r\n                  <label>Last Name <span>*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    formControlName=\"last_name\"\r\n                    appTextOnly\r\n                    [ngClass]=\"\r\n                      formControl?.last_name?.errors?.required &&\r\n                      (formControl?.last_name?.touched ||\r\n                        formControl?.last_name?.dirty)\r\n                        ? 'red'\r\n                        : formControl?.last_name?.valid &&\r\n                          (formControl?.last_name?.touched ||\r\n                            formControl?.last_name?.dirty)\r\n                        ? 'green'\r\n                        : ''\r\n                    \"\r\n                    required\r\n                  />\r\n                  <ng-container\r\n                    *ngIf=\"\r\n                      formControl?.last_name?.invalid &&\r\n                      (formControl?.last_name?.touched ||\r\n                        formControl?.last_name?.dirty)\r\n                    \"\r\n                  >\r\n                    <p\r\n                      class=\"error-addressMsg\"\r\n                      *ngIf=\"formControl?.last_name?.errors.required\"\r\n                    >\r\n                      Last name is required\r\n                    </p>\r\n                  </ng-container>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"address-feild\">\r\n                <label>Contact Number <span>*</span></label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Contact Number\"\r\n                  appNumOnly\r\n                  (input)=\"onInputChange($event.target.value, 'phone')\"\r\n                  formControlName=\"phone\"\r\n                  [ngClass]=\"\r\n                    (formControl?.phone?.errors?.required ||\r\n                      formControl?.phone?.errors?.pattern) &&\r\n                    (formControl?.phone?.touched || formControl?.phone?.dirty)\r\n                      ? 'red'\r\n                      : formControl?.phone?.valid &&\r\n                        (formControl?.phone?.touched ||\r\n                          formControl?.phone?.dirty)\r\n                      ? 'green'\r\n                      : ''\r\n                  \"\r\n                  required\r\n                />\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    formControl?.phone?.invalid &&\r\n                    (formControl?.phone?.touched || formControl?.phone?.dirty)\r\n                  \"\r\n                >\r\n                  <p\r\n                    class=\"error-addressMsg\"\r\n                    *ngIf=\"formControl?.phone?.errors.required\"\r\n                  >\r\n                    Phone number is required\r\n                  </p>\r\n                  <p\r\n                    class=\"error-addressMsg\"\r\n                    *ngIf=\"formControl?.phone?.errors.pattern\"\r\n                  >\r\n                    Enter valid phone number\r\n                  </p>\r\n                </ng-container>\r\n              </div>\r\n\r\n              <h3>Address</h3>\r\n\r\n              <div class=\"address-feild\">\r\n                <label\r\n                  >Address (House No., Building , Street, Area)\r\n                  <span>*</span></label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Address\"\r\n                  formControlName=\"house_no\"\r\n                  [ngClass]=\"\r\n                    formControl?.house_no?.invalid &&\r\n                    (formControl?.house_no?.touched ||\r\n                      formControl?.house_no?.dirty)\r\n                      ? 'red'\r\n                      : formControl?.house_no?.valid &&\r\n                        (formControl?.house_no?.touched ||\r\n                          formControl?.house_no?.dirty)\r\n                      ? 'green'\r\n                      : ''\r\n                  \"\r\n                  required\r\n                />\r\n                <p\r\n                  class=\"error-addressMsg\"\r\n                  *ngIf=\"\r\n                    formControl?.house_no?.invalid &&\r\n                    (formControl?.house_no?.touched ||\r\n                      formControl?.house_no?.dirty)\r\n                  \"\r\n                >\r\n                  Address is required\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"address-feild\">\r\n                <label>Country <span>*</span></label>\r\n                <select\r\n                  formControlName=\"country\"\r\n                  (change)=\"onChangeCountry($event.target.value)\"\r\n                  [ngClass]=\"\r\n                    formControl?.country?.invalid &&\r\n                    (formControl?.country?.touched ||\r\n                      formControl?.country?.dirty)\r\n                      ? 'red'\r\n                      : formControl?.country?.valid &&\r\n                        (formControl?.country?.touched ||\r\n                          formControl?.country?.dirty)\r\n                      ? 'green'\r\n                      : ''\r\n                  \"\r\n                  required\r\n                >\r\n                  <option\r\n                    *ngFor=\"\r\n                      let eachCountry of countryInfo;\r\n                      let countryCount = index\r\n                    \"\r\n                    value=\"{{ eachCountry?.name }}\"\r\n                  >\r\n                    {{ eachCountry.name }}\r\n                  </option>\r\n                </select>\r\n                <p\r\n                  class=\"error-addressMsg\"\r\n                  *ngIf=\"\r\n                    formControl?.country?.invalid &&\r\n                    (formControl?.country?.touched ||\r\n                      formControl?.country?.dirty)\r\n                  \"\r\n                >\r\n                  Select country from list\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"address-feild\">\r\n                <label>State <span>*</span></label>\r\n                <select\r\n                  formControlName=\"state\"\r\n                  (change)=\"onChangeState($event.target.value)\"\r\n                  [ngClass]=\"\r\n                    formControl?.state?.invalid &&\r\n                    (formControl?.state?.touched || formControl?.state?.dirty)\r\n                      ? 'red'\r\n                      : formControl?.state?.valid &&\r\n                        (formControl?.state?.touched ||\r\n                          formControl?.state?.dirty)\r\n                      ? 'green'\r\n                      : ''\r\n                  \"\r\n                  required\r\n                >\r\n                  <option value=\"\" selected disabled>\r\n                    Please select state\r\n                  </option>\r\n                  <option\r\n                    *ngFor=\"let eachState of stateInfo; let stateCount = index\"\r\n                    value=\"{{ eachState?.name }}\"\r\n                  >\r\n                    {{ eachState.name }}\r\n                  </option>\r\n                </select>\r\n                <p\r\n                  class=\"error-addressMsg\"\r\n                  *ngIf=\"\r\n                    formControl?.state?.invalid &&\r\n                    (formControl?.state?.touched || formControl?.state?.dirty)\r\n                  \"\r\n                >\r\n                  Select state from list\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"address-feild\">\r\n                <label>City <span>*</span></label>\r\n                <select\r\n                  formControlName=\"city\"\r\n                  [ngClass]=\"\r\n                    formControl?.city?.invalid &&\r\n                    (formControl?.city?.touched || formControl?.city?.dirty)\r\n                      ? 'red'\r\n                      : formControl?.city?.valid &&\r\n                        (formControl?.city?.touched || formControl?.city?.dirty)\r\n                      ? 'green'\r\n                      : ''\r\n                  \"\r\n                  required\r\n                >\r\n                  <option value=\"\" selected disabled>\r\n                    Please select state first\r\n                  </option>\r\n                  <option\r\n                    *ngFor=\"let eachCity of cityInfo; let cityCount = index\"\r\n                    value=\"{{ eachCity?.name }}\"\r\n                  >\r\n                    {{ eachCity.name }}\r\n                  </option>\r\n                </select>\r\n                <p\r\n                  class=\"error-addressMsg\"\r\n                  *ngIf=\"\r\n                    formControl?.city?.invalid &&\r\n                    (formControl?.city?.touched || formControl?.city?.dirty)\r\n                  \"\r\n                >\r\n                  Select city\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"address-feild\">\r\n                <label>Postal code<span>*</span></label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"1234\"\r\n                  appNumOnly\r\n                  formControlName=\"pincode\"\r\n                  (input)=\"onInputChange($event.target.value, 'zip')\"\r\n                  [ngClass]=\"\r\n                    (formControl?.pincode?.errors?.required ||\r\n                      formControl?.pincode?.errors?.pattern) &&\r\n                    (formControl?.pincode?.touched ||\r\n                      formControl?.pincode?.dirty)\r\n                      ? 'red'\r\n                      : formControl?.pincode?.valid &&\r\n                        (formControl?.pincode?.touched ||\r\n                          formControl?.pincode?.dirty)\r\n                      ? 'green'\r\n                      : ''\r\n                  \"\r\n                  required\r\n                />\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    formControl?.pincode?.invalid &&\r\n                    (formControl?.pincode?.touched ||\r\n                      formControl?.pincode?.dirty)\r\n                  \"\r\n                >\r\n                  <p\r\n                    class=\"error-addressMsg\"\r\n                    *ngIf=\"formControl?.pincode?.errors.required\"\r\n                  >\r\n                    Postal code is required\r\n                  </p>\r\n                  <p\r\n                    class=\"error-addressMsg\"\r\n                    *ngIf=\"formControl?.pincode?.errors.pattern\"\r\n                  >\r\n                    Enter valid postal code\r\n                  </p>\r\n                </ng-container>\r\n              </div>\r\n            </form>\r\n            <div class=\"blue-button\" (click)=\"saveAddress(addressForm)\">\r\n              Save this address\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"price-detail\" *ngIf=\"products.length > 0\">\r\n          <h3 class=\"price-title\">Price Detail</h3>\r\n\r\n          <div class=\"price-row\" *ngFor=\"let eachProduct of products\">\r\n            <div\r\n              class=\"left-price\"\r\n              *ngIf=\"eachProduct?.type !== 'spare'; else productSpare\"\r\n            >\r\n              <h3>{{ eachProduct?.description }}</h3>\r\n              <p *ngIf=\"eachProduct?.driveType !== ''\">\r\n                ({{ eachProduct?.driveType }})\r\n              </p>\r\n            </div>\r\n\r\n            <ng-template #productSpare>\r\n              <div class=\"left-price\">\r\n                <h3>{{ eachProduct?.code }}</h3>\r\n                <p *ngIf=\"eachProduct?.description !== ''\">\r\n                  ({{ eachProduct?.description }})\r\n                </p>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <div class=\"right-price\">\r\n              <h3>\r\n                $\r\n                {{\r\n                  eachProduct?.productQuantity *\r\n                    (eachProduct?.discountPrice > 0\r\n                      ? eachProduct?.discountPrice\r\n                      : eachProduct?.price)\r\n                }}\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <div class=\"price-row total-price\">\r\n            <div class=\"left-price-spare\">\r\n              <h3>Sub Total</h3>\r\n              <h3>${{ grandTotal }}</h3>\r\n            </div>\r\n            <div class=\"left-price-spare\">\r\n              <h3>Shipping & Handling</h3>\r\n              <h3>${{ shippingCharges }}</h3>\r\n            </div>\r\n            <div class=\"left-price-spare\">\r\n              <h3>Total (including GST@10%) <br />(In AUD)</h3>\r\n              <h3>${{ finalPrice + gstPrice }}</h3>\r\n            </div>\r\n            <div class=\"left-price-spare\" *ngIf=\"applyDealerDiscount\">\r\n              <h3>\r\n                Dealer Discount (10%) <br />\r\n                (In AUD)\r\n              </h3>\r\n              <h3>${{ finalPrice + gstPrice - dealerDiscountAmount }}</h3>\r\n            </div>\r\n          </div>\r\n          <button *ngIf=\"emptyAddress\" disabled>\r\n            <a class=\"tooltip\"\r\n              >Checkout\r\n              <span class=\"tooltiptext\"\r\n                >Please enter your address to continue</span\r\n              ></a\r\n            >\r\n          </button>\r\n          <button *ngIf=\"!emptyAddress\">\r\n            <a class=\"tooltip\" (click)=\"checkOut()\">Checkout</a>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\n\r\nexport class RouteGuard implements CanActivate {\r\n\r\n  constructor(private toaster: ToastrService, private router: Router){\r\n\r\n  }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n    // to guard the route if user-id present the allow entry to particular component otherwise navigate to sign-in.\r\n    if (sessionStorage.getItem('id')){\r\n      return true;\r\n    }else{\r\n      this.toaster.success('Please sign-in to continue');\r\n      this.router.navigate(['/sign-in']);\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  ViewChild,\r\n  QueryList,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { CartDetails } from 'src/app/dataModels/cart-details';\r\nimport { ApiService } from '../../../services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-cart-details',\r\n  templateUrl: './cart-details.component.html',\r\n  styleUrls: ['./cart-details.component.css'],\r\n})\r\nexport class CartDetailsComponent implements OnInit, OnDestroy {\r\n  @ViewChild('input') inputList: QueryList<ElementRef>;\r\n\r\n  subscribe: Subscription[] = []; // used to store subscription\r\n\r\n  grandTotal: number = 0; // used to store totalPrice\r\n  shippingCharges: number = 0; // default shipping charges value\r\n  finalPrice: number = 0; // default final Price\r\n  productQuantity: number = 0; // used to store the product quantity\r\n\r\n  products: CartDetails[] = []; // assign product to be of CartDetails array type\r\n  deleteItemIndex: number; // used to store the item index number to be deleted\r\n  toggleBtn: boolean = false; // used to show/hide buttons according to user signIn or not\r\n  showDeleteMsg: boolean = false; // used to show/hide delete popup content\r\n  gstPrice: number;\r\n  applyDealerDiscount: boolean = false; // used to apply for dealer discount\r\n  dealerDiscountAmount: number = 0; // initial dealer discount\r\n  dealerDiscountPercentage: number ;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // if (localStorage.getItem('id')) { // checking if userId is present or not\r\n    if (sessionStorage.getItem('id')) {\r\n      // checking if userId is present or not\r\n      // console.log('My iD', window.atob(sessionStorage.getItem('id')))\r\n      this.toggleBtn = true; // assign toggleBtn to true\r\n      // if (localStorage.getItem('cartId')) { // checking cartId is present or not\r\n      if (sessionStorage.getItem('cartId')) {\r\n        // checking cartId is present or not\r\n        if (\r\n          window.atob(sessionStorage.getItem('userType')) ===\r\n            'Dealer' &&\r\n          window.atob(sessionStorage.getItem('userStatus')) === 'D'\r\n        ) {\r\n          this.applyDealerDiscount = true;\r\n          if (window.atob(sessionStorage.getItem('userDiscount')) === null) {\r\n            this.apiService.dealerDiscount().subscribe(res => {\r\n              if (res[`return`] === true) {\r\n                this.dealerDiscountPercentage = res[`dealer_discount`];\r\n                this.dealerDiscountPercentage = this.dealerDiscountPercentage * 0.01;\r\n              }\r\n            })\r\n          } else {\r\n            let userDiscount = window.atob(sessionStorage.getItem('userDiscount'));\r\n            this.dealerDiscountPercentage = +userDiscount * 0.01;\r\n          }\r\n        }\r\n        if (sessionStorage.getItem('cart')) {\r\n          // checking cart data is present or not\r\n          // console.log('my cart', window.atob(sessionStorage.getItem('cart')))\r\n          // console.log('my cartId', window.atob(sessionStorage.getItem('cartId')))\r\n          // console.log('userId', window.atob(sessionStorage.getItem('id')))\r\n          this.updateCartDetails(\r\n            window.atob(sessionStorage.getItem('cart')),\r\n            'session'\r\n          );\r\n        } else {\r\n          // getting data from cartResolver\r\n          this.subscribe.push(\r\n            this.activatedRoute.data.subscribe((res: CartDetails[]) => {\r\n              this.products = res[`cartData`];\r\n              this.insertImages(this.products);\r\n              console.log('products', this.products);\r\n              this.getProductQuantity();\r\n              this.findGrandTotal();\r\n            })\r\n          );\r\n        }\r\n      } else {\r\n        this.getCartItems();\r\n        if (this.products.length > 0) {\r\n          const cartData = {\r\n            // user_id: window.atob(localStorage.getItem('id')),\r\n            user_id: window.atob(sessionStorage.getItem('id')),\r\n            cart: JSON.stringify(this.products),\r\n          };\r\n          // calling addToCart api to add items to cart\r\n          this.subscribe.push(\r\n            this.apiService.addToCart(cartData).subscribe((res) => {\r\n              if (res[`code`] === 200) {\r\n                sessionStorage.removeItem('cart');\r\n                // localStorage.setItem('cartId', window.btoa(res[`cart_details`].id));\r\n                sessionStorage.setItem(\r\n                  'cartId',\r\n                  window.btoa(res[`cart_details`].id)\r\n                );\r\n                this.products = JSON.parse(res[`cart_details`].cart);\r\n                this.getProductQuantity();\r\n                this.findGrandTotal();\r\n                this.apiService.totalItemsInCart();\r\n              }\r\n            })\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      // if (localStorage.getItem('cardId') === null) {\r\n      if (sessionStorage.getItem('cardId') === null) {\r\n        this.getCartItems();\r\n        this.getProductQuantity();\r\n        this.toggleBtn = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  insertImages(products): void {\r\n    let pumpModel;\r\n    products.forEach((element) => {\r\n      if (element.type === 'product') {\r\n        pumpModel = element.description.split(' ');\r\n      } else {\r\n        pumpModel = '';\r\n      }\r\n      if (\r\n        pumpModel[0] === 'Surface' &&\r\n        (pumpModel[2] === 'Close' || pumpModel[2] === 'Bare')\r\n      ) {\r\n        element[`img`] = 'assets/images/AGCACC/AGCApumpcopy.png';\r\n        // this.productImages = 'assets/images/banner/SAP-AG-Home.jpg';\r\n      } else if (\r\n        pumpModel[0] === 'Multipurpose' &&\r\n        (pumpModel[1] === 'Close' || pumpModel[1] === 'Bare')\r\n      ) {\r\n        element[`img`] = 'assets/images/banner/DC.png';\r\n        // this.productImages = 'assets/images/banner/DC.png';\r\n      } else if (element.type === 'accessory' || element.type === 'spare') {\r\n        switch (element.code) {\r\n          case 'Baseplate':\r\n            element[`img`] = 'assets/images/SparesImg/Baseplate_pic.png';\r\n            break;\r\n          case 'DRP':\r\n            element[`img`] = 'assets/images/SparesImg/DRP_pic.png';\r\n            break;\r\n          case 'Rotor':\r\n            element[`img`] = 'assets/images/SparesImg/rotor.jpg';\r\n            break;\r\n          case 'Stator':\r\n            element[`img`] = 'assets/images/icons/stator.png';\r\n            break;\r\n          case 'Mech Seal':\r\n            element[`img`] = 'assets/images/SparesImg/Mech_seal.jpeg';\r\n            break;\r\n          case 'UJ M Kit':\r\n            element[`img`] = 'assets/images/SparesImg/UJ_KIT.jpg';\r\n            break;\r\n          case 'Pump Lantern':\r\n            element[`img`] = 'assets/images/SparesImg/PUMPLANTERN.BMP';\r\n            break;\r\n          case 'Foot':\r\n            element[`img`] = 'assets/images/SparesImg/FOOT.BMP';\r\n            break;\r\n          case 'Tie Rod':\r\n            element[`img`] = 'assets/images/SparesImg/TIEROD.BMP';\r\n            break;\r\n          case 'Pump Housing':\r\n            element[`img`] = 'assets/images/SparesImg/PUMPHOUSING.BMP';\r\n            break;\r\n          case 'End Cover':\r\n            element[`img`] = 'assets/images/SparesImg/END_COVER.BMP';\r\n            break;\r\n          case 'Seal Plate':\r\n            element[`img`] = 'assets/images/SparesImg/SEAL_PLATE.BMP';\r\n            break;\r\n          case 'Mech Seal Housing':\r\n            element[`img`] = 'assets/images/SparesImg/MECHSEALHOUSING.BMP';\r\n            break;\r\n          case 'Shaft Stub Price':\r\n            element[`img`] = 'assets/images/SparesImg/SHAFT.BMP';\r\n            break;\r\n          case 'Coupling Rod':\r\n            element[`img`] = 'assets/images/SparesImg/COUPLINGROD.BMP';\r\n            break;\r\n          case 'B.S.R. Retaining Ring':\r\n            element[`img`] = 'assets/images/SparesImg/BOOTSEALRETAINER.BMP'; // will change\r\n            break;\r\n          case 'Boot Seal Reatainer':\r\n            element[`img`] = 'assets/images/SparesImg/BOOTSEALRETAINER.BMP';\r\n            break;\r\n          case 'Boot Seal Support Ring':\r\n            element[`img`] =\r\n              'assets/images/SparesImg/Boot_Seal_Support_Ring.bmp';\r\n            break;\r\n          case 'Boot Seal':\r\n            element[`img`] = 'assets/images/SparesImg/BOOT_SEAL.BMP';\r\n            break;\r\n          case 'Foot And Face Mounted Motor 240v 4Pole':\r\n            element[`img`] =\r\n              'assets/images/SparesImg/Foot_face_mounted_motor.jpg';\r\n            break;\r\n          case 'Foot And Face Mounted Motor 240v 6Pole':\r\n            element[`img`] =\r\n              'assets/images/SparesImg/Foot_face_mounted_motor.jpg';\r\n            break;\r\n          case 'Bearing Cover':\r\n            element[`img`] = 'assets/images/SparesImg/BEARINGCOVER.BMP';\r\n            break;\r\n          case 'Bearing Spacer External':\r\n            element[`img`] = 'assets/images/SparesImg/BEARINGSPACER.BMP';\r\n            break;\r\n          case 'Mechanical Seal':\r\n            element[`img`] =\r\n              'assets/images/SparesImg/Mechanical-Seal_image.jpg';\r\n            break;\r\n          case 'Ball_Bearing':\r\n            element[`img`] = 'assets/images/SparesImg/BALLBEARING.BMP';\r\n            break;\r\n          case 'Foot Support For Stator Housing':\r\n            element[`img`] =\r\n              'assets/images/SparesImg/FOOT_FOR_STATOR_HOUSING.BMP';\r\n            break;\r\n          case 'Foot Support For Bearing Housing':\r\n            element[`img`] =\r\n              'assets/images/SparesImg/FOOTFORBEARINGHOUSING.BMP';\r\n            break;\r\n          case 'Stator Housing':\r\n            element[`img`] = 'assets/images/SparesImg/STATORHOUSING.BMP';\r\n            break;\r\n          case 'Bonded Bush':\r\n            element[`img`] = 'assets/images/SparesImg/BONDEDBUSH.BMP';\r\n            break;\r\n          case 'Bearning Housing':\r\n            element[`img`] = 'assets/images/SparesImg/BEARINGHOUSING.BMP';\r\n            break;\r\n          case 'Ball Bearing Small':\r\n            element[`img`] = 'assets/images/SparesImg/BALLBEARING.BMP';\r\n            break;\r\n          case 'Ball Bearing Large':\r\n            element[`img`] = 'assets/images/SparesImg/BALLBEARING.BMP';\r\n            break;\r\n          case 'Mech Seal Retainer':\r\n            element[`img`] =\r\n              'assets/images/SparesImg/MECHANICHALSEALRETAINER.BMP';\r\n            break;\r\n          case 'Stator Support Ring':\r\n            element[`img`] = 'assets/images/SparesImg/STATOR_SUPPORT_RING.jpg';\r\n            break;\r\n          case 'Drive Shaft':\r\n            element[`img`] = 'assets/images/SparesImg/SHAFT.BMP.BMP';\r\n            break;\r\n          case 'Abutment Ring':\r\n            element[`img`] = 'assets/images/SparesImg/ABUTMENT_RING.jpg';\r\n            break;\r\n          case 'Bearing':\r\n            element[`img`] = 'assets/images/SparesImg/BALLBEARING.BMP';\r\n            break;\r\n          default:\r\n            element[`img`] = 'assets/images/icons/accessories2.png';\r\n        }\r\n        // this.productImages = 'assets/images/icons/accessories.png';\r\n      }\r\n    });\r\n  }\r\n\r\n  // function to getProductQuantity of total products in cart\r\n  getProductQuantity(): void {\r\n    this.productQuantity = 0;\r\n    this.products.forEach((product) => {\r\n      this.productQuantity = product.productQuantity + this.productQuantity;\r\n    });\r\n  }\r\n\r\n  // function to update cart according to type\r\n  updateCartDetails(cartArray, type): void {\r\n    if (type === 'session') {\r\n      // checking if cart data is present in sessionStorage or not\r\n      // console.log('session');\r\n      const cartLocalData = JSON.parse(cartArray) as CartDetails[]; // assigning sessionStoraege cart value to cartLocalData\r\n      let cart = [];\r\n      const accessoriesToAdd = []; // accessoriesToAdd[] to add accessory\r\n      const sparesToAdd = []; // sparesToAdd[] to add spare\r\n      if (cartLocalData !== null) {\r\n        // checking if cartLocalData is not null\r\n        cartLocalData.forEach((cartData) => {\r\n          if (cartData.type === 'product') {\r\n            // assigning value in cart\r\n            cart.push(\r\n              new CartDetails(\r\n                cartData.productId,\r\n                cartData.code,\r\n                cartData.description,\r\n                cartData.price,\r\n                cartData.discountPrice,\r\n                cartData.type,\r\n                cartData.pole,\r\n                cartData.flow,\r\n                cartData.head,\r\n                cartData.speed,\r\n                cartData.power,\r\n                cartData.engineSpeed,\r\n                cartData.enginekW,\r\n                cartData.driveType,\r\n                cartData.productQuantity\r\n              )\r\n            );\r\n          } else if (cartData.type === 'accessory') {\r\n            accessoriesToAdd.push(cartData); // pushing cartData of type accessory in accessoriesToAdd array\r\n          } else if (cartData.type === 'spare') {\r\n            sparesToAdd.push(cartData); // pushing cartData of type spare in sparesToAdd array\r\n          }\r\n        });\r\n        this.subscribe.push(\r\n          this.activatedRoute.data.subscribe((res: CartDetails) => {\r\n            let cartDetails = [];\r\n            cartDetails = res[`cartData`]; // assigning data from cartResolver to cartDetails\r\n            if (cartDetails.length <= 0) {\r\n              // checking cartDetails length is smaller or equal to 0\r\n              // (...)spread operator takes in an iterable (e.g an array) and expands it into individual elements.\r\n              if (cart.length) {\r\n                cartDetails.push(...cart); // pushing cart value in cartDetails\r\n              }\r\n              if (accessoriesToAdd.length) {\r\n                cartDetails.push(...accessoriesToAdd); // pushing each accessoriesToAdd value in cartDetails\r\n              }\r\n              if (sparesToAdd.length) {\r\n                cartDetails.push(...sparesToAdd); // pushing each sparesToAdd value in cartDetails\r\n              }\r\n              const updateCartData = {\r\n                // id: window.atob(localStorage.getItem('cartId')),\r\n                // user_id: window.atob(localStorage.getItem('id')),\r\n                id: window.atob(sessionStorage.getItem('cartId')),\r\n                user_id: window.atob(sessionStorage.getItem('id')),\r\n                cart: JSON.stringify(cartDetails),\r\n              };\r\n              // calling updateCart api\r\n              this.apiService\r\n                .updateCart(updateCartData)\r\n                .subscribe((response) => {\r\n                  if (response[`code`] === 200) {\r\n                    sessionStorage.removeItem('cart');\r\n                    this.apiService\r\n                      .getCartById(updateCartData.id)\r\n                      .subscribe((response) => {\r\n                        if (response[`code`] === 200) {\r\n                          this.products = JSON.parse(\r\n                            response[`details`].cart\r\n                          ) as CartDetails[];\r\n                          this.insertImages(this.products);\r\n                          this.getProductQuantity();\r\n                          this.findGrandTotal();\r\n                          this.apiService.totalItemsInCart();\r\n                        }\r\n                      });\r\n                  }\r\n                });\r\n            } else {\r\n              const cartAccessoryDataSet = new Array(); // creating new accessoryArray\r\n              const cartSpareDataSet = new Array(); // creating new spareArray\r\n              let cartProductDataSet; // variable to set productData\r\n              let spareNotExist = true; // check if spare type is present in cartLocalData\r\n              let accessoryNotExist = true; // check if accessory type is present in cartLocalData\r\n              let cartNotExist = true; // check if cart type is present in cartLocalData\r\n              // cartDetails.filter(eachData => {\r\n              //   if (eachData.motor === null){\r\n              //     return eachData.motor = {volt: 0};\r\n              //   }\r\n              // });\r\n              // for loop starts\r\n              for (let i = 0; i < cartDetails.length; i++) {\r\n                if (cartDetails[i].type === 'product') {\r\n                  // checking productType\r\n                  cartNotExist = false;\r\n                  for (let j = 0; j < cart.length; j++) {\r\n                    if (\r\n                      (cartDetails[i].driveType === '' ||\r\n                        cartDetails[i].driveType) ===\r\n                        (cart[j].driveType === '' || cart[j].driveType) &&\r\n                      cartDetails[i].code === cart[j].code &&\r\n                      cartDetails[i].pole === cart[j].pole\r\n                    ) {\r\n                      cartDetails[i].productQuantity++;\r\n                    } else {\r\n                      cartProductDataSet = cart;\r\n                    }\r\n                  }\r\n                } else if (cartDetails[i].type === 'accessory') {\r\n                  accessoryNotExist = false;\r\n                  for (let j = 0; j < accessoriesToAdd.length; j++) {\r\n                    if (\r\n                      accessoriesToAdd[j].description ===\r\n                        cartDetails[i].description &&\r\n                      accessoriesToAdd[j].driveType ===\r\n                        cartDetails[i].driveType &&\r\n                      accessoriesToAdd[j].pole === cartDetails[i].pole\r\n                    ) {\r\n                      // checking productType\r\n                      cartDetails[i].productQuantity++;\r\n                    } else {\r\n                      /* some() is used to checks whether at least one of the elements of the array satisfies\r\n                      the condition then returns true (and does not check the remaining values) otherwise return false*/\r\n                      if (\r\n                        !cartDetails.some(\r\n                          (res) =>\r\n                            res.description ===\r\n                              accessoriesToAdd[j].description &&\r\n                            res.pole === accessoriesToAdd[j].pole &&\r\n                            res.driveType === accessoriesToAdd[j].driveType\r\n                        ) &&\r\n                        !cartAccessoryDataSet.some(\r\n                          (res) =>\r\n                            res.description ===\r\n                              accessoriesToAdd[j].description &&\r\n                            res.pole === accessoriesToAdd[j].pole &&\r\n                            res.driveType === accessoriesToAdd[j].driveType\r\n                        )\r\n                      ) {\r\n                        cartAccessoryDataSet.push(accessoriesToAdd[j]);\r\n                      }\r\n                    }\r\n                  }\r\n                } else if (cartDetails[i].type === 'spare') {\r\n                  // checking productType\r\n                  spareNotExist = false;\r\n                  // console.log(cartDetails)\r\n                  // console.log(sparesToAdd)\r\n                  for (let j = 0; j < sparesToAdd.length; j++) {\r\n                    if (\r\n                      sparesToAdd[j].description ===\r\n                        cartDetails[i].description &&\r\n                      sparesToAdd[j].pole === cartDetails[i].pole &&\r\n                      sparesToAdd[j].driveType === cartDetails[i].driveType\r\n                    ) {\r\n                      cartDetails[i].productQuantity++;\r\n                    } else {\r\n                      /* some() is used to checks whether at least one of the elements of the array satisfies\r\n                      the condition then returns true (and does not check the remaining values) otherwise return false*/\r\n                      if (\r\n                        !cartDetails.some(\r\n                          (res) =>\r\n                            res.description === sparesToAdd[j].description &&\r\n                            res.pole === sparesToAdd[j].pole &&\r\n                            res.driveType === sparesToAdd[j]?.driveType\r\n                        ) &&\r\n                        !cartSpareDataSet.some(\r\n                          (res) =>\r\n                            res.description === sparesToAdd[j].description &&\r\n                            res.pole === sparesToAdd[j].pole &&\r\n                            res.driveType === sparesToAdd[j]?.driveType\r\n                        )\r\n                      ) {\r\n                        cartSpareDataSet.push(sparesToAdd[j]);\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              // for loops ends\r\n\r\n              // checking to push if cartAccessoryDataSet length is greater than 0\r\n              if (cartAccessoryDataSet.length > 0) {\r\n                cartDetails.push(...cartAccessoryDataSet);\r\n              }\r\n\r\n              // checking to push if cartSpareDataSet length is greater than 0\r\n              if (cartSpareDataSet.length > 0) {\r\n                cartDetails.push(...cartSpareDataSet);\r\n              }\r\n\r\n              // checking to push if cartProductDataSet is not undefined\r\n              if (\r\n                cartProductDataSet !== undefined ||\r\n                cartProductDataSet?.length\r\n              ) {\r\n                cartDetails.push(...cartProductDataSet);\r\n              }\r\n\r\n              // checking to push if accessory exist\r\n              if (accessoryNotExist) {\r\n                cartDetails.push(...accessoriesToAdd);\r\n              }\r\n\r\n              // checking to push if spare exist\r\n              if (spareNotExist) {\r\n                cartDetails.push(...sparesToAdd);\r\n              }\r\n\r\n              // checking to push if cart exist\r\n              if (cartNotExist) {\r\n                cartDetails.push(...cart);\r\n              }\r\n              const updateCartData = {\r\n                // id: window.atob(localStorage.getItem('cartId')),\r\n                // user_id: window.atob(localStorage.getItem('id')),\r\n                id: window.atob(sessionStorage.getItem('cartId')),\r\n                user_id: window.atob(sessionStorage.getItem('id')),\r\n                cart: JSON.stringify(cartDetails),\r\n              };\r\n              // calling updateCart api\r\n              this.apiService\r\n                .updateCart(updateCartData)\r\n                .subscribe((response) => {\r\n                  if (response[`code`] === 200) {\r\n                    sessionStorage.removeItem('cart');\r\n                    this.apiService\r\n                      .getCartById(updateCartData.id)\r\n                      .subscribe((response) => {\r\n                        if (response[`code`] === 200) {\r\n                          // console.log(res, 'output')\r\n                          this.products = JSON.parse(\r\n                            response[`details`].cart\r\n                          ) as CartDetails[];\r\n                          this.insertImages(this.products);\r\n                          this.getProductQuantity();\r\n                          this.findGrandTotal();\r\n                          this.apiService.totalItemsInCart();\r\n                        }\r\n                      });\r\n                  }\r\n                });\r\n            }\r\n          })\r\n        );\r\n      }\r\n    } else if (type === 'cart') {\r\n      const updateCart = {\r\n        // id: window.atob(localStorage.getItem('cartId')),\r\n        // user_id: window.atob(localStorage.getItem('id')),\r\n        id: window.atob(sessionStorage.getItem('cartId')),\r\n        user_id: window.atob(sessionStorage.getItem('id')),\r\n        cart: JSON.stringify(cartArray),\r\n      };\r\n      this.subscribe.push(\r\n        this.apiService.updateCart(updateCart).subscribe((res) => {\r\n          if (res[`code`] === 200) {\r\n            this.apiService.totalItemsInCart();\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  // function to getCartItems from sessionStorage\r\n  getCartItems(): void {\r\n    if (sessionStorage.getItem('cart')) {\r\n      this.products = JSON.parse(\r\n        window.atob(sessionStorage.getItem('cart'))\r\n      ) as CartDetails[];\r\n      // console.log(this.products, 'products')\r\n      this.insertImages(this.products);\r\n      // this.sparePriceChange(this.products);\r\n      this.findGrandTotal();\r\n    } else {\r\n      this.products = [];\r\n    }\r\n  }\r\n\r\n  // sparePriceChange(products: CartDetails[]): void{\r\n  //   products.filter(eachProduct => {\r\n  //     if (eachProduct.type === 'spare'){\r\n  //       eachProduct.price = eachProduct.discountPrice;\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // function to findGrandTotal\r\n  findGrandTotal(): void {\r\n    let productPrice = 0; // default product price\r\n\r\n    // calculating eachProduct price using forEach loop for products array\r\n    this.products.forEach((ele) => {\r\n      if (ele.productQuantity) {\r\n        // checking if productQuantity is greater than 0\r\n        // multiplying eachProduct price with eachProduct quantity and adding the result with productPrice\r\n        productPrice =\r\n          (ele.discountPrice > 0 ? ele.discountPrice : ele.price) *\r\n            ele.productQuantity +\r\n          productPrice;\r\n      }\r\n    });\r\n    this.grandTotal = productPrice;\r\n    this.shippingCharges = Math.round(+(0.05 * this.grandTotal).toFixed(3)); // 5% of totalCharges\r\n    this.finalPrice = Math.round(this.grandTotal + this.shippingCharges); // adding price with shippingCharges and assigning to total\r\n    this.gstPrice = Math.round(+(0.1 * this.finalPrice).toFixed(3));\r\n    this.dealerDiscountAmount = Math.round(+(this.dealerDiscountPercentage * (this.finalPrice + this.gstPrice)).toFixed(3));\r\n  }\r\n\r\n  // function to decrease productQuantity\r\n  decrementProductQuantity(productCount): void {\r\n    let productItemQuantity = this.products[productCount].productQuantity; // assign particular productQuantity according to index number\r\n    productItemQuantity = productItemQuantity - 1; // decrementing productQuantity by 1\r\n    if (productItemQuantity < 1) {\r\n      // checking if productQuantity is less than 1 or not to open delete popup\r\n      const show = document.getElementById('cartdeletemodal') as HTMLElement;\r\n      show.classList.add('in');\r\n      show.style.display = 'block';\r\n      this.deleteItemIndex = productCount;\r\n      const productId = this.products[this.deleteItemIndex].productId;\r\n      const productType = this.products[this.deleteItemIndex].type;\r\n      if (productType === 'product') {\r\n        const productData = this.products.some((eachProduct) => {\r\n          return (\r\n            eachProduct.type === 'accessory' &&\r\n            eachProduct.productId === productId\r\n          );\r\n        });\r\n        if (productData) {\r\n          this.showDeleteMsg = true;\r\n        } else {\r\n          this.showDeleteMsg = false;\r\n        }\r\n      } else {\r\n        this.showDeleteMsg = false;\r\n      }\r\n    } else {\r\n      // if greater than 1 then adding the decremented productQuantity\r\n      this.products[productCount].productQuantity = productItemQuantity;\r\n      // if (localStorage.getItem('id') === null) { // checking if userId is present or not\r\n      if (sessionStorage.getItem('id') === null) {\r\n        // checking if userId is present or not\r\n        sessionStorage.setItem(\r\n          'cart',\r\n          window.btoa(JSON.stringify(this.products))\r\n        ); // setting the product value in sessionStorage\r\n      } else {\r\n        this.updateCartDetails(this.products, 'cart');\r\n      }\r\n      this.getProductQuantity();\r\n    }\r\n    this.findGrandTotal();\r\n  }\r\n\r\n  // function to remove item from cart\r\n  removeItemFromCart(): void {\r\n    let productIndex;\r\n    if (this.deleteItemIndex > -1) {\r\n      // checking deleteItemIndex i.e. product Index is greater than -1 or not\r\n      const productId = this.products[this.deleteItemIndex].productId;\r\n      const productType = this.products[this.deleteItemIndex].type;\r\n\r\n      if (productType === 'product') {\r\n        //this.products = this.products.filter( eachProduct => eachProduct.type === 'accessory' && eachProduct.productId !== productId );\r\n        this.products = this.products.filter((eachProduct) => {\r\n          return !(\r\n            eachProduct.type === 'accessory' &&\r\n            eachProduct.productId === productId\r\n          );\r\n        });\r\n        productIndex = this.products.findIndex(\r\n          (eachProduct) =>\r\n            eachProduct.productId === productId &&\r\n            eachProduct.type === 'product'\r\n        );\r\n      }\r\n\r\n      if (productIndex !== undefined && productIndex !== -1) {\r\n        // splice() method changes the contents of an array by removing or replacing existing elements and/or adding new elements in place.\r\n        this.products.splice(productIndex, 1); // removing the particular product from array\r\n        this.products.forEach((eachProduct) => {\r\n          if (\r\n            eachProduct.type === 'spare' &&\r\n            eachProduct.productId === productId\r\n          ) {\r\n            eachProduct.discountPrice = 0;\r\n          }\r\n        });\r\n      } else {\r\n        this.products.splice(this.deleteItemIndex, 1); // removing the particular product from array\r\n        this.products.forEach((eachProduct) => {\r\n          if (\r\n            eachProduct.type === 'spare' &&\r\n            eachProduct.productId === productId\r\n          ) {\r\n            eachProduct.discountPrice = 0;\r\n          }\r\n        });\r\n      }\r\n    }\r\n    // if (localStorage.getItem('id') === null) { // checking if userId is present or not\r\n    if (sessionStorage.getItem('id') === null) {\r\n      // checking if userId is present or not\r\n      sessionStorage.setItem(\r\n        'cart',\r\n        window.btoa(JSON.stringify(this.products))\r\n      ); // setting products in sessionStorage\r\n    } else {\r\n      this.updateCartDetails(this.products, 'cart');\r\n    }\r\n    // hiding delete Modal after delete is done.\r\n    const show = document.getElementById('cartdeletemodal') as HTMLElement;\r\n    show.classList.remove('in');\r\n    show.style.display = 'none';\r\n    this.findGrandTotal();\r\n    this.apiService.totalItemsInCart();\r\n  }\r\n\r\n  // function to hide delete Modal\r\n  closeDeleteModal(): void {\r\n    const show = document.getElementById('cartdeletemodal') as HTMLElement;\r\n    show.classList.remove('in');\r\n    show.style.display = 'none';\r\n  }\r\n\r\n  // function to increment productQuantity\r\n  incrementProductQuantity(productCount): void {\r\n    let productTotal = this.products[productCount].productQuantity; // assign particular productQuantity\r\n    productTotal++; // incrementing productQuantity by 1\r\n    this.products[productCount].productQuantity = productTotal; // assigning the incremented productQuantity to productArray\r\n    // if (localStorage.getItem('id') === null) { // checking if userID present or not\r\n    if (sessionStorage.getItem('id') === null) {\r\n      // checking if userID present or not\r\n      sessionStorage.setItem(\r\n        'cart',\r\n        window.btoa(JSON.stringify(this.products))\r\n      );\r\n    } else {\r\n      this.updateCartDetails(this.products, 'cart');\r\n    }\r\n    this.getProductQuantity();\r\n    this.findGrandTotal();\r\n  }\r\n\r\n  // function to navigate after continue or sin-in/sign-up\r\n  onContinue(type: string): void {\r\n    // if (localStorage.getItem('id') && type === 'continue') {\r\n    if (sessionStorage.getItem('id') && type === 'continue') {\r\n      // if (localStorage.getItem('cartId')) {\r\n      if (sessionStorage.getItem('cartId')) {\r\n        this.router.navigate(['./deliveryAddress'], {\r\n          relativeTo: this.activatedRoute,\r\n        });\r\n      }\r\n    } else {\r\n      sessionStorage.setItem(\r\n        'cart',\r\n        window.btoa(JSON.stringify(this.products))\r\n      );\r\n      // if (type === 'sign-up') {\r\n      //   this.router.navigate(['/sign-up'], { queryParams: { origin: 'cart' } });\r\n      // } else if (type === 'sign-in') {\r\n      //   this.router.navigate(['/sign-in'], { queryParams: { origin: 'cart' } });\r\n      // }\r\n\r\n      if (type === 'sign-in') {\r\n        this.router.navigate(['/sign-in'], { queryParams: { origin: 'cart' } });\r\n      }\r\n    }\r\n  }\r\n\r\n  // function to navigate according to type\r\n  redirect(type: string): void {\r\n    if (type === 'sign-up') {\r\n      this.router.navigate(['/sign-up'], { queryParams: { origin: 'cart' } });\r\n    } else if (type === 'sign-in') {\r\n      this.router.navigate(['/sign-in'], { queryParams: { origin: 'cart' } });\r\n    }\r\n  }\r\n\r\n  // used to unsubscribe the subscription\r\n  ngOnDestroy(): void {\r\n    // Called once, before the instance is destroyed.\r\n    // Add 'implements OnDestroy' to the class.\r\n    this.subscribe.forEach((sub) => {\r\n      if (sub) {\r\n        sub.unsubscribe();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"main-container cartpage\">\r\n\r\n  <div class=\"breadcrum\">\r\n    <div class=\"container\">\r\n      <p><a href=\"javascript:void(0)\" [routerLink]=\"['/home']\">Home</a> <span>/</span> Cart</p>\r\n    </div>\r\n  </div>\r\n\r\n  <ng-container *ngIf=\"products.length > 0\">\r\n    <div class=\"cart-scale\">\r\n      <div class=\"container\">\r\n        <div class=\"cart-scale-inner\">\r\n          <div class=\"scale-no active-scale\"><a style=\"pointer-events: none;\">1</a><small>Cart</small></div>\r\n          <div class=\"scale-no\"><a style=\"pointer-events: none;\">2</a><small>Address</small></div>\r\n          <div class=\"scale-no\"><a style=\"pointer-events: none;\">3</a><small>Payment</small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"cart-section\">\r\n      <div class=\"container\">\r\n        <div class=\"cart-inner\">\r\n          <div class=\"cart\">\r\n            <h3 class=\"price-title\">Cart</h3>\r\n            <div class=\"cart-row cart-row-products\" *ngFor=\"let eachProduct of products; let productCount=index\">\r\n              <div class=\"left-cart\">\r\n                <div class=\"cart-pic\"> <img [src]=\"eachProduct.img\" height=\"40px\" width=\"40px\"></div>\r\n              </div>\r\n\r\n              <div class=\"right-cart\">\r\n                <span>\r\n                  <strong>{{eachProduct?.code}}</strong>\r\n                  <p *ngIf=\"eachProduct?.description !== ''\">\r\n                    {{eachProduct?.description}}</p>\r\n                  <p *ngIf=\"eachProduct?.driveType !== '' \">{{eachProduct?.driveType}}</p>\r\n                </span>\r\n                <div class=\"mid-cart\">\r\n                  <div class=\"number\">\r\n                    <span class=\"minus\" (click)=\"decrementProductQuantity(productCount)\">-</span>\r\n                    <input type=\"text\" [value]=\"eachProduct?.productQuantity\" appNumOnly disabled />\r\n                    <span class=\"plus\" (click)=\"incrementProductQuantity(productCount)\">+</span>\r\n                  </div>\r\n                </div>\r\n                <h3>$ {{eachProduct?.discountPrice > 0 ? eachProduct?.discountPrice : eachProduct?.price}}</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"price-detail\">\r\n            <h3 class=\"price-title\">Price Detail</h3>\r\n\r\n            <div class=\"price-row\" *ngFor=\"let eachProduct of products\">\r\n              <div class=\"left-price\" *ngIf=\"eachProduct?.type !== 'spare';else productSpare\">\r\n                <h3>{{eachProduct?.description}}</h3>\r\n                <p *ngIf=\"eachProduct?.driveType !== ''\">({{eachProduct?.driveType}})</p>\r\n              </div>\r\n\r\n              <ng-template #productSpare>\r\n                <div class=\"left-price\">\r\n                  <h3>{{eachProduct?.code}}</h3>\r\n                  <p *ngIf=\"eachProduct?.description !== ''\">({{eachProduct?.description}})</p>\r\n                </div>\r\n              </ng-template>\r\n\r\n              <div class=\"right-price\">\r\n                <h3>$ {{eachProduct?.productQuantity * (eachProduct?.discountPrice > 0 ? eachProduct?.discountPrice : eachProduct?.price)}}</h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <div class=\"price-row total-price\">\r\n                <div class=\"left-price-spare\">\r\n                  <h3>Sub Total</h3>\r\n                  <h3>${{grandTotal}}</h3>\r\n                </div>\r\n                <div class=\"left-price-spare\">\r\n                  <h3>Shipping & Handling</h3>\r\n                  <h3>${{shippingCharges}}</h3>\r\n                </div>\r\n                <div class=\"left-price-spare\" >\r\n                  <h3>Total (including GST@10%) <br /> (In AUD)</h3>\r\n                  <h3>${{finalPrice + gstPrice}}</h3>\r\n                </div>\r\n                <div class=\"left-price-spare\" *ngIf=\"applyDealerDiscount\">\r\n                  <h3>Dealer Discount (10%) <br /> (In AUD)</h3>\r\n                  <h3>${{finalPrice + gstPrice - dealerDiscountAmount}}</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"sign-button-sec\" *ngIf=\"!toggleBtn\">\r\n              <button><a class=\"tooltip\" (click)=\"onContinue('sign-in')\">Continue\r\n                <span\r\n                class=\"tooltiptext\">Click here to sign-in</span>\r\n              </a></button>\r\n            </div>\r\n            <ng-container *ngIf=\"toggleBtn\">\r\n              <button><a href=\"javascript:void(0)\" (click)=\"onContinue('continue')\">Continue</a></button>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"products.length == 0\">\r\n    <div class=\"epmtyCartImg\">\r\n      <img src=\"assets/images/icons/EmptyCart.svg\">\r\n    </div>\r\n    <p class=\"emptyCartMsg\" *ngIf=\"!toggleBtn\">Your cart is currently empty. Please <a (click)=\"redirect('sign-in')\">Sign-in</a> or <a (click)=\"redirect('sign-up')\">Sign-up</a> here.</p>\r\n    <p class=\"emptyCartMsg\" *ngIf=\"toggleBtn\">Your cart is currently empty. Please select a pump or spare part to purchase.</p>\r\n  </ng-container>\r\n\r\n  <div id=\"cartdeletemodal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n      <!-- Modal content-->\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-body\">\r\n          <div class=\"delete-txt\">\r\n            <div class=\"remove-sec\">Are you sure to remove this item?\r\n              <p style=\"color: darkred;\" *ngIf=\"showDeleteMsg\">If you remove this, then accessories related to this will be removed and spares will be charged as per original price.</p>\r\n            </div>\r\n\r\n            <button class=\"blue-button\" (click)=\"removeItemFromCart()\">Yes</button>\r\n            <button class=\"blue-button\" (click)=\"closeDeleteModal()\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","export class CardError {\r\n  code: string;\r\n  message: string;\r\n  type: string;\r\n}\r\n","<ngx-spinner\r\n  bdColor=\"rgb(0,0,0)\"\r\n  size=\"medium\"\r\n  color=\"#2e94ef\"\r\n  type=\"ball-newton-cradle\"\r\n  [fullScreen]=\"true\"\r\n  ><p style=\"color: white\">Loading...</p></ngx-spinner\r\n>\r\n\r\n<div class=\"main-container cartpage addresspage paymentpage\">\r\n  <div class=\"breadcrum\">\r\n    <div class=\"container\">\r\n      <p>\r\n        <a href=\"javascript:void(0)\" [routerLink]=\"['/home']\">Home</a> /\r\n        <a href=\"javascript:void(0)\" [routerLink]=\"['/cart']\">Cart</a> / Payment\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"cart-scale\">\r\n    <div class=\"container\">\r\n      <div class=\"cart-scale-inner\">\r\n        <div class=\"scale-no active-scale\">\r\n          <a style=\"pointer-events: none\">1</a><small>Cart</small>\r\n        </div>\r\n        <div class=\"scale-no\">\r\n          <a style=\"pointer-events: none\">2</a><small>Address</small>\r\n        </div>\r\n        <div class=\"scale-no\">\r\n          <a style=\"pointer-events: none\">3</a><small>Payment</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"cart-section\">\r\n    <div class=\"container\">\r\n      <div class=\"cart-inner\">\r\n        <div class=\"price-detail\">\r\n          <div class=\"price-row total-price\" style=\"border-top: none\">\r\n            <div\r\n              class=\"left-price-spare\"\r\n              *ngIf=\"!applyDealerDiscount; else elsePart\"\r\n            >\r\n              <h3>Total Price(AUD)</h3>\r\n              <h3>${{ total }}</h3>\r\n            </div>\r\n            <ng-template #elsePart>\r\n              <div class=\"left-price-spare\">\r\n                <h3>Total Price(AUD)</h3>\r\n                <h3>${{ total - dealerDiscountAmount }}</h3>\r\n              </div>\r\n            </ng-template>\r\n            <!-- <div class=\"left-price-spare coupon-field\">\r\n              <input type=\"text\" placeholder=\"Coupon Code\" />\r\n              <button class=\"coupon-btn\">\r\n                <a href=\"javascript:void(0)\">Apply Coupon</a>\r\n              </button>\r\n            </div> -->\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"cart\">\r\n          <div class=\"address-row full-address-row\">\r\n            <form [formGroup]=\"paymentForm\">\r\n              <div class=\"address-feild\">\r\n                <label>Card Information <span>*</span></label>\r\n                <div\r\n                  id=\"cc-number\"\r\n                  [ngClass]=\"\r\n                    toggleCardNumberError ? 'cardErr' : 'address-feildCard'\r\n                  \"\r\n                ></div>\r\n                <p *ngIf=\"toggleCardNumberError\" style=\"color: red !important\">\r\n                  {{ cardNumberError }}\r\n                </p>\r\n              </div>\r\n              <div class=\"address-feild half-field\">\r\n                <div style=\"width: 50%\">\r\n                  <label>Exp. Month & Year <span>*</span></label>\r\n                  <div\r\n                    id=\"cc-exp-date\"\r\n                    [ngClass]=\"\r\n                      toggleCardMonthError ? 'cardErr' : 'address-feildCard'\r\n                    \"\r\n                  ></div>\r\n                  <p *ngIf=\"toggleCardMonthError\" style=\"color: red !important\">\r\n                    {{ cardMonthError }}\r\n                  </p>\r\n                </div>\r\n                <div style=\"width: 50%\">\r\n                  <label> CVV <span>*</span></label>\r\n                  <div\r\n                    id=\"cc-cvc\"\r\n                    [ngClass]=\"\r\n                      toggleCardCvvError ? 'cardErr' : 'address-feildCard'\r\n                    \"\r\n                  ></div>\r\n                  <p *ngIf=\"toggleCardCvvError\" style=\"color: red !important\">\r\n                    {{ cardCvvError }}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"address-feild\">\r\n                <label>Name on Card <span>*</span></label>\r\n                <input\r\n                  type=\"text\"\r\n                  formControlName=\"cardUserName\"\r\n                  placeholder=\"Navodita Aggarwal\"\r\n                  required\r\n                  [ngClass]=\"\r\n                    (formControl?.cardUserName?.errors?.minlength ||\r\n                      formControl?.cardUserName?.errors?.required) &&\r\n                    (formControl?.cardUserName?.touched ||\r\n                      formControl?.cardUserName?.dirty)\r\n                      ? 'red'\r\n                      : formControl?.cardUserName?.valid &&\r\n                        (formControl?.cardUserName?.touched ||\r\n                          formControl?.cardUserName?.dirty)\r\n                      ? 'green'\r\n                      : ''\r\n                  \"\r\n                />\r\n                <p\r\n                  *ngIf=\"\r\n                    (formControl?.cardUserName?.errors?.minlength ||\r\n                      formControl?.cardUserName?.errors?.required) &&\r\n                    (formControl?.cardUserName?.touched ||\r\n                      formControl?.cardUserName?.dirty)\r\n                  \"\r\n                  style=\"color: red\"\r\n                >\r\n                  Name should be of minimum 5 characters\r\n                </p>\r\n              </div>\r\n              <button *ngIf=\"!paymentLoading\">\r\n                <a\r\n                  href=\"javascript:void(0)\"\r\n                  (click)=\"submitPaymentForm(paymentForm)\"\r\n                  >Pay ${{ total }}</a\r\n                >\r\n              </button>\r\n              <button *ngIf=\"paymentLoading\">\r\n                <a href=\"javascript:void(0)\"\r\n                  ><span\r\n                    class=\"spinner-border spinner-border-sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  ></span\r\n                  >Payment Processing <i class=\"fas fa-spinner fa-spin\"></i\r\n                ></a>\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, NgZone, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CreditCardValidators } from 'angular-cc-library';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { environment } from 'src/environments/environment.prod';\r\nimport { CartDetails } from 'src/app/dataModels/cart-details';\r\nimport { CanComponentDeactivate } from '../deactive-guard.guard';\r\nimport { CardError } from 'src/app/dataModels/cardError';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\ndeclare var Stripe;\r\n@Component({\r\n  selector: 'app-cart-payment',\r\n  templateUrl: './cart-payment.component.html',\r\n  styleUrls: ['./cart-payment.component.css']\r\n})\r\nexport class CartPaymentComponent implements OnInit, CanComponentDeactivate, AfterViewInit, OnDestroy {\r\n\r\n  @ViewChild('cardInfo', { static: true }) cardElement: ElementRef; // used to access the cardInfo element details\r\n\r\n  stripe: any; // taking a variable for stripe of any type\r\n  card: any; // taking a variable for card\r\n  paymentLoading: boolean = false;\r\n  cardNumber: any;\r\n  cardExpiry: any;\r\n  cardCvc: any;\r\n  cardErrors: CardError = new CardError(); // assigning cardErrors of cartError type\r\n  cardHandler = this.onChange.bind(this); // used to get cardField validations\r\n\r\n  subscribe: Subscription[] = []; // used to store subscription\r\n\r\n  total: number = 0; // used to store totalPrice\r\n  toggleCanDeactivate: boolean = true; // change CanDeactivate resolve according to condition\r\n\r\n  paymentForm: FormGroup;  // paymentForm form of type formGroup\r\n  countryList: any[] = []; // used to store countryList\r\n  addressDetails: any; // assigning addressDetail according to id\r\n  products: CartDetails[] = []; // to store cartDetails.\r\n  addressId: any; // used to store addressId\r\n  buyNowCartId: string; // used to store buyNowCArtId\r\n  orderId: number;\r\n  toggleCardNumberError: boolean = false;\r\n  toggleCardMonthError: boolean = false;\r\n  toggleCardCvvError: boolean = false;\r\n  cardNumberError: string;\r\n  cardCvvError: string;\r\n  cardMonthError: string;\r\n  dealerDiscountAmount: number = 0;\r\n  applyDealerDiscount: boolean = false; // used to apply for dealer discount\r\n  dealerDiscountPercentage: number;\r\n\r\n  constructor(private fb: FormBuilder, private apiService: ApiService, private router: Router,\r\n              private toastr: ToastrService, private ngZone: NgZone, private activatedRoute: ActivatedRoute,\r\n              private zone: NgZone, private spinner: NgxSpinnerService) {}\r\n\r\n  ngOnInit(): void {\r\n    // assigning addressId and buyNow id from route params\r\n    this.subscribe.push(this.activatedRoute.params.subscribe(res => {\r\n      if (res.id1) {\r\n        this.addressId = res.id1;\r\n        this.buyNowCartId = res.id2;\r\n        this.getAddress(res.id1);\r\n      }\r\n    }));\r\n    if (\r\n      window.atob(sessionStorage.getItem('userType')) ===\r\n        'Dealer' &&\r\n      window.atob(sessionStorage.getItem('userStatus')) === 'D'\r\n    ) {\r\n      this.applyDealerDiscount = true;\r\n      if (window.atob(sessionStorage.getItem('userDiscount')) === null) {\r\n        this.apiService.dealerDiscount().subscribe(res => {\r\n          if (res[`return`] === true) {\r\n            this.dealerDiscountPercentage = res[`dealer_discount`];\r\n            this.dealerDiscountPercentage = this.dealerDiscountPercentage * 0.01;\r\n          }\r\n        })\r\n      }else {\r\n        let userDiscount = window.atob(sessionStorage.getItem('userDiscount'));\r\n        this.dealerDiscountPercentage = +userDiscount * 0.01;\r\n      }\r\n    }\r\n    if (this.buyNowCartId.length === 0) { // checking buyNow cartId is present or not\r\n      // this.subscribe.push(this.apiService.getCartById(window.atob(localStorage.getItem('cartId'))).subscribe(res => {\r\n      this.subscribe.push(this.apiService.getCartById(window.atob(sessionStorage.getItem('cartId'))).subscribe(res => {\r\n        if (res[`code`] === 200) {\r\n          this.products = (JSON.parse(res[`details`].cart) as CartDetails[]); // assigning cartDetails from response to products\r\n          this.findGrandTotal();\r\n        }\r\n      }, err => {\r\n        this.toastr.error(err?.error?.message || err?.message);\r\n      }));\r\n    } else { // if buyNow cartId is present\r\n      this.subscribe.push(this.apiService.getCartById(this.buyNowCartId).subscribe(res => {\r\n        if (res[`code`] === 200) {\r\n          this.products = (JSON.parse(res[`details`].cart) as CartDetails[]); // assigning cartDetails from response to products\r\n          this.findGrandTotal();\r\n        }\r\n      }, err => {\r\n        this.toastr.error(err?.error?.message || err?.message);\r\n      }));\r\n    }\r\n    // calling getCountryData function to getCountryList\r\n    this.subscribe.push(this.apiService.getCountryData().subscribe(res => {\r\n      if (res) {\r\n        this.countryList = res[`countries`]; // assigning countryList in countryList Array\r\n      }\r\n    }));\r\n    this.createPaymentForm();\r\n  }\r\n\r\n  // used afterviewinit lifecyclehook to load card after view get initialized\r\n  ngAfterViewInit(): void {\r\n    // Giving a base style here, but most of the style is in scss file\r\n    this.spinner.show();\r\n    const cardStyle = {\r\n      base: {\r\n        iconColor: '#1586ad',\r\n        color: '#32325d',\r\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n        fontSmoothing: 'antialiased',\r\n        fontSize: '20px',\r\n        '::placeholder': {\r\n          color: 'rgba(190, 193, 197, 0.9)',\r\n          fontSize: '0.9em',\r\n          fontFamily: '\"Trebuchet MS\", \"Lucida Sans Unicode\", \"Lucida Grande\", \"Lucida Sans\", Arial, sans-serif'\r\n        },\r\n      },\r\n      invalid: {\r\n        color: 'red',\r\n        iconColor: '#fa755a',\r\n      },\r\n    };\r\n\r\n    // assign stripe publish key to stripe variable\r\n    this.stripe = Stripe(environment.stripeTestKey);\r\n    const elements = this.stripe.elements();\r\n\r\n    this.cardNumber = elements.create('cardNumber', { showIcon: true, placeholder: 'Enter your card number', style: cardStyle });\r\n    this.cardNumber.mount('#cc-number');\r\n    this.cardNumber.on('change', (error) => {\r\n      if (error.error === undefined || error) {\r\n        if (error.error !== undefined) {\r\n          this.toggleCardNumberError = true;\r\n          this.cardNumberError = error.error.message;\r\n        }else {\r\n          this.toggleCardNumberError = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.cardExpiry = elements.create('cardExpiry', { placeholder: 'MM / YY', style: cardStyle });\r\n    this.cardExpiry.mount('#cc-exp-date');\r\n    this.cardExpiry.on('change', (error) => {\r\n      if (error.error === undefined || error) {\r\n        if (error.error !== undefined) {\r\n          this.toggleCardMonthError = true;\r\n          this.cardMonthError = error.error.message;\r\n        }else {\r\n          this.toggleCardMonthError = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.cardCvc = elements.create('cardCvc', { placeholder: 'Enter CVC', style: cardStyle });\r\n    this.cardCvc.mount('#cc-cvc');\r\n    this.cardCvc.on('change', (error) => {\r\n      if (error.error === undefined || error) {\r\n        if (error.error !== undefined) {\r\n          this.toggleCardCvvError = true;\r\n          this.cardCvvError = error.error.message;\r\n        }else {\r\n          this.toggleCardCvvError = false;\r\n        }\r\n      }\r\n    });\r\n    this.spinner.hide();\r\n  }\r\n\r\n  // function to findGrandTotal\r\n  findGrandTotal(): void {\r\n    let price;\r\n    let gstPrice;\r\n    let subPrice = 0;\r\n    let shippingCharges = 0; // default shipping charges\r\n    let productPrice = 0; // default product price\r\n\r\n    // calculating eachProduct price using forEach loop for products array\r\n    this.products.forEach((ele) => {\r\n      if (ele.productQuantity) { // checking if productQuantity is greater than 0\r\n        // multiplying eachProduct price with eachProduct quantity and adding the result with productPrice\r\n        productPrice = ((ele.discountPrice > 0 ? ele.discountPrice : ele.price) * ele.productQuantity) + productPrice;\r\n      }\r\n    });\r\n    price = productPrice;\r\n    shippingCharges = 0.05 * price; // 5% of totalCharges\r\n    subPrice = price + shippingCharges; // adding price with shippingCharges and assigning to total\r\n    gstPrice = 0.10 * subPrice;\r\n    this.total = Math.round(gstPrice + subPrice); // adding price with shippingCharges and assigning to total\r\n    this.dealerDiscountAmount = Math.round(this.dealerDiscountPercentage * this.total);\r\n  }\r\n\r\n  // function to getAddress using addressId\r\n  getAddress(addressId: string): void {\r\n    this.subscribe.push(this.apiService.getAddressById(addressId).subscribe(res => {\r\n      if (res[`address`].length > 0) {\r\n        this.addressDetails = res[`address`][0]; // assigning response of address to addressDetails\r\n      }\r\n    }));\r\n  }\r\n\r\n  // function to loadStripe\r\n  loadStripe(): void {\r\n    if (!window.document.getElementById('stripe-custom-form-script')) {\r\n      const s = window.document.createElement('script');\r\n      s.id = 'stripe-custom-form-script';\r\n      s.type = 'text/javascript';\r\n      s.src = 'https://js.stripe.com/v2/';\r\n      s.onload = () => {\r\n        window.Stripe.setPublishableKey(environment.stripeTestKey);\r\n      };\r\n      window.document.body.appendChild(s);\r\n    }\r\n  }\r\n\r\n  // function to create payment form\r\n  createPaymentForm(): void {\r\n    this.paymentForm = this.fb.group({\r\n      cardUserName: new FormControl('', [Validators.minLength(5), Validators.required]),\r\n      // email: new FormControl('', [Validators.email, Validators.required]),\r\n      // cardNumber: new FormControl('', [CreditCardValidators.validateCCNumber, Validators.required]),\r\n      // cardCVV: new FormControl('', Validators.required),\r\n      // cardExpDate: new FormControl('', [CreditCardValidators.validateExpDate, Validators.required]),\r\n      // country: new FormControl('Australia', Validators.required)\r\n    });\r\n  }\r\n\r\n  // function to get controls of payment form\r\n  get formControl(): any {\r\n    return this.paymentForm.controls;\r\n  }\r\n\r\n  // function to validate all fields of payment form\r\n  validateAllFields(formGroup: FormGroup): void {\r\n    Object.keys(this.formControl).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        control.markAsTouched({ onlySelf: true });\r\n      } else if (control instanceof FormGroup) {\r\n        this.validateAllFields(control);\r\n      }\r\n    });\r\n  }\r\n\r\n  onChange({ error }): any {\r\n    if (error) {\r\n      this.cardErrors = error;\r\n    } else {\r\n      this.cardErrors = null;\r\n    }\r\n  }\r\n\r\n  // function to submit signUp form\r\n  async submitPaymentForm(form): Promise<any> {\r\n    // this.spinner.show('sp3');\r\n    if (form.invalid) { // condition checking if form is valid or not\r\n      this.validateAllFields(form); // if form in invalid then call validateAllfields function\r\n    } else {\r\n      this.paymentLoading = true;\r\n      // this.spinner.show('spinner-2');\r\n      this.toggleCanDeactivate = false; // changing toggleCanDeactivate to false\r\n      const { token, error } = await this.stripe.createToken(this.cardNumber, {\r\n        name: form.value.cardUserName,\r\n        address_city: this.addressDetails?.city,\r\n        address_country: this.addressDetails?.country,\r\n        address_line1: this.addressDetails?.house_no,\r\n        address_state: this.addressDetails?.state,\r\n        address_zip: this.addressDetails?.pincode\r\n      });\r\n      if (token) {\r\n        // console.log('address', this.addressDetails, token);\r\n        // this.spinner.hide('sp3');\r\n        this.onSuccess(token);\r\n      } else {\r\n        // console.log('address', this.addressDetails, token);\r\n        this.spinner.hide('sp3');\r\n        this.onError(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  // function to call payment if token is generated\r\n  onSuccess(token): void {\r\n    this.paymentLoading = false;\r\n    const paymentData = {\r\n      token: token.id,\r\n      amount: Math.round(this.total)\r\n    };\r\n    this.subscribe.push(this.apiService.payment(paymentData).subscribe(res => {\r\n      if (res[`code`] === 200) {\r\n        this.createOrder(paymentData.token);\r\n      }\r\n    }, err => {\r\n      this.paymentLoading = false;\r\n      this.toastr.error(err?.error?.message || err?.message);\r\n    }));\r\n  }\r\n\r\n  // function to show error if token is not generated\r\n  onError(error): void {\r\n    this.paymentLoading = false;\r\n    if (error.message) {\r\n      this.toastr.error(error.message);\r\n    }\r\n  }\r\n\r\n\r\n  // function to createOrder\r\n  createOrder(token: string): void {\r\n    const additionalDetails = JSON.parse(window.atob(sessionStorage.getItem('additionalPaymentDetails'))); \r\n    const orderData = {\r\n      address_id: this.addressId,\r\n      // user_id: +window.atob(localStorage.getItem('id')),\r\n      user_id: +window.atob(sessionStorage.getItem('id')),\r\n      amount: (this.total).toString(),\r\n      transaction_id: token,\r\n      purchase_details: this.products,\r\n      // cart_id: +window.atob(localStorage.getItem('cartId'))\r\n      cart_id: +window.atob(sessionStorage.getItem('cartId')),\r\n      ...additionalDetails\r\n    };\r\n    // api function to addOrder using addOrder api\r\n    this.subscribe.push(this.apiService.addOrders(orderData).subscribe(res => {\r\n      if (res[`code`] === 200) {\r\n        this.orderId = res[`details`].id;\r\n        sessionStorage.removeItem('buyNow');\r\n        this.apiService.totalItemsInCart();\r\n        this.router.navigate(['/payment-successful'], { queryParams: { orderId: this.orderId } });\r\n      }\r\n    }, err => {\r\n      this.toastr.error(err?.error?.message || err?.message);\r\n    }));\r\n  }\r\n\r\n  // function to updateCart\r\n  updateCart(): void {\r\n    const updateCart = {\r\n      // id: window.atob(localStorage.getItem('cartId')),\r\n      // user_id: window.atob(localStorage.getItem('id')),\r\n      id: window.atob(sessionStorage.getItem('cartId')),\r\n      user_id: window.atob(sessionStorage.getItem('id')),\r\n      cart: '[]'\r\n    };\r\n    // console.log('update', updateCart);\r\n    // this.subscribe.push(this.apiService.updateCart(updateCart).subscribe(res => {\r\n    //   if (res[`code`] === 200) {\r\n    //     this.apiService.totalItemsInCart(); // calling totalItemsInCart function to update cartQuantity Value.\r\n    //     this.router.navigate(['/payment-successful'], { queryParams: { orderId: this.orderId } });\r\n    //   }\r\n    // }, err => {\r\n    //   this.toastr.error(err?.error?.message || err?.message);\r\n    // }));\r\n  }\r\n\r\n  // canDeactivate router function to  check is navigation allowed or not\r\n  canDeactivate(): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.toggleCanDeactivate) { // checking toggleCanDeactivate value\r\n      // if (localStorage.getItem('cartId')) { // checking cartId is present or not\r\n      if (sessionStorage.getItem('cartId')) { // checking cartId is present or not\r\n        if (sessionStorage.getItem('buyNow')) { // checking buyNow is present or not\r\n          // tslint:disable-next-line: max-line-length\r\n          const cartLocalData = JSON.parse(window.atob(sessionStorage.getItem('buyNow'))) as CartDetails[]; // assigning buyNow value to cartLocalData\r\n          const accessoriesToAdd = [];  // accessoriesToAdd[] to add accessory\r\n          const sparesToAdd = []; // sparesToAdd[] to add spare;\r\n          let cart;\r\n          if (cartLocalData !== null) { // checking if cartLocalData is not null\r\n            cartLocalData.forEach(cartData => {\r\n              if (cartData.type === 'product') {\r\n                // assigning value in cart\r\n                cart = new CartDetails(\r\n                  cartData.productId,\r\n                  cartData.code,\r\n                  cartData.description,\r\n                  cartData.price,\r\n                  cartData.discountPrice,\r\n                  cartData.type,\r\n                  cartData.pole,\r\n                  cartData.flow,\r\n                  cartData.head,\r\n                  cartData.speed,\r\n                  cartData.power,\r\n                  cartData.engineSpeed,\r\n                  cartData.enginekW,\r\n                  cartData.driveType,\r\n                  cartData.productQuantity\r\n                );\r\n              } else if (cartData.type === 'accessory') {\r\n                accessoriesToAdd.push(cartData); // pushing cartData of type accessory in accessoriesToAdd array\r\n              } else if (cartData.type === 'spare') {\r\n                sparesToAdd.push(cartData); // pushing cartData of type spare in sparesToAdd array\r\n              }\r\n            });\r\n          }\r\n          // creating Promise to get return value\r\n          return new Promise((resolve) => {\r\n            // this.subscribe.push(this.apiService.getCartById(window.atob(localStorage.getItem('cartId'))).subscribe(res => {\r\n            this.subscribe.push(this.apiService.getCartById(window.atob(sessionStorage.getItem('cartId'))).subscribe(res => {\r\n              if (res[`code`] === 200) {\r\n                let cartDetails = [];\r\n                cartDetails = (JSON.parse(res[`details`].cart) as CartDetails[]);  // assigning response value to cartDetails\r\n                if (cartDetails.length <= 0) {  // checking cartDetails length is smaller or equal to 0\r\n                  // (...)spread operator takes in an iterable (e.g an array) and expands it into individual elements.\r\n                  cartDetails.push({...cart}); // pushing cart value in cartDetails\r\n                  cartDetails.push(...accessoriesToAdd); // pushing each accessoriesToAdd value in cartDetails\r\n                  cartDetails.push(...sparesToAdd); // pushing each sparesToAdd value in cartDetails\r\n                }\r\n                else {\r\n                  const cartAccessoryDataSet = new Array(); // creating new accessoryArray\r\n                  const cartSpareDataSet = new Array(); // creating new spareArray\r\n                  let cartProductDataSet = {}; // variable to set productData\r\n                  let spareNotExist = true; // check if spare type is present in cartLocalData\r\n                  let accessoryNotExist = true; // check if accessory type is present in cartLocalData\r\n                  let cartNotExist = true;\r\n                  console.log(cart, 'cart');\r\n                  console.log(cartDetails, 'cart1');\r\n                  for (let i = 0; i < cartDetails.length; i++) {\r\n                    if (cartDetails[i].type === 'product') { // checking type of product\r\n                      // checking cartDetails(got by getCartDetails api) with buyNow cartDetails(from sessionStorage)\r\n                      cartNotExist = false;\r\n                      if (((cartDetails[i].driveType === '' || cartDetails[i].driveType)\r\n                        === (cart.driveType === '' || cart.driveType))\r\n                        && (cartDetails[i].code === cart.code) &&\r\n                        (cartDetails[i].pole === cart.pole)) {\r\n                        cartDetails[i].productQuantity++;\r\n                      } else {\r\n                        cartProductDataSet = cart;\r\n                      }\r\n                    } else if (cartDetails[i].type === 'accessory') {\r\n                      accessoryNotExist = false;\r\n                      for (let j = 0; j < accessoriesToAdd.length; j++) {\r\n                        if (accessoriesToAdd[j].description === cartDetails[i].description\r\n                          && accessoriesToAdd[j].pole === cartDetails[i].pole\r\n                          && accessoriesToAdd[j].driveType === cartDetails[i].driveType) {\r\n                          cartDetails[i].productQuantity++;\r\n                        } else {\r\n                          /* some() is used to checks whether at least one of the elements of the array satisfies\r\n                              the condition then returns true (and does not check the remaining values) otherwise return false*/\r\n                          if (!cartDetails.some(res => (res.description === accessoriesToAdd[j].description)\r\n                            && (res.pole === accessoriesToAdd[j].pole) && (res.driveType === accessoriesToAdd[j].driveType)) &&\r\n                            (!cartAccessoryDataSet.some(res => (res.description === accessoriesToAdd[j].description)\r\n                              && (res.pole === accessoriesToAdd[j].pole) && (res.driveType === accessoriesToAdd[j].driveType)))) {\r\n                            cartAccessoryDataSet.push(accessoriesToAdd[j]);\r\n                          }\r\n                        }\r\n                      }\r\n                    } else if (cartDetails[i].type === 'spare') {\r\n                      spareNotExist = false;\r\n                      for (let j = 0; j < sparesToAdd.length; j++) {\r\n                        if (sparesToAdd[j].description === cartDetails[i].description\r\n                          && sparesToAdd[j].pole === cartDetails[i].pole\r\n                          && sparesToAdd[j].driveType === cartDetails[i].driveType) {\r\n                          cartDetails[i].productQuantity++;\r\n                        } else {\r\n                          /* some() is used to checks whether at least one of the elements of the array satisfies\r\n                              the condition then returns true (and does not check the remaining values) otherwise return false*/\r\n                          if ((!cartDetails.some(res => (res.description === sparesToAdd[j].description)\r\n                            && (res.pole === sparesToAdd[j].pole) && (res.driveType === sparesToAdd[j].driveType))) &&\r\n                            (!cartSpareDataSet.some(res => (res.description === sparesToAdd[j].description) &&\r\n                              (res.pole === sparesToAdd[j].pole) && (res.driveType === sparesToAdd[j].driveType)))) {\r\n                            cartSpareDataSet.push(sparesToAdd[j]);\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n\r\n                  // checking to push if cartAccessoryDataSet length is greater than 0\r\n                  if (cartAccessoryDataSet.length > 0) {\r\n                    cartDetails.push(...cartAccessoryDataSet);\r\n                  }\r\n\r\n                  // checking to push if cartSpareDataSet length is greater than 0\r\n                  if (cartSpareDataSet.length > 0) {\r\n                    cartDetails.push(...cartSpareDataSet);\r\n                  }\r\n\r\n                  // checking to push if cartProductDataSet is not undefined\r\n                  if (Object.keys(cartProductDataSet).length > 0) {\r\n                    cartDetails.push({...cartProductDataSet});\r\n                  }\r\n\r\n                  // checking to push if accessory exist\r\n                  if (accessoryNotExist) {\r\n                    cartDetails.push(...accessoriesToAdd);\r\n                  }\r\n\r\n                  // checking to push if spare exist\r\n                  if (spareNotExist) {\r\n                    cartDetails.push(...sparesToAdd);\r\n                  }\r\n\r\n                  if (cartNotExist) {\r\n                    cartDetails.push(...cart);\r\n                  }\r\n                }\r\n\r\n                const updateCart = {\r\n                  // id: window.atob(localStorage.getItem('cartId')),\r\n                  // user_id: window.atob(localStorage.getItem('id')),\r\n                  id: window.atob(sessionStorage.getItem('cartId')),\r\n                  user_id: window.atob(sessionStorage.getItem('id')),\r\n                  cart: JSON.stringify(cartDetails)\r\n                };\r\n                // calling updateCart api\r\n                return this.subscribe.push(this.apiService.updateCart(updateCart).subscribe(response => {\r\n                  if (response[`code`] === 200) {\r\n                    sessionStorage.removeItem('buyNow');\r\n                    this.apiService.totalItemsInCart();\r\n                    return resolve(true);\r\n                  }\r\n                }));\r\n              }\r\n            }));\r\n\r\n          });\r\n        }\r\n        else {\r\n          return true;\r\n        }\r\n      }\r\n      else {\r\n        // localStorage.setItem('cartId', window.btoa(this.buyNowCartId)); // setting buyNowCartId as cartId in localStorage\r\n        sessionStorage.setItem('cartId', window.btoa(this.buyNowCartId)); // setting buyNowCartId as cartId in sessionStorage\r\n        this.apiService.totalItemsInCart(); // calling totalItemsInCart function to update cartQuantity'\r\n        sessionStorage.removeItem('buyNow');\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // used to unsubscribe the subscription\r\n  ngOnDestroy(): void {\r\n    // Called once, before the instance is destroyed.\r\n    // Add 'implements OnDestroy' to the class.\r\n    this.subscribe.forEach(s => {\r\n      if (s) {\r\n        s.unsubscribe();\r\n      }\r\n    });\r\n    // this.card.destroy();\r\n    this.cardNumber.destroy();\r\n    this.cardExpiry.destroy();\r\n    this.cardCvc.destroy();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouteGuard } from 'src/app/services/route-guard.guard';\r\nimport { CartDetailsComponent } from './cart-details/cart-details.component';\r\nimport { CartAddressComponent } from './cart-address/cart-address.component';\r\nimport { CartPaymentComponent } from './cart-payment/cart-payment.component';\r\nimport { CartRoutingModule } from './cart-routing.module';\r\nimport { DirectivesModule } from 'src/app/directives/directives.module';\r\nimport { CreditCardDirectivesModule } from 'angular-cc-library';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { DeactiveGuard } from './deactive-guard.guard';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n@NgModule({\r\n  declarations: [CartDetailsComponent, CartAddressComponent, CartPaymentComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CartRoutingModule,\r\n    DirectivesModule,\r\n    CreditCardDirectivesModule,\r\n    ToastrModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  providers: [RouteGuard, DeactiveGuard]\r\n})\r\nexport class CartModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface CanComponentDeactivate {\r\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DeactiveGuard implements CanDeactivate<CanComponentDeactivate> {\r\n  canDeactivate(\r\n    component: CanComponentDeactivate,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot,\r\n    nextState?: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return component.canDeactivate();\r\n  }\r\n}\r\n"]}