{"version":3,"sources":["./node_modules/angular-cc-library/__ivy_ngcc__/fesm2015/angular-cc-library.js","./src/app/views/cart/cart-routing.module.ts","./src/app/views/cart/cart-resolver.service.ts","./src/app/views/cart/cart-address/cart-address.component.ts","./src/app/views/cart/cart-address/cart-address.component.html","./src/app/services/route-guard.guard.ts","./src/app/views/cart/cart-details/cart-details.component.ts","./src/app/views/cart/cart-details/cart-details.component.html","./src/app/dataModels/cardError.ts","./src/app/views/cart/cart-payment/cart-payment.component.ts","./src/app/views/cart/cart-payment/cart-payment.component.html","./src/app/views/cart/cart.module.ts","./src/app/views/cart/deactive-guard.guard.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACuC;AACvD;;AAEC;AACC;AACzC,2BAA2B,IAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qBAAqB,IAAI,KAAK,IAAI,MAAM,IAAI;AAC5C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qBAAqB,IAAI,KAAK,IAAI,MAAM,IAAI;AAC5C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA,8CAA8C,UAAU;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,MAAM,yBAAyB,MAAM;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa,EAAE,MAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,IAAI,WAAW,IAAI;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,IAAI;AAC1B;AACA;AACA,kBAAkB,IAAI,EAAE,IAAI,EAAE,KAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,aAAa,EAAE,MAAM;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yDAAU,oCAAoC,yDAAU;AACpE,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,yDAAU,oCAAoC,yDAAU;AACpE,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oDAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gFAAgF,6CAA6C,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,wDAAgB,OAAO;AAC1N,iCAAiC,+DAAwB,EAAE,6IAA6I;AACxM,QAAQ,wDAAiB,qFAAqF,+BAA+B,EAAE,oFAAoF,8BAA8B,EAAE,0EAA0E,sBAAsB,EAAE,0EAA0E,sBAAsB,EAAE,4EAA4E,uBAAuB,EAAE,0EAA0E,sBAAsB,EAAE;AAC9oB,KAAK,EAAE,0BAA0B;AACjC;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,wDAAS,gBAAgB,OAAO,kDAAI,EAAE,GAAG,OAAO,sDAAQ,EAAE;AACtE;AACA;AACA,kBAAkB,OAAO,0DAAY,mCAAmC;AACxE,iBAAiB,OAAO,0DAAY,kCAAkC;AACtE,eAAe,OAAO,0DAAY,oBAAoB;AACtD,eAAe,OAAO,0DAAY,oBAAoB;AACtD,gBAAgB,OAAO,0DAAY,qBAAqB;AACxD,eAAe,OAAO,0DAAY,oBAAoB;AACtD;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,wDAAgB;AACnF,sBAAsB,kDAAI;AAC1B,aAAa;AACb,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kEAAkE,sCAAsC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,wDAAgB,OAAO;AACrM,0BAA0B,+DAAwB,EAAE,4HAA4H;AAChL,QAAQ,wDAAiB,8EAA8E,+BAA+B,EAAE,mEAAmE,0BAA0B,EAAE,qEAAqE,0BAA0B,EAAE,mEAAmE,0BAA0B,EAAE;AACva,KAAK,EAAE,EAAE;AACT;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,wDAAS,gBAAgB,OAAO,kDAAI,EAAE,GAAG,OAAO,sDAAQ,EAAE;AACtE;AACA;AACA,kBAAkB,OAAO,0DAAY,mCAAmC;AACxE,mBAAmB,OAAO,0DAAY,oBAAoB,GAAG,OAAO,0DAAY,qBAAqB,GAAG,OAAO,0DAAY,oBAAoB;AAC/I;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,wDAAgB;AACnF,sBAAsB,kDAAI;AAC1B,aAAa;AACb,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB,EAAE,MAAM;AACjD;AACA;AACA;AACA;AACA;AACA,iCAAiC,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,GAAG,KAAK,GAAG;AAChD;AACA;AACA,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,IAAI;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wEAAwE,yCAAyC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,wDAAgB,OAAO;AAC9M,6BAA6B,+DAAwB,EAAE,kIAAkI;AACzL,QAAQ,wDAAiB,iFAAiF,+BAA+B,EAAE,gFAAgF,8BAA8B,EAAE,wEAAwE,uBAAuB,EAAE,sEAAsE,sBAAsB,EAAE;AAC1b,KAAK,EAAE,EAAE;AACT;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,wDAAS,gBAAgB,OAAO,kDAAI,EAAE,GAAG,OAAO,sDAAQ,EAAE;AACtE;AACA;AACA,kBAAkB,OAAO,0DAAY,mCAAmC;AACxE,iBAAiB,OAAO,0DAAY,kCAAkC;AACtE,gBAAgB,OAAO,0DAAY,qBAAqB;AACxD,eAAe,OAAO,0DAAY,oBAAoB;AACtD;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,wDAAgB;AACnF,sBAAsB,kDAAI;AAC1B,aAAa;AACb,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,8DAAuB,EAAE,mCAAmC;AAC9F,kCAAkC,8DAAuB,EAAE,0DAA0D,gDAAgD,EAAE,EAAE;AACzK,cAAc,oDAAoD,gEAAyB,8BAA8B,wKAAwK,EAAE,EAAE;AACrS,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;;AAE8I;;AAE9I,8C;;;;;;;;;;;;AC5sBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACd;AACoC;AACA;AACA;AACb;AACF;AACP;;;AAEvD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAG,SAAS,EAAE,yFAAoB,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAG,0EAAmB,EAAC,EAAE;IACzF,EAAC,IAAI,EAAE,iBAAiB,EAAG,SAAS,EAAE,yFAAoB,EAAE,WAAW,EAAE,CAAC,6EAAU,CAAC,EAAE,aAAa,EAAE,CAAC,mEAAa,CAAC,EAAE;IACvH,EAAC,IAAI,EAAE,mBAAmB,EAAG,SAAS,EAAE,yFAAoB,EAAE,WAAW,EAAE,CAAC,6EAAU,CAAC,EAAE,aAAa,EAAE,CAAC,mEAAa,CAAC,EAAE;CAC1H,CAAC;AAOK,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAJnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAGX,iBAAiB,uFAHlB,4DAAY;6FAGX,iBAAiB;cAL7B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGN;;;AAa9B,MAAM,mBAAmB;IAE9B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE/C,OAAO,CACL,KAA6B,EAC7B,KAA0B;QAE1B,IAAI,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACpC,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,IAAiB,EAAG,EAAE;gBAChH,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;oBACzB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC;iBACzC;qBAAM;oBACL,OAAO,EAAE,CAAC;iBACX;YACH,CAAC,CAAC,CAAC,CAAC;SACL;IACH,CAAC;;sFAjBU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACoB;AAInB;;;;;;;;;;;;ICsChD,0EAOE;IAAA,4EAOA;IAHE,4XAA0C;IAJ5C,4DAOA;IAAA,4EACG;IAAA,uDAEyB;IAAA,4DAC3B;IACH,4DAAM;;;;IATF,0DAAoC;IAApC,wGAAoC;IAEpC,2FAA8B;IAEzB,0DAAqC;IAArC,yGAAqC;IACzC,0DAEyB;IAFzB,0XAEyB;;;IA+C5B,wEAOE;IAAA,yEACF;IAAA,4DAAI;;;IA+BA,wEAIE;IAAA,mFACF;IAAA,4DAAI;;;IAZN,wEAOE;IAAA,6HAIE;IAEJ,qEAAe;;;IAJX,0DAAgD;IAAhD,kMAAgD;;;IA2ClD,wEAIE;IAAA,kFACF;IAAA,4DAAI;;;IAZN,wEAOE;IAAA,6HAIE;IAEJ,qEAAe;;;IAJX,0DAA+C;IAA/C,gMAA+C;;;IAmCnD,wEAIE;IAAA,qFACF;IAAA,4DAAI;;;IACJ,wEAIE;IAAA,qFACF;IAAA,4DAAI;;;IAjBN,wEAME;IAAA,6HAIE;IAEF,6HAIE;IAEJ,qEAAe;;;IAVX,0DAA2C;IAA3C,wLAA2C;IAM3C,0DAA0C;IAA1C,uLAA0C;;;IA+B9C,wEAQE;IAAA,gFACF;IAAA,4DAAI;;;IAqBF,6EAOE;IAAA,uDACF;IAAA,4DAAS;;;IAHP,mIAA+B;IAE/B,0DACF;IADE,gGACF;;;IAEF,wEAQE;IAAA,qFACF;IAAA,4DAAI;;;IAuBF,6EAIE;IAAA,uDACF;IAAA,4DAAS;;;IAHP,+HAA6B;IAE7B,0DACF;IADE,8FACF;;;IAEF,wEAOE;IAAA,mFACF;IAAA,4DAAI;;;IAqBF,6EAIE;IAAA,uDACF;IAAA,4DAAS;;;IAHP,6HAA4B;IAE5B,0DACF;IADE,6FACF;;;IAEF,wEAOE;IAAA,wEACF;IAAA,4DAAI;;;IAgCF,wEAIE;IAAA,oFACF;IAAA,4DAAI;;;IACJ,wEAIE;IAAA,oFACF;IAAA,4DAAI;;;IAlBN,wEAOE;IAAA,8HAIE;IAEF,8HAIE;IAEJ,qEAAe;;;IAVX,0DAA6C;IAA7C,+LAA6C;IAM7C,0DAA4C;IAA5C,8LAA4C;;;IAsBlD,oEACE;IAAA,uDACF;IAAA,4DAAI;;;IADF,0DACF;IADE,wIACF;;;IAPF,0EAIE;IAAA,qEAAI;IAAA,uDAA8B;IAAA,4DAAK;IACvC,iIACE;IAEJ,4DAAM;;;IAJA,0DAA8B;IAA9B,6HAA8B;IAC/B,0DAAqC;IAArC,qIAAqC;;;IAQtC,oEACE;IAAA,uDACF;IAAA,4DAAI;;;IADF,0DACF;IADE,0IACF;;;IAJF,0EACE;IAAA,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,yIACE;IAEJ,4DAAM;;;IAJA,0DAAuB;IAAvB,sHAAuB;IACxB,0DAAuC;IAAvC,uIAAuC;;;IAdhD,0EACE;IAAA,+HAIE;IAMF,2NACE;IAQF,0EACE;IAAA,qEACE;IAAA,uDAOF;IAAA,4DAAK;IACP,4DAAM;IACR,4DAAM;;;;IA5BF,0DAAwD;IAAxD,qIAAwD;IAmBtD,0DAOF;IAPE,mVAOF;;;IAgBF,0EACE;IAAA,qEACE;IAAA,kFAAsB;IAAA,gEACtB;IAAA,qEACF;IAAA,4DAAK;IACL,qEAAI;IAAA,uDAAmD;IAAA,4DAAK;IAC9D,4DAAM;;;IADA,0DAAmD;IAAnD,+IAAmD;;;IAG3D,6EACE;IAAA,wEACG;IAAA,oEACD;IAAA,2EACG;IAAA,gGAAqC;IAAA,4DACvC;IAAA,4DACF;IACH,4DAAS;;;;IACT,yEACE;IAAA,wEAAwC;IAArB,kUAAoB;IAAC,mEAAQ;IAAA,4DAAI;IACtD,4DAAS;;;IAlEX,0EACE;IAAA,yEAAwB;IAAA,uEAAY;IAAA,4DAAK;IAEzC,yHACE;IA+BF,0EACE;IAAA,0EACE;IAAA,qEAAI;IAAA,oEAAS;IAAA,4DAAK;IAClB,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC5B,4DAAM;IACN,2EACE;IAAA,sEAAI;IAAA,+EAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAAsB;IAAA,4DAAK;IACjC,4DAAM;IACN,2EACE;IAAA,sEAAI;IAAA,sFAA0B;IAAA,iEAAM;IAAA,oEAAQ;IAAA,4DAAK;IACjD,sEAAI;IAAA,wDAA4B;IAAA,4DAAK;IACvC,4DAAM;IACN,2HACE;IAMJ,4DAAM;IACN,iIACE;IAOF,iIACE;IAEJ,4DAAM;;;IAhEmB,0DAAoC;IAApC,qFAAoC;IAmCnD,0DAAiB;IAAjB,6FAAiB;IAIjB,0DAAsB;IAAtB,kGAAsB;IAItB,0DAA4B;IAA5B,gHAA4B;IAEJ,0DAA2B;IAA3B,6FAA2B;IAQnD,0DAAoB;IAApB,sFAAoB;IAQpB,0DAAqB;IAArB,uFAAqB;;;;;AD7ehC,MAAM,oBAAoB;IAsB/B,YAAoB,UAAsB,EAAU,EAAe,EAC/C,OAAsB,EAAU,KAAa,EAAU,OAA0B;QADjF,eAAU,GAAV,UAAU,CAAY;QAAU,OAAE,GAAF,EAAE,CAAa;QAC/C,YAAO,GAAP,OAAO,CAAe;QAAU,UAAK,GAAL,KAAK,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAmB;QAtBrG,aAAQ,GAAkB,EAAE,CAAC,CAAC,iDAAiD;QAC/E,eAAU,GAAW,CAAC,CAAC,CAAC,2BAA2B;QACnD,oBAAe,GAAW,CAAC,CAAC,CAAC,iCAAiC;QAC9D,eAAU,GAAW,CAAC,CAAC,CAAC,sBAAsB;QAC9C,kBAAa,GAAW,EAAE,CAAC,CAAC,4CAA4C;QAExE,cAAS,GAAmB,EAAE,CAAC,CAAC,6BAA6B;QAI7D,iBAAY,GAAY,KAAK,CAAC,CAAC,eAAe;QAC9C,cAAS,GAAU,EAAE,CAAC,CAAE,2BAA2B;QACnD,gBAAW,GAAU,EAAE,CAAC,CAAC,6BAA6B;QACtD,aAAQ,GAAU,EAAE,CAAC,CAAC,0BAA0B;QAChD,iBAAY,GAAW,EAAE,CAAC,CAAC,+BAA+B;QAC1D,wBAAmB,GAAY,IAAI,CAAC,CAAC,sDAAsD;QAE3F,wBAAmB,GAAY,KAAK,CAAC,CAAC,oCAAoC;QAC1E,yBAAoB,GAAW,CAAC,CAAC,CAAC,0BAA0B;IAI6C,CAAC;IAE1G,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,uCAAuC;YACzE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,0CAA0C;YACnG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAChE;QAED,IACE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAC7C,QAAQ;YACV,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,KAAK,GAAG,EACzD;YACA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,KAAK,IAAI,EAAE;gBAChE,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBAC/C,IAAI,GAAG,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE;wBAC1B,IAAI,CAAC,wBAAwB,GAAG,GAAG,CAAC,iBAAiB,CAAC,CAAC;wBACvD,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;qBACtE;gBACH,CAAC,CAAC;aACH;iBAAK;gBACJ,IAAI,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;gBACvE,IAAI,CAAC,wBAAwB,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC;aACtD;SACF;QAED,IAAI,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAE,6CAA6C;YACnF,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,MAAM,QAAQ,GAAG;gBACf,oDAAoD;gBACpD,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;aACpC,CAAC;YACF,4CAA4C;YAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAClD,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;oBACvB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,qDAAqD;iBAClG;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,uDAAuD;YACvD,kHAAkH;YAClH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC7G,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;oBACvB,IAAI,CAAC,QAAQ,GAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAmB,CAAC,CAAC,iCAAiC;oBACrG,IAAI,CAAC,cAAc,EAAE,CAAC;iBACvB;YACH,CAAC,EAAE,GAAG,CAAC,EAAE;;gBACP,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,KAAK,0CAAE,OAAO,MAAI,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,EAAC,CAAC;YAC1D,CAAC,CAAC,CAAC,CAAC;SACL;QAED,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,wDAAwD;IACxD,kBAAkB,CAAC,OAAO;QACxB,IAAI,OAAO,KAAK,YAAY,EAAE,EAAE,2CAA2C;YACzE,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;YAC/B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAClC;IACH,CAAC;IAED,+CAA+C;IAC/C,YAAY;QACV,IAAI,CAAC,QAAQ,GAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAmB,CAAC;QAC7F,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,6BAA6B;IAC7B,cAAc;QACZ,IAAI,YAAY,GAAG,CAAC,CAAC,CAAC,wBAAwB;QAE9C,sEAAsE;QACtE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5B,IAAI,GAAG,CAAC,eAAe,EAAE,EAAG,gDAAgD;gBAC1E,kGAAkG;gBAClG,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,eAAe,CAAC,GAAG,YAAY,CAAC;aAC/G;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;QAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,qBAAqB;QAC9F,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,2DAA2D;QACjI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACxH,MAAM,wBAAwB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAC1D,eAAe,EAAE,IAAI,CAAC,UAAU;YAChC,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,UAAU,EAAE,IAAI,CAAC,QAAQ;SAC1B,CAAC,CAAC;QACH,cAAc,CAAC,OAAO,CAAC,0BAA0B,EAAE,wBAAwB,CAAC,CAAC;IAC/E,CAAC;IAED,wDAAwD;IACxD,YAAY;QACV,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACnE,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC;gBACpC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;aACnC;QACH,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,iDAAiD;IACjD,cAAc,CAAC,MAAM;QACnB,MAAM,QAAQ,GAAG;YACf,OAAO,EAAE,CAAC,MAAM;SACjB,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC1E,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;gBACvB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,4CAA4C;gBAC/E,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC/B,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;iBAC3B;qBAAM;oBACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;iBACvC;aACF;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;YACvC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,cAAc,CAAC,MAAM;QACnB,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACrD,IAAI,GAAG,CAAC,MAAM,CAAC,EAAE;gBACf,6CAA6C;gBAC7C,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC;aAC5C;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,QAAQ;QACvB,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;gBAC1B,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;gBACnB,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;gBACpB,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;aACnB,CAAC,CAAC;SACJ;aAAM,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;YAC9C,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;gBAC1B,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;gBACnB,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;aACnB,CAAC,CAAC;SACJ;aAAM,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;gBAC1B,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;aACpB,CAAC,CAAC;SACJ;IACH,CAAC;IAED,uEAAuE;IACvE,eAAe,CAAC,YAAY;QAC1B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,YAAY,CAAC,CAAC;QAClF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC;IACzD,CAAC;IAED,iEAAiE;IACjE,aAAa,CAAC,UAAU;QACtB,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;QAC5E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;IACpD,CAAC;IAGD,iCAAiC;IACjC,iBAAiB;QACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtF,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpF,OAAO,EAAE,IAAI,0DAAW,CAAC,WAAW,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC3D,CAAC,CAAC;IACL,CAAC;IAED,2CAA2C;IAC3C,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IACnC,CAAC;IAED,aAAa,CAAC,WAAW,EAAE,IAAI;QAC7B,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,IAAI,KAAK,OAAO,EAAC;YACnB,SAAS,GAAG,EAAE,CAAC;YACf,IAAI,WAAW,CAAC,MAAM,IAAI,SAAS,EAAC;gBAClC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;oBAC1B,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;iBACpC,CAAC,CAAC;aACJ;SACF;aAAK,IAAI,IAAI,KAAK,KAAK,EAAC;YACvB,SAAS,GAAG,CAAC,CAAC;YACd,IAAI,WAAW,CAAC,MAAM,IAAI,SAAS,EAAC;gBAClC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;oBAC1B,OAAO,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;iBACrC,CAAC,CAAC;aACJ;SACF;IACH,CAAC;IAED,wDAAwD;IACxD,iBAAiB,CAAC,SAAoB;QACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC5C,MAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrC,IAAI,OAAO,YAAY,0DAAW,EAAE;gBAClC,OAAO,CAAC,aAAa,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAC3C;iBAAM,IAAI,OAAO,YAAY,wDAAS,EAAE;gBACvC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2BAA2B;IAC3B,WAAW,CAAC,IAAI;QACd,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,0DAA0D;SACzF;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;YAClC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACzE,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;oBACvB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;oBACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACjC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;oBACxB,IAAI,CAAC,KAAK,EAAE,CAAC;iBACd;YACH,CAAC,EAAE,GAAG,CAAC,EAAE;;gBACP,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,KAAK,0CAAE,OAAO,MAAI,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,EAAC,CAAC;YAC1D,CAAC,CAAC,CAAC,CAAC;SACL;IACH,CAAC;IAED,UAAU;QACR,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAkB,CAAC,CAAC,0CAA0C;QAC5I,IAAI,IAAI,CAAC;QACT,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC;QACvC,MAAM,gBAAgB,GAAG,EAAE,CAAC,CAAE,sCAAsC;QACpE,MAAM,WAAW,GAAG,EAAE,CAAC,CAAC,6BAA6B;QACrD,IAAI,aAAa,KAAK,IAAI,EAAE,EAAE,wCAAwC;YACpE,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBAC/B,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,EAAE;oBAC/B,0BAA0B;oBAC1B,IAAI,GAAG,IAAI,2EAAW,CACpB,QAAQ,CAAC,SAAS,EAClB,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,WAAW,EACpB,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,aAAa,EACtB,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,WAAW,EACpB,QAAQ,CAAC,QAAQ,EACjB,QAAQ,CAAC,SAAS,EAClB,QAAQ,CAAC,eAAe,CACzB,CAAC;iBACH;qBAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,WAAW,EAAE;oBACxC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,+DAA+D;iBACjG;qBAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,OAAO,EAAE;oBACpC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,sDAAsD;iBACnF;YACH,CAAC,CAAC,CAAC;SACJ;QACD,kHAAkH;QAClH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC7G,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;gBACvB,IAAI,WAAW,GAAG,EAAE,CAAC;gBACrB,WAAW,GAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAmB,CAAC,CAAE,0CAA0C;gBAC7G,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;gBACxC,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,EAAE,EAAG,uDAAuD;oBACrF,oGAAoG;oBACpG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,oCAAoC;oBAC5D,WAAW,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,qDAAqD;oBAC5F,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,gDAAgD;iBACnF;qBAAM;oBACL,MAAM,oBAAoB,GAAG,IAAI,KAAK,EAAE,CAAC,CAAC,8BAA8B;oBACxE,MAAM,gBAAgB,GAAG,IAAI,KAAK,EAAE,CAAC,CAAC,0BAA0B;oBAChE,IAAI,kBAAkB,CAAC,CAAC,8BAA8B;oBACtD,IAAI,aAAa,GAAG,IAAI,CAAC,CAAC,kDAAkD;oBAC5E,IAAI,iBAAiB,GAAG,IAAI,CAAC,CAAC,sDAAsD;oBAEpF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAC3C,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,EAAE,EAAE,2BAA2B;4BAClE,+FAA+F;4BAC/F,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;gCACtF,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;gCACrC,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;6BAClC;iCAAM;gCACL,kBAAkB,GAAG,IAAI,CAAC;6BAC3B;yBACF;6BAAM,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,EAAE;4BAC9C,iBAAiB,GAAG,KAAK,CAAC;4BAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAChD,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,WAAW,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW;uCAC7D,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;uCAChD,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;oCAC/D,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;iCAClC;qCAAM;oCACL;0IACsG;oCACtG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;2CAC7E,CAAC,GAAG,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;wCAChG,CAAC,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;+CACnF,CAAC,GAAG,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;wCACrG,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;qCAChD;iCACF;6BACF;yBACF;6BAAM,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,OAAO,EAAE;4BAC1C,aAAa,GAAG,KAAK,CAAC;4BACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC3C,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW;uCACxD,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;uCAC3C,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;oCAC1D,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;iCAClC;qCAAM;oCACL;0IACsG;oCACtG,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;2CACzE,CAAC,GAAG,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wCACvF,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;4CAC7E,CAAC,GAAG,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;wCACxF,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;qCACvC;iCACF;6BACF;yBACF;qBACF;oBAED,oEAAoE;oBACpE,IAAI,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE;wBACnC,WAAW,CAAC,IAAI,CAAC,GAAG,oBAAoB,CAAC,CAAC;qBAC3C;oBAED,gEAAgE;oBAChE,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC/B,WAAW,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC;qBACvC;oBAED,0DAA0D;oBAC1D,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;wBACjC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;wBACrC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC;qBACjC;oBAED,sCAAsC;oBACtC,IAAI,iBAAiB,EAAE;wBACrB,WAAW,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC;qBACvC;oBAED,kCAAkC;oBAClC,IAAI,aAAa,EAAE;wBACjB,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC;qBAClC;iBACF;gBAED,MAAM,UAAU,GAAG;oBACjB,mDAAmD;oBACnD,oDAAoD;oBACpD,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oBACjD,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBAClD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;iBAClC,CAAC;gBACF,yBAAyB;gBACzB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;oBACrF,IAAI,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;wBAC5B,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,EAAE,CAAC;wBAClC,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;wBACpC,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;qBACpC;gBACH,CAAC,CAAC,CAAC,CAAC;aACL;QACH,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,oEAAoE;IACpE,QAAQ;;QACN,IAAI,IAAI,CAAC,aAAa,KAAK,EAAE,EAAE;YAC7B,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,EAAE;gBAC5B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,eAAe,QAAE,IAAI,CAAC,eAAe,0CAAE,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;aACrF;iBAAM;gBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,eAAe,QAAE,IAAI,CAAC,eAAe,0CAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;aACjH;SACF;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,+CAA+C,CAAC,CAAC;SACvE;IACH,CAAC;IAED,uEAAuE;IACvE,aAAa;QACX,IAAI,IAAI,CAAC,mBAAmB,EAAE,EAAE,qCAAqC;YACnE,6EAA6E;YAC7E,IAAI,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAE,oCAAoC;gBAC1E,IAAI,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAE,oCAAoC;oBAC1E,4CAA4C;oBAC5C,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAkB,CAAC,CAAC,0CAA0C;oBAC5I,MAAM,gBAAgB,GAAG,EAAE,CAAC,CAAE,sCAAsC;oBACpE,MAAM,WAAW,GAAG,EAAE,CAAC,CAAC,8BAA8B;oBACtD,IAAI,IAAI,CAAC;oBACT,IAAI,aAAa,KAAK,IAAI,EAAE,EAAE,wCAAwC;wBACpE,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;4BAC/B,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,EAAE;gCAC/B,0BAA0B;gCAC1B,IAAI,GAAG,IAAI,2EAAW,CACpB,QAAQ,CAAC,SAAS,EAClB,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,WAAW,EACpB,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,aAAa,EACtB,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,WAAW,EACpB,QAAQ,CAAC,QAAQ,EACjB,QAAQ,CAAC,SAAS,EAClB,QAAQ,CAAC,eAAe,CACzB,CAAC;6BACH;iCAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,WAAW,EAAE;gCACxC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,+DAA+D;6BACjG;iCAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,OAAO,EAAE;gCACpC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,sDAAsD;6BACnF;wBACH,CAAC,CAAC,CAAC;qBACJ;oBACD,uCAAuC;oBACvC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;wBAC7B,kHAAkH;wBAClH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;4BAC7G,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;gCACvB,IAAI,WAAW,GAAG,EAAE,CAAC;gCACrB,WAAW,GAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAmB,CAAC,CAAE,0CAA0C;gCAC7G,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;gCACxC,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,EAAE,EAAG,uDAAuD;oCACrF,oGAAoG;oCACpG,WAAW,CAAC,IAAI,mBAAK,IAAI,EAAE,CAAC,CAAC,oCAAoC;oCACjE,WAAW,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,qDAAqD;oCAC5F,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,gDAAgD;iCACnF;qCACI;oCACH,MAAM,oBAAoB,GAAG,IAAI,KAAK,EAAE,CAAC,CAAC,8BAA8B;oCACxE,MAAM,gBAAgB,GAAG,IAAI,KAAK,EAAE,CAAC,CAAC,0BAA0B;oCAChE,IAAI,kBAAkB,GAAG,EAAE,CAAC,CAAC,8BAA8B;oCAC3D,IAAI,aAAa,GAAG,IAAI,CAAC,CAAC,kDAAkD;oCAC5E,IAAI,iBAAiB,GAAG,IAAI,CAAC,CAAC,sDAAsD;oCACpF,IAAI,YAAY,GAAG,IAAI,CAAC;oCAExB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wCAC3C,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,EAAE,EAAE,2BAA2B;4CAClE,+FAA+F;4CAC/F,YAAY,GAAG,KAAK,CAAC;4CACrB,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oDAC5D,CAAC,IAAI,CAAC,SAAS,KAAK,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;mDAC3C,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;gDACtC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;gDACrC,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;6CAClC;iDAAM;gDACL,kBAAkB,GAAG,IAAI,CAAC;6CAC3B;yCACF;6CAAM,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,EAAE;4CAC9C,iBAAiB,GAAG,KAAK,CAAC;4CAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gDAChD,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,WAAW,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW;uDAC7D,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;uDAChD,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;oDAC/D,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;iDAClC;qDAAM;oDACL;0JACsG;oDACtG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;2DAC7E,CAAC,GAAG,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;wDAChG,CAAC,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;+DACnF,CAAC,GAAG,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;wDACrG,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;qDAChD;iDACF;6CACF;yCACF;6CAAM,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,OAAO,EAAE;4CAC1C,aAAa,GAAG,KAAK,CAAC;4CACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gDAC3C,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW;uDACxD,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;uDAC3C,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;oDAC1D,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;iDAClC;qDAAM;oDACL;0JACsG;oDACtG,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;2DACzE,CAAC,GAAG,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wDACvF,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;4DAC7E,CAAC,GAAG,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;wDACxF,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;qDACvC;iDACF;6CACF;yCACF;qCACF;oCAED,oEAAoE;oCACpE,IAAI,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE;wCACnC,WAAW,CAAC,IAAI,CAAC,GAAG,oBAAoB,CAAC,CAAC;qCAC3C;oCAED,gEAAgE;oCAChE,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;wCAC/B,WAAW,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC;qCACvC;oCAED,0DAA0D;oCAC1D,IAAI,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;wCAC9C,WAAW,CAAC,IAAI,mBAAK,kBAAkB,EAAE,CAAC;qCAC3C;oCAED,sCAAsC;oCACtC,IAAI,iBAAiB,EAAE;wCACrB,WAAW,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC;qCACvC;oCAED,kCAAkC;oCAClC,IAAI,aAAa,EAAE;wCACjB,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC;qCAClC;oCAED,IAAI,YAAY,EAAE;wCAChB,WAAW,CAAC,IAAI,mBAAK,IAAI,EAAE,CAAC;qCAC7B;iCACF;gCAED,MAAM,UAAU,GAAG;oCACjB,mDAAmD;oCACnD,oDAAoD;oCACpD,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oCACjD,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oCAClD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;iCAClC,CAAC;gCACF,yBAAyB;gCACzB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gCAChC,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;oCACrF,IAAI,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;wCAC5B,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;wCACpC,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;wCACnC,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;qCACtB;gCACH,CAAC,CAAC,CAAC,CAAC;6BACL;wBACH,CAAC,CAAC,CAAC,CAAC;oBAEN,CAAC,CAAC,CAAC;iBACJ;qBACI;oBACH,OAAO,IAAI,CAAC;iBACb;aACF;iBACI;gBACH,oHAAoH;gBACpH,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,mDAAmD;gBACrH,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC,4DAA4D;gBAChG,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBACpC,OAAO,IAAI,CAAC;aACb;SACF;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,uCAAuC;IACvC,WAAW;QACT,iDAAiD;QACjD,2CAA2C;QAC3C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACzB,IAAI,CAAC,EAAE;gBACL,CAAC,CAAC,WAAW,EAAE,CAAC;aACjB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;wFA3mBU,oBAAoB;oGAApB,oBAAoB;QCdjC,iFAMG;QAAA,uEAAwB;QAAA,qEAAU;QAAA,4DAAI;QAAA,4DACxC;QAED,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,oEACE;QAAA,uEAAsD;QAAA,+DAAI;QAAA,4DAAI;QAAC,8DAC/D;QAAA,wEAAsD;QAAA,gEAAI;QAAA,4DAAI;QAC9D,wEAAM;QAAA,6DAAC;QAAA,4DAAO;QAAC,qEACjB;QAAA,4DAAI;QACN,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,wEAAgC;QAAA,6DAAC;QAAA,4DAAI;QAAA,yEAAO;QAAA,gEAAI;QAAA,4DAAQ;QAC1D,4DAAM;QACN,2EACE;QAAA,wEAAgC;QAAA,6DAAC;QAAA,4DAAI;QAAA,yEAAO;QAAA,mEAAO;QAAA,4DAAQ;QAC7D,4DAAM;QACN,2EACE;QAAA,wEAAgC;QAAA,6DAAC;QAAA,4DAAI;QAAA,yEAAO;QAAA,mEAAO;QAAA,4DAAQ;QAC7D,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,0EACE;QAAA,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,sEAAI;QAAA,+EAAmB;QAAA,4DAAK;QAC5B,2EACE;QAAA,mHAOE;QAcF,2EACE;QAAA,6EAOA;QAHE,8IAAU,uBAAmB,YAAY,CAAC,IAAC;QAJ7C,4DAOA;QAAA,6EAAqB;QAAA,uEAAW;QAAA,4DAAQ;QAC1C,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,2EAME;QAAA,sEAAI;QAAA,0EAAc;QAAA,4DAAK;QAEvB,4EACE;QAAA,2EACE;QAAA,yEAAO;QAAA,kEAAM;QAAA,wEAAM;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACnC,8EAcE;QAAA,8EAAmC;QAAA,wEAAY;QAAA,4DAAS;QACxD,8EAAmB;QAAA,+DAAG;QAAA,4DAAS;QAC/B,8EAAmB;QAAA,+DAAG;QAAA,4DAAS;QAC/B,yEAA2B;QAC7B,4DAAS;QACT,+GAOE;QAEJ,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,yEAAO;QAAA,sEAAU;QAAA,wEAAM;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACvC,wEAkBA;QAAA,qIAOE;QAOJ,4DAAM;QACN,2EACE;QAAA,yEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAC1B,wEAMF;QAAA,4DAAM;QAEN,2EACE;QAAA,yEAAO;QAAA,sEAAU;QAAA,wEAAM;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACvC,wEAkBA;QAAA,qIAOE;QAOJ,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,yEAAO;QAAA,2EAAe;QAAA,wEAAM;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAC5C,6EAmBA;QAfE,kJAAS,uCAAmC,OAAO,CAAC,IAAC;QAJvD,4DAmBA;QAAA,qIAME;QAaJ,4DAAM;QAEN,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAEhB,2EACE;QAAA,yEACG;QAAA,yGACD;QAAA,wEAAM;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DACf;QACD,wEAiBA;QAAA,+GAQE;QAEJ,4DAAM;QAEN,2EACE;QAAA,0EAAO;QAAA,qEAAQ;QAAA,yEAAM;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACrC,+EAgBE;QAdA,sJAAU,wCAAoC,IAAC;QAc/C,2HAOE;QAEJ,4DAAS;QACT,iHAQE;QAEJ,4DAAM;QAEN,4EACE;QAAA,0EAAO;QAAA,mEAAM;QAAA,yEAAM;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACnC,+EAeE;QAbA,sJAAU,sCAAkC,IAAC;QAa7C,+EACE;QAAA,kFACF;QAAA,4DAAS;QACT,2HAIE;QAEJ,4DAAS;QACT,iHAOE;QAEJ,4DAAM;QAEN,4EACE;QAAA,0EAAO;QAAA,kEAAK;QAAA,yEAAM;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAClC,+EAaE;QAAA,+EACE;QAAA,wFACF;QAAA,4DAAS;QACT,2HAIE;QAEJ,4DAAS;QACT,iHAOE;QAEJ,4DAAM;QAEN,4EACE;QAAA,0EAAO;QAAA,wEAAW;QAAA,yEAAM;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACxC,8EAoBA;QAfE,mJAAS,uCAAmC,KAAK,CAAC,IAAC;QALrD,4DAoBA;QAAA,uIAOE;QAaJ,4DAAM;QACR,4DAAO;QACP,4EACE;QADuB,2IAAS,gCAAwB,IAAC;QACzD,gFACF;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,sHACE;QAmEJ,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA7fJ,4EAAmB;QAQgB,0DAAwB;QAAxB,8IAAwB;QACxB,0DAAwB;QAAxB,8IAAwB;QA+B7C,2DAGC;QAHD,oFAGC;QAsBC,0DAAwB;QAAxB,qFAAwB;QAS9B,0DAEE;QAFF,iMAEE;QAII,0DAAyB;QAAzB,sFAAyB;QAKzB,0DASC;QATD,utBASC;QAUD,0DAGC;QAHD,+XAGC;QAcC,0DAUC;QAVD,80BAUC;QAID,0DAIC;QAJD,6ZAIC;QA2BD,2DAUC;QAVD,i0BAUC;QAID,0DAIC;QAJD,uZAIC;QAoBH,0DAUC;QAVD,+6BAUC;QAID,0DAGC;QAHD,+XAGC;QA4BD,0DAUC;QAVD,2vBAUC;QAKD,0DAIC;QAJD,iZAIC;QAWD,0DAUC;QAVD,+uBAUC;QAIC,0DAGC;QAHD,oFAGC;QAQH,0DAIC;QAJD,2YAIC;QAWD,0DASC;QATD,utBASC;QAOC,0DAA2D;QAA3D,kFAA2D;QAQ7D,0DAGC;QAHD,+XAGC;QAUD,0DAQC;QARD,2sBAQC;QAOC,0DAAwD;QAAxD,iFAAwD;QAQ1D,0DAGC;QAHD,yXAGC;QAcD,0DAWC;QAXD,+8BAWC;QAID,0DAIC;QAJD,2YAIC;QAuBe,0DAA2B;QAA3B,yFAA2B;;6FD7ahD,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAOpC,MAAM,UAAU;IAErB,YAAoB,OAAsB,EAAU,MAAc;QAA9C,YAAO,GAAP,OAAO,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;IAElE,CAAC;IACD,WAAW,CACT,KAA6B,EAC7B,KAA0B;QAE1B,+GAA+G;QAC/G,IAAI,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC;YAC/B,OAAO,IAAI,CAAC;SACb;aAAI;YACH,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;YACnD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;SACpC;IACH,CAAC;;oEAhBU,UAAU;6FAAV,UAAU,WAAV,UAAU;6FAAV,UAAU;cAFtB,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOuB;AAGuC;;;;;;;;ICuB5C,oEACE;IAAA,uDAA4B;IAAA,4DAAI;;;IAAhC,0DAA4B;IAA5B,qIAA4B;;;IAC9B,oEAA0C;IAAA,uDAA0B;IAAA,4DAAI;;;IAA9B,0DAA0B;IAA1B,yHAA0B;;;;IAV1E,0EACE;IAAA,0EACE;IAAA,0EAAuB;IAAA,qEAAwD;IAAA,4DAAM;IACvF,4DAAM;IAEN,0EACE;IAAA,uEACE;IAAA,yEAAQ;IAAA,uDAAqB;IAAA,4DAAS;IACtC,kIACE;IACF,kIAA0C;IAC5C,4DAAO;IACP,2EACE;IAAA,2EACE;IAAA,4EAAqE;IAAjD,4YAAgD;IAAC,6DAAC;IAAA,4DAAO;IAC7E,wEACA;IAAA,4EAAoE;IAAjD,4YAAgD;IAAC,6DAAC;IAAA,4DAAO;IAC9E,4DAAM;IACR,4DAAM;IACN,sEAAI;IAAA,wDAAsF;IAAA,4DAAK;IACjG,4DAAM;IACR,4DAAM;;;IAnB0B,0DAAuB;IAAvB,gJAAuB;IAKzC,0DAAqB;IAArB,oHAAqB;IAC1B,0DAAuC;IAAvC,qIAAuC;IAEvC,0DAAsC;IAAtC,mIAAsC;IAKpB,0DAAsC;IAAtC,iIAAsC;IAIzD,0DAAsF;IAAtF,oQAAsF;;;IAW1F,oEAAyC;IAAA,uDAA4B;IAAA,4DAAI;;;IAAhC,0DAA4B;IAA5B,sIAA4B;;;IAFvE,0EACE;IAAA,qEAAI;IAAA,uDAA4B;IAAA,4DAAK;IACrC,wIAAyC;IAC3C,4DAAM;;;IAFA,0DAA4B;IAA5B,6HAA4B;IAC7B,0DAAqC;IAArC,qIAAqC;;;IAMtC,oEAA2C;IAAA,uDAA8B;IAAA,4DAAI;;;IAAlC,0DAA8B;IAA9B,wIAA8B;;;IAF3E,0EACE;IAAA,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,gJAA2C;IAC7C,4DAAM;;;IAFA,0DAAqB;IAArB,sHAAqB;IACtB,0DAAuC;IAAvC,uIAAuC;;;IAThD,0EACE;IAAA,uIACE;IAIF,mOACE;IAMF,0EACE;IAAA,qEAAI;IAAA,uDAAuH;IAAA,4DAAK;IAClI,4DAAM;IACR,4DAAM;;;;IAfoB,0DAAuD;IAAvD,qIAAuD;IAazE,0DAAuH;IAAvH,iVAAuH;;;IAkB3H,0EACE;IAAA,qEAAI;IAAA,iFAAsB;IAAA,gEAAO;IAAA,oEAAQ;IAAA,4DAAK;IAC9C,qEAAI;IAAA,uDAAiD;IAAA,4DAAK;IAC5D,4DAAM;;;IADA,0DAAiD;IAAjD,4IAAiD;;;;IAK3D,0EACE;IAAA,yEAAQ;IAAA,wEAAmD;IAAhC,mUAAoB,SAAS,KAAE;IAAC,oEACzD;IAAA,2EACoB;IAAA,gFAAqB;IAAA,4DAAO;IAClD,4DAAI;IAAA,4DAAS;IACf,4DAAM;;;;IACN,wEACE;IAAA,yEAAQ;IAAA,wEAA8D;IAAjC,4UAAoB,UAAU,KAAE;IAAC,mEAAQ;IAAA,4DAAI;IAAA,4DAAS;IAC7F,qEAAe;;;IA3FzB,wEACE;IAAA,0EACE;IAAA,yEACE;IAAA,0EACE;IAAA,0EAAmC;IAAA,wEAAiC;IAAA,4DAAC;IAAA,4DAAI;IAAA,wEAAO;IAAA,+DAAI;IAAA,4DAAQ;IAAA,4DAAM;IAClG,0EAAsB;IAAA,yEAAiC;IAAA,6DAAC;IAAA,4DAAI;IAAA,yEAAO;IAAA,mEAAO;IAAA,4DAAQ;IAAA,4DAAM;IACxF,2EAAsB;IAAA,yEAAiC;IAAA,6DAAC;IAAA,4DAAI;IAAA,yEAAO;IAAA,mEAAO;IAAA,4DAAQ;IAClF,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;IAEN,2EACE;IAAA,0EACE;IAAA,2EACE;IAAA,2EACE;IAAA,0EAAwB;IAAA,gEAAI;IAAA,4DAAK;IACjC,mIACE;IAqBJ,4DAAM;IAEN,2EACE;IAAA,0EAAwB;IAAA,wEAAY;IAAA,4DAAK;IAEzC,kIACE;IAiBF,uEACE;IAAA,2EACE;IAAA,2EACE;IAAA,sEAAI;IAAA,qEAAS;IAAA,4DAAK;IAClB,sEAAI;IAAA,wDAAe;IAAA,4DAAK;IAC1B,4DAAM;IACN,2EACE;IAAA,sEAAI;IAAA,+EAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAAoB;IAAA,4DAAK;IAC/B,4DAAM;IACN,2EACE;IAAA,sEAAI;IAAA,sFAA0B;IAAA,iEAAO;IAAA,qEAAQ;IAAA,4DAAK;IAClD,sEAAI;IAAA,wDAA0B;IAAA,4DAAK;IACrC,4DAAM;IACN,kIACE;IAGJ,4DAAM;IACR,4DAAM;IAEN,kIACE;IAKF,mJACE;IAEJ,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,qEAAe;;;IA/EmC,2DAA4D;IAA5D,oFAA4D;IA2B7E,0DAAoC;IAApC,oFAAoC;IAsBjD,0DAAe;IAAf,4FAAe;IAIf,0DAAoB;IAApB,iGAAoB;IAIpB,0DAA0B;IAA1B,8GAA0B;IAEF,0DAA2B;IAA3B,4FAA2B;IAOhC,0DAAkB;IAAlB,mFAAkB;IAMjC,0DAAiB;IAAjB,kFAAiB;;;;IAYvC,wEAA2C;IAAA,gGAAqC;IAAA,wEAAiC;IAA9B,+TAAkB,SAAS,KAAE;IAAC,kEAAO;IAAA,4DAAI;IAAC,+DAAG;IAAA,wEAAiC;IAA9B,+TAAkB,SAAS,KAAE;IAAC,kEAAO;IAAA,4DAAI;IAAC,iEAAK;IAAA,4DAAI;;;IACtL,wEAA0C;IAAA,wIAA6E;IAAA,4DAAI;;;IAL7H,wEACE;IAAA,0EACE;IAAA,qEACF;IAAA,4DAAM;IACN,6HAA2C;IAC3C,6HAA0C;IAC5C,qEAAe;;;IAFW,0DAAkB;IAAlB,mFAAkB;IAClB,0DAAiB;IAAjB,kFAAiB;;;IAW/B,wEAAiD;IAAA,iLAAsH;IAAA,4DAAI;;;ADvGlL,MAAM,oBAAoB;IAoB/B,YACU,UAAsB,EACtB,MAAc,EACd,cAA8B;QAF9B,eAAU,GAAV,UAAU,CAAY;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QApBxC,cAAS,GAAmB,EAAE,CAAC,CAAC,6BAA6B;QAE7D,eAAU,GAAW,CAAC,CAAC,CAAC,2BAA2B;QACnD,oBAAe,GAAW,CAAC,CAAC,CAAC,iCAAiC;QAC9D,eAAU,GAAW,CAAC,CAAC,CAAC,sBAAsB;QAC9C,oBAAe,GAAW,CAAC,CAAC,CAAC,qCAAqC;QAElE,aAAQ,GAAkB,EAAE,CAAC,CAAC,iDAAiD;QAE/E,cAAS,GAAY,KAAK,CAAC,CAAC,4DAA4D;QACxF,kBAAa,GAAY,KAAK,CAAC,CAAC,yCAAyC;QAEzE,wBAAmB,GAAY,KAAK,CAAC,CAAC,oCAAoC;QAC1E,yBAAoB,GAAW,CAAC,CAAC,CAAC,0BAA0B;IAQzD,CAAC;IAEJ,QAAQ;QACN,4EAA4E;QAC5E,IAAI,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAChC,uCAAuC;YACvC,kEAAkE;YAClE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,2BAA2B;YAClD,6EAA6E;YAC7E,IAAI,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACpC,oCAAoC;gBACpC,IACE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;oBAC7C,QAAQ;oBACV,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,KAAK,GAAG,EACzD;oBACA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;oBAChC,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,KAAK,IAAI,EAAE;wBAChE,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;4BAC/C,IAAI,GAAG,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE;gCAC1B,IAAI,CAAC,wBAAwB,GAAG,GAAG,CAAC,iBAAiB,CAAC,CAAC;gCACvD,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;6BACtE;wBACH,CAAC,CAAC;qBACH;yBAAM;wBACL,IAAI,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;wBACvE,IAAI,CAAC,wBAAwB,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC;qBACtD;iBACF;gBACD,IAAI,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;oBAClC,uCAAuC;oBACvC,sEAAsE;oBACtE,0EAA0E;oBAC1E,mEAAmE;oBACnE,IAAI,CAAC,iBAAiB,CACpB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC3C,SAAS,CACV,CAAC;iBACH;qBAAM;oBACL,iCAAiC;oBACjC,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAkB,EAAE,EAAE;wBACxD,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;wBAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACjC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACvC,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;oBACxB,CAAC,CAAC,CACH,CAAC;iBACH;aACF;iBAAM;gBACL,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC5B,MAAM,QAAQ,GAAG;wBACf,oDAAoD;wBACpD,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;wBAClD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;qBACpC,CAAC;oBACF,6CAA6C;oBAC7C,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;wBACpD,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;4BACvB,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;4BAClC,uEAAuE;4BACvE,cAAc,CAAC,OAAO,CACpB,QAAQ,EACR,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CACpC,CAAC;4BACF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC;4BACrD,IAAI,CAAC,kBAAkB,EAAE,CAAC;4BAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;4BACtB,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;yBACpC;oBACH,CAAC,CAAC,CACH,CAAC;iBACH;aACF;SACF;aAAM;YACL,iDAAiD;YACjD,IAAI,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE;gBAC7C,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;SACF;IACH,CAAC;IAED,YAAY,CAAC,QAAQ;QACnB,IAAI,SAAS,CAAC;QACd,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC3B,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;gBAC9B,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC5C;iBAAM;gBACL,SAAS,GAAG,EAAE,CAAC;aAChB;YACD,IACE,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS;gBAC1B,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,EACrD;gBACA,OAAO,CAAC,KAAK,CAAC,GAAG,uCAAuC,CAAC;gBACzD,+DAA+D;aAChE;iBAAM,IACL,SAAS,CAAC,CAAC,CAAC,KAAK,cAAc;gBAC/B,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,EACrD;gBACA,OAAO,CAAC,KAAK,CAAC,GAAG,6BAA6B,CAAC;gBAC/C,sDAAsD;aACvD;iBAAM,IAAI,OAAO,CAAC,IAAI,KAAK,WAAW,IAAI,OAAO,CAAC,IAAI,KAAK,OAAO,EAAE;gBACnE,QAAQ,OAAO,CAAC,IAAI,EAAE;oBACpB,KAAK,WAAW;wBACd,OAAO,CAAC,KAAK,CAAC,GAAG,2CAA2C,CAAC;wBAC7D,MAAM;oBACR,KAAK,KAAK;wBACR,OAAO,CAAC,KAAK,CAAC,GAAG,qCAAqC,CAAC;wBACvD,MAAM;oBACR,KAAK,OAAO;wBACV,OAAO,CAAC,KAAK,CAAC,GAAG,mCAAmC,CAAC;wBACrD,MAAM;oBACR,KAAK,QAAQ;wBACX,OAAO,CAAC,KAAK,CAAC,GAAG,gCAAgC,CAAC;wBAClD,MAAM;oBACR,KAAK,WAAW;wBACd,OAAO,CAAC,KAAK,CAAC,GAAG,wCAAwC,CAAC;wBAC1D,MAAM;oBACR,KAAK,UAAU;wBACb,OAAO,CAAC,KAAK,CAAC,GAAG,oCAAoC,CAAC;wBACtD,MAAM;oBACR,KAAK,cAAc;wBACjB,OAAO,CAAC,KAAK,CAAC,GAAG,yCAAyC,CAAC;wBAC3D,MAAM;oBACR,KAAK,MAAM;wBACT,OAAO,CAAC,KAAK,CAAC,GAAG,kCAAkC,CAAC;wBACpD,MAAM;oBACR,KAAK,SAAS;wBACZ,OAAO,CAAC,KAAK,CAAC,GAAG,oCAAoC,CAAC;wBACtD,MAAM;oBACR,KAAK,cAAc;wBACjB,OAAO,CAAC,KAAK,CAAC,GAAG,yCAAyC,CAAC;wBAC3D,MAAM;oBACR,KAAK,WAAW;wBACd,OAAO,CAAC,KAAK,CAAC,GAAG,uCAAuC,CAAC;wBACzD,MAAM;oBACR,KAAK,YAAY;wBACf,OAAO,CAAC,KAAK,CAAC,GAAG,wCAAwC,CAAC;wBAC1D,MAAM;oBACR,KAAK,mBAAmB;wBACtB,OAAO,CAAC,KAAK,CAAC,GAAG,6CAA6C,CAAC;wBAC/D,MAAM;oBACR,KAAK,kBAAkB;wBACrB,OAAO,CAAC,KAAK,CAAC,GAAG,mCAAmC,CAAC;wBACrD,MAAM;oBACR,KAAK,cAAc;wBACjB,OAAO,CAAC,KAAK,CAAC,GAAG,yCAAyC,CAAC;wBAC3D,MAAM;oBACR,KAAK,uBAAuB;wBAC1B,OAAO,CAAC,KAAK,CAAC,GAAG,8CAA8C,CAAC,CAAC,cAAc;wBAC/E,MAAM;oBACR,KAAK,qBAAqB;wBACxB,OAAO,CAAC,KAAK,CAAC,GAAG,8CAA8C,CAAC;wBAChE,MAAM;oBACR,KAAK,wBAAwB;wBAC3B,OAAO,CAAC,KAAK,CAAC;4BACZ,oDAAoD,CAAC;wBACvD,MAAM;oBACR,KAAK,WAAW;wBACd,OAAO,CAAC,KAAK,CAAC,GAAG,uCAAuC,CAAC;wBACzD,MAAM;oBACR,KAAK,wCAAwC;wBAC3C,OAAO,CAAC,KAAK,CAAC;4BACZ,qDAAqD,CAAC;wBACxD,MAAM;oBACR,KAAK,wCAAwC;wBAC3C,OAAO,CAAC,KAAK,CAAC;4BACZ,qDAAqD,CAAC;wBACxD,MAAM;oBACR,KAAK,eAAe;wBAClB,OAAO,CAAC,KAAK,CAAC,GAAG,0CAA0C,CAAC;wBAC5D,MAAM;oBACR,KAAK,yBAAyB;wBAC5B,OAAO,CAAC,KAAK,CAAC,GAAG,2CAA2C,CAAC;wBAC7D,MAAM;oBACR,KAAK,iBAAiB;wBACpB,OAAO,CAAC,KAAK,CAAC;4BACZ,mDAAmD,CAAC;wBACtD,MAAM;oBACR,KAAK,cAAc;wBACjB,OAAO,CAAC,KAAK,CAAC,GAAG,yCAAyC,CAAC;wBAC3D,MAAM;oBACR,KAAK,iCAAiC;wBACpC,OAAO,CAAC,KAAK,CAAC;4BACZ,qDAAqD,CAAC;wBACxD,MAAM;oBACR,KAAK,kCAAkC;wBACrC,OAAO,CAAC,KAAK,CAAC;4BACZ,mDAAmD,CAAC;wBACtD,MAAM;oBACR,KAAK,gBAAgB;wBACnB,OAAO,CAAC,KAAK,CAAC,GAAG,2CAA2C,CAAC;wBAC7D,MAAM;oBACR,KAAK,aAAa;wBAChB,OAAO,CAAC,KAAK,CAAC,GAAG,wCAAwC,CAAC;wBAC1D,MAAM;oBACR,KAAK,kBAAkB;wBACrB,OAAO,CAAC,KAAK,CAAC,GAAG,4CAA4C,CAAC;wBAC9D,MAAM;oBACR,KAAK,oBAAoB;wBACvB,OAAO,CAAC,KAAK,CAAC,GAAG,yCAAyC,CAAC;wBAC3D,MAAM;oBACR,KAAK,oBAAoB;wBACvB,OAAO,CAAC,KAAK,CAAC,GAAG,yCAAyC,CAAC;wBAC3D,MAAM;oBACR,KAAK,oBAAoB;wBACvB,OAAO,CAAC,KAAK,CAAC;4BACZ,qDAAqD,CAAC;wBACxD,MAAM;oBACR,KAAK,qBAAqB;wBACxB,OAAO,CAAC,KAAK,CAAC,GAAG,iDAAiD,CAAC;wBACnE,MAAM;oBACR,KAAK,aAAa;wBAChB,OAAO,CAAC,KAAK,CAAC,GAAG,uCAAuC,CAAC;wBACzD,MAAM;oBACR,KAAK,eAAe;wBAClB,OAAO,CAAC,KAAK,CAAC,GAAG,2CAA2C,CAAC;wBAC7D,MAAM;oBACR,KAAK,SAAS;wBACZ,OAAO,CAAC,KAAK,CAAC,GAAG,yCAAyC,CAAC;wBAC3D,MAAM;oBACR;wBACE,OAAO,CAAC,KAAK,CAAC,GAAG,sCAAsC,CAAC;iBAC3D;gBACD,8DAA8D;aAC/D;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2DAA2D;IAC3D,kBAAkB;QAChB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAChC,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QACxE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAA4C;IAC5C,iBAAiB,CAAC,SAAS,EAAE,IAAI;QAC/B,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,4DAA4D;YAC5D,0BAA0B;YAC1B,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAkB,CAAC,CAAC,wDAAwD;YACtH,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,MAAM,gBAAgB,GAAG,EAAE,CAAC,CAAC,sCAAsC;YACnE,MAAM,WAAW,GAAG,EAAE,CAAC,CAAC,6BAA6B;YACrD,IAAI,aAAa,KAAK,IAAI,EAAE;gBAC1B,wCAAwC;gBACxC,aAAa,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;oBACjC,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,EAAE;wBAC/B,0BAA0B;wBAC1B,IAAI,CAAC,IAAI,CACP,IAAI,2EAAW,CACb,QAAQ,CAAC,SAAS,EAClB,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,WAAW,EACpB,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,aAAa,EACtB,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,WAAW,EACpB,QAAQ,CAAC,QAAQ,EACjB,QAAQ,CAAC,SAAS,EAClB,QAAQ,CAAC,eAAe,CACzB,CACF,CAAC;qBACH;yBAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,WAAW,EAAE;wBACxC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,+DAA+D;qBACjG;yBAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,OAAO,EAAE;wBACpC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,sDAAsD;qBACnF;gBACH,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAgB,EAAE,EAAE;oBACtD,IAAI,WAAW,GAAG,EAAE,CAAC;oBACrB,WAAW,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,kDAAkD;oBACjF,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,EAAE;wBAC3B,uDAAuD;wBACvD,oGAAoG;wBACpG,IAAI,IAAI,CAAC,MAAM,EAAE;4BACf,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,oCAAoC;yBAChE;wBACD,IAAI,gBAAgB,CAAC,MAAM,EAAE;4BAC3B,WAAW,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,qDAAqD;yBAC7F;wBACD,IAAI,WAAW,CAAC,MAAM,EAAE;4BACtB,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,gDAAgD;yBACnF;wBACD,MAAM,cAAc,GAAG;4BACrB,mDAAmD;4BACnD,oDAAoD;4BACpD,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;4BACjD,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;4BAClD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;yBAClC,CAAC;wBACF,yBAAyB;wBACzB,IAAI,CAAC,UAAU;6BACZ,UAAU,CAAC,cAAc,CAAC;6BAC1B,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;4BACtB,IAAI,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;gCAC5B,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gCAClC,IAAI,CAAC,UAAU;qCACZ,WAAW,CAAC,cAAc,CAAC,EAAE,CAAC;qCAC9B,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;oCACtB,IAAI,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;wCAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CACxB,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,CACR,CAAC;wCACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wCACjC,IAAI,CAAC,kBAAkB,EAAE,CAAC;wCAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;wCACtB,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;qCACpC;gCACH,CAAC,CAAC,CAAC;6BACN;wBACH,CAAC,CAAC,CAAC;qBACN;yBAAM;wBACL,MAAM,oBAAoB,GAAG,IAAI,KAAK,EAAE,CAAC,CAAC,8BAA8B;wBACxE,MAAM,gBAAgB,GAAG,IAAI,KAAK,EAAE,CAAC,CAAC,0BAA0B;wBAChE,IAAI,kBAAkB,CAAC,CAAC,8BAA8B;wBACtD,IAAI,aAAa,GAAG,IAAI,CAAC,CAAC,kDAAkD;wBAC5E,IAAI,iBAAiB,GAAG,IAAI,CAAC,CAAC,sDAAsD;wBACpF,IAAI,YAAY,GAAG,IAAI,CAAC,CAAC,iDAAiD;wBAC1E,mCAAmC;wBACnC,kCAAkC;wBAClC,yCAAyC;wBACzC,MAAM;wBACN,MAAM;wBACN,kBAAkB;wBAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAC3C,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,EAAE;gCACrC,uBAAuB;gCACvB,YAAY,GAAG,KAAK,CAAC;gCACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCACpC,IACE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,EAAE;wCAC9B,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;wCACzB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;wCACjD,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;wCACpC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EACpC;wCACA,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;qCAClC;yCAAM;wCACL,kBAAkB,GAAG,IAAI,CAAC;qCAC3B;iCACF;6BACF;iCAAM,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,EAAE;gCAC9C,iBAAiB,GAAG,KAAK,CAAC;gCAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCAChD,IACE,gBAAgB,CAAC,CAAC,CAAC,CAAC,WAAW;wCAC7B,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW;wCAC5B,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS;4CAC3B,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS;wCAC1B,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,EAChD;wCACA,uBAAuB;wCACvB,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;qCAClC;yCAAM;wCACL;0IACkG;wCAClG,IACE,CAAC,WAAW,CAAC,IAAI,CACf,CAAC,GAAG,EAAE,EAAE,CACN,GAAG,CAAC,WAAW;4CACb,gBAAgB,CAAC,CAAC,CAAC,CAAC,WAAW;4CACjC,GAAG,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI;4CACrC,GAAG,CAAC,SAAS,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,CAClD;4CACD,CAAC,oBAAoB,CAAC,IAAI,CACxB,CAAC,GAAG,EAAE,EAAE,CACN,GAAG,CAAC,WAAW;gDACb,gBAAgB,CAAC,CAAC,CAAC,CAAC,WAAW;gDACjC,GAAG,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI;gDACrC,GAAG,CAAC,SAAS,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,CAClD,EACD;4CACA,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;yCAChD;qCACF;iCACF;6BACF;iCAAM,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,OAAO,EAAE;gCAC1C,uBAAuB;gCACvB,aAAa,GAAG,KAAK,CAAC;gCACtB,2BAA2B;gCAC3B,2BAA2B;gCAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCAC3C,IACE,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW;wCACxB,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW;wCAC5B,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;wCAC3C,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,EACrD;wCACA,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;qCAClC;yCAAM;wCACL;0IACkG;wCAClG,IACE,CAAC,WAAW,CAAC,IAAI,CACf,CAAC,GAAG,EAAE,EAAE;;4CACN,UAAG,CAAC,WAAW,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW;gDAC9C,GAAG,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;gDAChC,GAAG,CAAC,SAAS,YAAK,WAAW,CAAC,CAAC,CAAC,0CAAE,SAAS;yCAAA,CAC9C;4CACD,CAAC,gBAAgB,CAAC,IAAI,CACpB,CAAC,GAAG,EAAE,EAAE;;gDACN,UAAG,CAAC,WAAW,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW;oDAC9C,GAAG,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;oDAChC,GAAG,CAAC,SAAS,YAAK,WAAW,CAAC,CAAC,CAAC,0CAAE,SAAS;6CAAA,CAC9C,EACD;4CACA,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;yCACvC;qCACF;iCACF;6BACF;yBACF;wBACD,iBAAiB;wBAEjB,oEAAoE;wBACpE,IAAI,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE;4BACnC,WAAW,CAAC,IAAI,CAAC,GAAG,oBAAoB,CAAC,CAAC;yBAC3C;wBAED,gEAAgE;wBAChE,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC/B,WAAW,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC;yBACvC;wBAED,0DAA0D;wBAC1D,IACE,kBAAkB,KAAK,SAAS,KAChC,kBAAkB,aAAlB,kBAAkB,uBAAlB,kBAAkB,CAAE,MAAM,GAC1B;4BACA,WAAW,CAAC,IAAI,CAAC,GAAG,kBAAkB,CAAC,CAAC;yBACzC;wBAED,sCAAsC;wBACtC,IAAI,iBAAiB,EAAE;4BACrB,WAAW,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC;yBACvC;wBAED,kCAAkC;wBAClC,IAAI,aAAa,EAAE;4BACjB,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC;yBAClC;wBAED,iCAAiC;wBACjC,IAAI,YAAY,EAAE;4BAChB,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;yBAC3B;wBACD,MAAM,cAAc,GAAG;4BACrB,mDAAmD;4BACnD,oDAAoD;4BACpD,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;4BACjD,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;4BAClD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;yBAClC,CAAC;wBACF,yBAAyB;wBACzB,IAAI,CAAC,UAAU;6BACZ,UAAU,CAAC,cAAc,CAAC;6BAC1B,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;4BACtB,IAAI,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;gCAC5B,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gCAClC,IAAI,CAAC,UAAU;qCACZ,WAAW,CAAC,cAAc,CAAC,EAAE,CAAC;qCAC9B,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;oCACtB,IAAI,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;wCAC5B,6BAA6B;wCAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CACxB,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,CACR,CAAC;wCACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wCACjC,IAAI,CAAC,kBAAkB,EAAE,CAAC;wCAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;wCACtB,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;qCACpC;gCACH,CAAC,CAAC,CAAC;6BACN;wBACH,CAAC,CAAC,CAAC;qBACN;gBACH,CAAC,CAAC,CACH,CAAC;aACH;SACF;aAAM,IAAI,IAAI,KAAK,MAAM,EAAE;YAC1B,MAAM,UAAU,GAAG;gBACjB,mDAAmD;gBACnD,oDAAoD;gBACpD,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBACjD,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;aAChC,CAAC;YACF,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACvD,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;oBACvB,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;iBACpC;YACH,CAAC,CAAC,CACH,CAAC;SACH;IACH,CAAC;IAED,+CAA+C;IAC/C,YAAY;QACV,IAAI,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CACxB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAC3B,CAAC;YACnB,yCAAyC;YACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjC,wCAAwC;YACxC,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB;IACH,CAAC;IAED,mDAAmD;IACnD,qCAAqC;IACrC,yCAAyC;IACzC,uDAAuD;IACvD,QAAQ;IACR,QAAQ;IACR,IAAI;IAEJ,6BAA6B;IAC7B,cAAc;QACZ,IAAI,YAAY,GAAG,CAAC,CAAC,CAAC,wBAAwB;QAE9C,sEAAsE;QACtE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5B,IAAI,GAAG,CAAC,eAAe,EAAE;gBACvB,gDAAgD;gBAChD,kGAAkG;gBAClG,YAAY;oBACV,CAAC,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;wBACrD,GAAG,CAAC,eAAe;wBACrB,YAAY,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;QAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,qBAAqB;QAC9F,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,2DAA2D;QACjI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1H,CAAC;IAED,uCAAuC;IACvC,wBAAwB,CAAC,YAAY;QACnC,IAAI,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,eAAe,CAAC,CAAC,8DAA8D;QACrI,mBAAmB,GAAG,mBAAmB,GAAG,CAAC,CAAC,CAAC,oCAAoC;QACnF,IAAI,mBAAmB,GAAG,CAAC,EAAE;YAC3B,yEAAyE;YACzE,MAAM,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAgB,CAAC;YACvE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;YAC7B,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC;YACpC,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC;YAChE,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC;YAC7D,IAAI,WAAW,KAAK,SAAS,EAAE;gBAC7B,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;oBACrD,OAAO,CACL,WAAW,CAAC,IAAI,KAAK,WAAW;wBAChC,WAAW,CAAC,SAAS,KAAK,SAAS,CACpC,CAAC;gBACJ,CAAC,CAAC,CAAC;gBACH,IAAI,WAAW,EAAE;oBACf,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;iBAC3B;qBAAM;oBACL,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;aACF;iBAAM;gBACL,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC5B;SACF;aAAM;YACL,gEAAgE;YAChE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,eAAe,GAAG,mBAAmB,CAAC;YAClE,qFAAqF;YACrF,IAAI,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE;gBACzC,uCAAuC;gBACvC,cAAc,CAAC,OAAO,CACpB,MAAM,EACN,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAC3C,CAAC,CAAC,8CAA8C;aAClD;iBAAM;gBACL,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;aAC/C;YACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;QACD,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,oCAAoC;IACpC,kBAAkB;QAChB,IAAI,YAAY,CAAC;QACjB,IAAI,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,EAAE;YAC7B,wEAAwE;YACxE,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC;YAChE,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC;YAE7D,IAAI,WAAW,KAAK,SAAS,EAAE;gBAC7B,iIAAiI;gBACjI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE;oBACnD,OAAO,CAAC,CACN,WAAW,CAAC,IAAI,KAAK,WAAW;wBAChC,WAAW,CAAC,SAAS,KAAK,SAAS,CACpC,CAAC;gBACJ,CAAC,CAAC,CAAC;gBACH,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CACpC,CAAC,WAAW,EAAE,EAAE,CACd,WAAW,CAAC,SAAS,KAAK,SAAS;oBACnC,WAAW,CAAC,IAAI,KAAK,SAAS,CACjC,CAAC;aACH;YAED,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,CAAC,CAAC,EAAE;gBACrD,mIAAmI;gBACnI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,6CAA6C;gBACpF,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,EAAE;oBACpC,IACE,WAAW,CAAC,IAAI,KAAK,OAAO;wBAC5B,WAAW,CAAC,SAAS,KAAK,SAAS,EACnC;wBACA,WAAW,CAAC,aAAa,GAAG,CAAC,CAAC;qBAC/B;gBACH,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC,6CAA6C;gBAC5F,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,EAAE;oBACpC,IACE,WAAW,CAAC,IAAI,KAAK,OAAO;wBAC5B,WAAW,CAAC,SAAS,KAAK,SAAS,EACnC;wBACA,WAAW,CAAC,aAAa,GAAG,CAAC,CAAC;qBAC/B;gBACH,CAAC,CAAC,CAAC;aACJ;SACF;QACD,qFAAqF;QACrF,IAAI,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE;YACzC,uCAAuC;YACvC,cAAc,CAAC,OAAO,CACpB,MAAM,EACN,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAC3C,CAAC,CAAC,qCAAqC;SACzC;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;SAC/C;QACD,4CAA4C;QAC5C,MAAM,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAgB,CAAC;QACvE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;IACrC,CAAC;IAED,gCAAgC;IAChC,gBAAgB;QACd,MAAM,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAgB,CAAC;QACvE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IAC9B,CAAC;IAED,wCAAwC;IACxC,wBAAwB,CAAC,YAAY;QACnC,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,eAAe,CAAC,CAAC,oCAAoC;QACpG,YAAY,EAAE,CAAC,CAAC,oCAAoC;QACpD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,eAAe,GAAG,YAAY,CAAC,CAAC,4DAA4D;QACxH,kFAAkF;QAClF,IAAI,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE;YACzC,oCAAoC;YACpC,cAAc,CAAC,OAAO,CACpB,MAAM,EACN,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAC3C,CAAC;SACH;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;SAC/C;QACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,wDAAwD;IACxD,UAAU,CAAC,IAAY;QACrB,2DAA2D;QAC3D,IAAI,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,UAAU,EAAE;YACvD,wCAAwC;YACxC,IAAI,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,EAAE;oBAC1C,UAAU,EAAE,IAAI,CAAC,cAAc;iBAChC,CAAC,CAAC;aACJ;SACF;aAAM;YACL,cAAc,CAAC,OAAO,CACpB,MAAM,EACN,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAC3C,CAAC;YACF,4BAA4B;YAC5B,6EAA6E;YAC7E,mCAAmC;YACnC,6EAA6E;YAC7E,IAAI;YAEJ,IAAI,IAAI,KAAK,SAAS,EAAE;gBACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;aACzE;SACF;IACH,CAAC;IAED,yCAAyC;IACzC,QAAQ,CAAC,IAAY;QACnB,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;SACzE;aAAM,IAAI,IAAI,KAAK,SAAS,EAAE;YAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;SACzE;IACH,CAAC;IAED,uCAAuC;IACvC,WAAW;QACT,iDAAiD;QACjD,2CAA2C;QAC3C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC7B,IAAI,GAAG,EAAE;gBACP,GAAG,CAAC,WAAW,EAAE,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;wFAzvBU,oBAAoB;oGAApB,oBAAoB;;;;;;QClBjC,yEAEE;QAAA,yEACE;QAAA,yEACE;QAAA,oEAAG;QAAA,uEAAsD;QAAA,+DAAI;QAAA,4DAAI;QAAC,uEAAM;QAAA,4DAAC;QAAA,4DAAO;QAAC,gEAAI;QAAA,4DAAI;QAC3F,4DAAM;QACR,4DAAM;QAEN,mIACE;QAgGF,oIACE;QAOF,0EACE;QAAA,0EAEE;QACA,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,2EAAwB;QAAA,8FACtB;QAAA,+GAAiD;QACnD,4DAAM;QAEN,8EAA2D;QAA/B,6IAAS,wBAAoB,IAAC;QAAC,+DAAG;QAAA,4DAAS;QACvE,8EAAyD;QAA7B,6IAAS,sBAAkB,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC1E,4DAAM;QACR,4DAAM;QACR,4DAAM;QAER,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAhIgC,0DAAwB;QAAxB,6IAAwB;QAI9C,0DAA2B;QAA3B,yFAA2B;QAiG3B,0DAA4B;QAA5B,0FAA4B;QAgBH,0DAAqB;QAArB,mFAAqB;;6FDvGjD,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;4PAEqB,SAAS;kBAA5B,uDAAS;mBAAC,OAAO;;;;;;;;;;;;;;AEnBpB;AAAA;AAAO,MAAM,SAAS;CAIrB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJ0G;AAC1B;AAMjB;AACF;AAEL;;;;;;;;;;IC8B7C,0EAIE;IAAA,qEAAI;IAAA,2EAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,uDAAY;IAAA,4DAAK;IACvB,4DAAM;;;IADA,0DAAY;IAAZ,uFAAY;;;IAGhB,0EACE;IAAA,qEAAI;IAAA,2EAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,uDAAmC;IAAA,4DAAK;IAC9C,4DAAM;;;IADA,0DAAmC;IAAnC,qHAAmC;;;IAuBvC,wEACE;IAAA,uDACF;IAAA,4DAAI;;;IADF,0DACF;IADE,kGACF;;;IAWE,wEACE;IAAA,uDACF;IAAA,4DAAI;;;IADF,0DACF;IADE,iGACF;;;IAUA,wEACE;IAAA,uDACF;IAAA,4DAAI;;;IADF,0DACF;IADE,+FACF;;;IAwBF,wEASE;IAAA,mGACF;IAAA,4DAAI;;;;IAEN,yEACE;IAAA,wEAGG;IADD,kVAAwC;IACvC,uDAAgB;IAAA,4DAClB;IACH,4DAAS;;;IAFJ,0DAAgB;IAAhB,2FAAgB;;;IAGrB,yEACE;IAAA,wEACG;IAAA,sEAKA;IAAA,8EAAmB;IAAA,mEACrB;IAAA,4DAAI;IACP,4DAAS;;;;ADrIhB,MAAM,oBAAoB;IAmC/B,YAAoB,EAAe,EAAU,UAAsB,EAAU,MAAc,EACvE,MAAqB,EAAU,MAAc,EAAU,cAA8B,EACrF,IAAY,EAAU,OAA0B;QAFhD,OAAE,GAAF,EAAE,CAAa;QAAU,eAAU,GAAV,UAAU,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QACvE,WAAM,GAAN,MAAM,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAgB;QACrF,SAAI,GAAJ,IAAI,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAmB;QA/BpE,mBAAc,GAAY,KAAK,CAAC;QAIhC,eAAU,GAAc,IAAI,sEAAS,EAAE,CAAC,CAAC,yCAAyC;QAClF,gBAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,oCAAoC;QAE5E,cAAS,GAAmB,EAAE,CAAC,CAAC,6BAA6B;QAE7D,UAAK,GAAW,CAAC,CAAC,CAAC,2BAA2B;QAC9C,wBAAmB,GAAY,IAAI,CAAC,CAAC,sDAAsD;QAG3F,gBAAW,GAAU,EAAE,CAAC,CAAC,4BAA4B;QAErD,aAAQ,GAAkB,EAAE,CAAC,CAAC,wBAAwB;QAItD,0BAAqB,GAAY,KAAK,CAAC;QACvC,yBAAoB,GAAY,KAAK,CAAC;QACtC,uBAAkB,GAAY,KAAK,CAAC;QAIpC,yBAAoB,GAAW,CAAC,CAAC;QACjC,wBAAmB,GAAY,KAAK,CAAC,CAAC,oCAAoC;IAKH,CAAC;IAExE,QAAQ;QACN,sDAAsD;QACtD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC7D,IAAI,GAAG,CAAC,GAAG,EAAE;gBACX,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC;gBACzB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC;gBAC5B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC,CAAC;QACJ,IACE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAC7C,QAAQ;YACV,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,KAAK,GAAG,EACzD;YACA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,KAAK,IAAI,EAAE;gBAChE,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBAC/C,IAAI,GAAG,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE;wBAC1B,IAAI,CAAC,wBAAwB,GAAG,GAAG,CAAC,iBAAiB,CAAC,CAAC;wBACvD,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;qBACtE;gBACH,CAAC,CAAC;aACH;iBAAK;gBACJ,IAAI,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;gBACvE,IAAI,CAAC,wBAAwB,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC;aACtD;SACF;QACD,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE,EAAE,2CAA2C;YAC/E,kHAAkH;YAClH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC7G,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;oBACvB,IAAI,CAAC,QAAQ,GAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAmB,CAAC,CAAC,kDAAkD;oBACtH,IAAI,CAAC,cAAc,EAAE,CAAC;iBACvB;YACH,CAAC,EAAE,GAAG,CAAC,EAAE;;gBACP,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,KAAK,0CAAE,OAAO,MAAI,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,EAAC,CAAC;YACzD,CAAC,CAAC,CAAC,CAAC;SACL;aAAM,EAAE,8BAA8B;YACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACjF,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;oBACvB,IAAI,CAAC,QAAQ,GAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAmB,CAAC,CAAC,kDAAkD;oBACtH,IAAI,CAAC,cAAc,EAAE,CAAC;iBACvB;YACH,CAAC,EAAE,GAAG,CAAC,EAAE;;gBACP,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,KAAK,0CAAE,OAAO,MAAI,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,EAAC,CAAC;YACzD,CAAC,CAAC,CAAC,CAAC;SACL;QACD,oDAAoD;QACpD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACnE,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,6CAA6C;aACnF;QACH,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,2EAA2E;IAC3E,eAAe;QACb,kEAAkE;QAClE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,MAAM,SAAS,GAAG;YAChB,IAAI,EAAE;gBACJ,SAAS,EAAE,SAAS;gBACpB,KAAK,EAAE,SAAS;gBAChB,UAAU,EAAE,yCAAyC;gBACrD,aAAa,EAAE,aAAa;gBAC5B,QAAQ,EAAE,MAAM;gBAChB,eAAe,EAAE;oBACf,KAAK,EAAE,0BAA0B;oBACjC,QAAQ,EAAE,OAAO;oBACjB,UAAU,EAAE,0FAA0F;iBACvG;aACF;YACD,OAAO,EAAE;gBACP,KAAK,EAAE,KAAK;gBACZ,SAAS,EAAE,SAAS;aACrB;SACF,CAAC;QAEF,+CAA+C;QAC/C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,6EAAW,CAAC,aAAa,CAAC,CAAC;QAChD,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QAExC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,wBAAwB,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;QAC7H,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE;YACrC,IAAI,KAAK,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,EAAE;gBACtC,IAAI,KAAK,CAAC,KAAK,KAAK,SAAS,EAAE;oBAC7B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;oBAClC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;iBAC5C;qBAAK;oBACJ,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;iBACpC;aACF;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;QAC9F,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE;YACrC,IAAI,KAAK,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,EAAE;gBACtC,IAAI,KAAK,CAAC,KAAK,KAAK,SAAS,EAAE;oBAC7B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;oBACjC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;iBAC3C;qBAAK;oBACJ,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;iBACnC;aACF;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;QAC1F,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE;YAClC,IAAI,KAAK,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,EAAE;gBACtC,IAAI,KAAK,CAAC,KAAK,KAAK,SAAS,EAAE;oBAC7B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;oBAC/B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;iBACzC;qBAAK;oBACJ,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;iBACjC;aACF;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,6BAA6B;IAC7B,cAAc;QACZ,IAAI,KAAK,CAAC;QACV,IAAI,QAAQ,CAAC;QACb,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,IAAI,eAAe,GAAG,CAAC,CAAC,CAAC,2BAA2B;QACpD,IAAI,YAAY,GAAG,CAAC,CAAC,CAAC,wBAAwB;QAE9C,sEAAsE;QACtE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5B,IAAI,GAAG,CAAC,eAAe,EAAE,EAAE,gDAAgD;gBACzE,kGAAkG;gBAClG,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,eAAe,CAAC,GAAG,YAAY,CAAC;aAC/G;QACH,CAAC,CAAC,CAAC;QACH,KAAK,GAAG,YAAY,CAAC;QACrB,eAAe,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC,qBAAqB;QACrD,QAAQ,GAAG,KAAK,GAAG,eAAe,CAAC,CAAC,2DAA2D;QAC/F,QAAQ,GAAG,IAAI,GAAG,QAAQ,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,2DAA2D;QACzG,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IACrF,CAAC;IAED,yCAAyC;IACzC,UAAU,CAAC,SAAiB;QAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC5E,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7B,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,kDAAkD;aAC5F;QACH,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,yBAAyB;IACzB,UAAU;QACR,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,2BAA2B,CAAC,EAAE;YAChE,MAAM,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAClD,CAAC,CAAC,EAAE,GAAG,2BAA2B,CAAC;YACnC,CAAC,CAAC,IAAI,GAAG,iBAAiB,CAAC;YAC3B,CAAC,CAAC,GAAG,GAAG,2BAA2B,CAAC;YACpC,CAAC,CAAC,MAAM,GAAG,GAAG,EAAE;gBACd,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,6EAAW,CAAC,aAAa,CAAC,CAAC;YAC7D,CAAC,CAAC;YACF,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;SACrC;IACH,CAAC;IAED,kCAAkC;IAClC,iBAAiB;QACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAMlF,CAAC,CAAC;IACL,CAAC;IAED,2CAA2C;IAC3C,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IACnC,CAAC;IAED,kDAAkD;IAClD,iBAAiB,CAAC,SAAoB;QACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC5C,MAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrC,IAAI,OAAO,YAAY,0DAAW,EAAE;gBAClC,OAAO,CAAC,aAAa,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAC3C;iBAAM,IAAI,OAAO,YAAY,wDAAS,EAAE;gBACvC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,EAAE,KAAK,EAAE;QAChB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;IACH,CAAC;IAED,iCAAiC;IAC3B,iBAAiB,CAAC,IAAI;;;YAC1B,4BAA4B;YAC5B,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE,6CAA6C;gBAC/D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,0DAA0D;aACzF;iBAAM;gBACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,kCAAkC;gBAClC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,CAAC,wCAAwC;gBAC1E,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE;oBACtE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY;oBAC7B,YAAY,QAAE,IAAI,CAAC,cAAc,0CAAE,IAAI;oBACvC,eAAe,QAAE,IAAI,CAAC,cAAc,0CAAE,OAAO;oBAC7C,aAAa,QAAE,IAAI,CAAC,cAAc,0CAAE,QAAQ;oBAC5C,aAAa,QAAE,IAAI,CAAC,cAAc,0CAAE,KAAK;oBACzC,WAAW,QAAE,IAAI,CAAC,cAAc,0CAAE,OAAO;iBAC1C,CAAC,CAAC;gBACH,IAAI,KAAK,EAAE;oBACT,sDAAsD;oBACtD,4BAA4B;oBAC5B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;iBACvB;qBAAM;oBACL,sDAAsD;oBACtD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACzB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBACrB;aACF;;KACF;IAED,iDAAiD;IACjD,SAAS,CAAC,KAAK;QACb,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,MAAM,WAAW,GAAG;YAClB,KAAK,EAAE,KAAK,CAAC,EAAE;YACf,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;SAC/B,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACvE,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;gBACvB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aACrC;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;;YACP,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,KAAK,0CAAE,OAAO,MAAI,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,EAAC,CAAC;QACzD,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,mDAAmD;IACnD,OAAO,CAAC,KAAK;QACX,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,KAAK,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAClC;IACH,CAAC;IAGD,0BAA0B;IAC1B,WAAW,CAAC,KAAa;QACvB,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC;QACtG,MAAM,SAAS,mBACb,UAAU,EAAE,IAAI,CAAC,SAAS;YAC1B,qDAAqD;YACrD,OAAO,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EACnD,MAAM,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,EAC/B,cAAc,EAAE,KAAK,EACrB,gBAAgB,EAAE,IAAI,CAAC,QAAQ;YAC/B,wDAAwD;YACxD,OAAO,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IACpD,iBAAiB,CACrB,CAAC;QACF,8CAA8C;QAC9C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACvE,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;gBACvB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC;gBACjC,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBACpC,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;gBACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;aAC3F;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;;YACP,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,KAAK,0CAAE,OAAO,MAAI,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,EAAC,CAAC;QACzD,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,yBAAyB;IACzB,UAAU;QACR,MAAM,UAAU,GAAG;YACjB,mDAAmD;YACnD,oDAAoD;YACpD,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACjD,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAClD,IAAI,EAAE,IAAI;SACX,CAAC;QACF,qCAAqC;QACrC,gFAAgF;QAChF,+BAA+B;QAC/B,6GAA6G;QAC7G,iGAAiG;QACjG,MAAM;QACN,cAAc;QACd,4DAA4D;QAC5D,OAAO;IACT,CAAC;IAED,uEAAuE;IACvE,aAAa;QACX,IAAI,IAAI,CAAC,mBAAmB,EAAE,EAAE,qCAAqC;YACnE,6EAA6E;YAC7E,IAAI,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAE,oCAAoC;gBAC1E,IAAI,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAE,oCAAoC;oBAC1E,4CAA4C;oBAC5C,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAkB,CAAC,CAAC,0CAA0C;oBAC5I,MAAM,gBAAgB,GAAG,EAAE,CAAC,CAAE,sCAAsC;oBACpE,MAAM,WAAW,GAAG,EAAE,CAAC,CAAC,8BAA8B;oBACtD,IAAI,IAAI,CAAC;oBACT,IAAI,aAAa,KAAK,IAAI,EAAE,EAAE,wCAAwC;wBACpE,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;4BAC/B,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,EAAE;gCAC/B,0BAA0B;gCAC1B,IAAI,GAAG,IAAI,2EAAW,CACpB,QAAQ,CAAC,SAAS,EAClB,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,WAAW,EACpB,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,aAAa,EACtB,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,WAAW,EACpB,QAAQ,CAAC,QAAQ,EACjB,QAAQ,CAAC,SAAS,EAClB,QAAQ,CAAC,eAAe,CACzB,CAAC;6BACH;iCAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,WAAW,EAAE;gCACxC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,+DAA+D;6BACjG;iCAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,OAAO,EAAE;gCACpC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,sDAAsD;6BACnF;wBACH,CAAC,CAAC,CAAC;qBACJ;oBACD,uCAAuC;oBACvC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;wBAC7B,kHAAkH;wBAClH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;4BAC7G,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;gCACvB,IAAI,WAAW,GAAG,EAAE,CAAC;gCACrB,WAAW,GAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAmB,CAAC,CAAE,0CAA0C;gCAC7G,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,EAAE,EAAG,uDAAuD;oCACrF,oGAAoG;oCACpG,WAAW,CAAC,IAAI,mBAAK,IAAI,EAAE,CAAC,CAAC,oCAAoC;oCACjE,WAAW,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,qDAAqD;oCAC5F,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,gDAAgD;iCACnF;qCACI;oCACH,MAAM,oBAAoB,GAAG,IAAI,KAAK,EAAE,CAAC,CAAC,8BAA8B;oCACxE,MAAM,gBAAgB,GAAG,IAAI,KAAK,EAAE,CAAC,CAAC,0BAA0B;oCAChE,IAAI,kBAAkB,GAAG,EAAE,CAAC,CAAC,8BAA8B;oCAC3D,IAAI,aAAa,GAAG,IAAI,CAAC,CAAC,kDAAkD;oCAC5E,IAAI,iBAAiB,GAAG,IAAI,CAAC,CAAC,sDAAsD;oCACpF,IAAI,YAAY,GAAG,IAAI,CAAC;oCACxB,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;oCAC1B,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;oCAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wCAC3C,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,EAAE,EAAE,2BAA2B;4CAClE,+FAA+F;4CAC/F,YAAY,GAAG,KAAK,CAAC;4CACrB,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oDAC5D,CAAC,IAAI,CAAC,SAAS,KAAK,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;mDAC3C,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;gDACtC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;gDACrC,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;6CAClC;iDAAM;gDACL,kBAAkB,GAAG,IAAI,CAAC;6CAC3B;yCACF;6CAAM,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,EAAE;4CAC9C,iBAAiB,GAAG,KAAK,CAAC;4CAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gDAChD,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,WAAW,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW;uDAC7D,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;uDAChD,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;oDAC/D,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;iDAClC;qDAAM;oDACL;0JACsG;oDACtG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;2DAC7E,CAAC,GAAG,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;wDAChG,CAAC,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;+DACnF,CAAC,GAAG,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,KAAK,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;wDACrG,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;qDAChD;iDACF;6CACF;yCACF;6CAAM,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,OAAO,EAAE;4CAC1C,aAAa,GAAG,KAAK,CAAC;4CACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gDAC3C,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW;uDACxD,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;uDAC3C,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;oDAC1D,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;iDAClC;qDAAM;oDACL;0JACsG;oDACtG,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;2DACzE,CAAC,GAAG,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wDACvF,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;4DAC7E,CAAC,GAAG,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;wDACxF,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;qDACvC;iDACF;6CACF;yCACF;qCACF;oCAED,oEAAoE;oCACpE,IAAI,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE;wCACnC,WAAW,CAAC,IAAI,CAAC,GAAG,oBAAoB,CAAC,CAAC;qCAC3C;oCAED,gEAAgE;oCAChE,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;wCAC/B,WAAW,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC;qCACvC;oCAED,0DAA0D;oCAC1D,IAAI,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;wCAC9C,WAAW,CAAC,IAAI,mBAAK,kBAAkB,EAAE,CAAC;qCAC3C;oCAED,sCAAsC;oCACtC,IAAI,iBAAiB,EAAE;wCACrB,WAAW,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC;qCACvC;oCAED,kCAAkC;oCAClC,IAAI,aAAa,EAAE;wCACjB,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC;qCAClC;oCAED,IAAI,YAAY,EAAE;wCAChB,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;qCAC3B;iCACF;gCAED,MAAM,UAAU,GAAG;oCACjB,mDAAmD;oCACnD,oDAAoD;oCACpD,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oCACjD,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oCAClD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;iCAClC,CAAC;gCACF,yBAAyB;gCACzB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;oCACrF,IAAI,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;wCAC5B,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;wCACpC,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;wCACnC,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;qCACtB;gCACH,CAAC,CAAC,CAAC,CAAC;6BACL;wBACH,CAAC,CAAC,CAAC,CAAC;oBAEN,CAAC,CAAC,CAAC;iBACJ;qBACI;oBACH,OAAO,IAAI,CAAC;iBACb;aACF;iBACI;gBACH,oHAAoH;gBACpH,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,mDAAmD;gBACrH,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC,4DAA4D;gBAChG,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBACpC,OAAO,IAAI,CAAC;aACb;SACF;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,uCAAuC;IACvC,WAAW;QACT,iDAAiD;QACjD,2CAA2C;QAC3C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACzB,IAAI,CAAC,EAAE;gBACL,CAAC,CAAC,WAAW,EAAE,CAAC;aACjB;QACH,CAAC,CAAC,CAAC;QACH,uBAAuB;QACvB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;;wFA3hBU,oBAAoB;oGAApB,oBAAoB;;;;;;QCnBjC,iFAMG;QAAA,uEAAwB;QAAA,qEAAU;QAAA,4DAAI;QAAA,4DACxC;QAED,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,oEACE;QAAA,uEAAsD;QAAA,+DAAI;QAAA,4DAAI;QAAC,8DAC/D;QAAA,wEAAsD;QAAA,gEAAI;QAAA,4DAAI;QAAC,uEACjE;QAAA,4DAAI;QACN,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,wEAAgC;QAAA,6DAAC;QAAA,4DAAI;QAAA,yEAAO;QAAA,gEAAI;QAAA,4DAAQ;QAC1D,4DAAM;QACN,2EACE;QAAA,wEAAgC;QAAA,6DAAC;QAAA,4DAAI;QAAA,yEAAO;QAAA,mEAAO;QAAA,4DAAQ;QAC7D,4DAAM;QACN,2EACE;QAAA,wEAAgC;QAAA,6DAAC;QAAA,4DAAI;QAAA,yEAAO;QAAA,mEAAO;QAAA,4DAAQ;QAC7D,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,0EACE;QAAA,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,mHAIE;QAGF,+MACE;QAWJ,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,4EACE;QAAA,2EACE;QAAA,yEAAO;QAAA,6EAAiB;QAAA,wEAAM;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAC9C,sEAKO;QACP,+GACE;QAEJ,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,yEAAO;QAAA,8EAAkB;QAAA,wEAAM;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAC/C,sEAKO;QACP,+GACE;QAEJ,4DAAM;QACN,2EACE;QAAA,yEAAQ;QAAA,iEAAI;QAAA,wEAAM;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAClC,sEAKO;QACP,+GACE;QAEJ,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,yEAAO;QAAA,yEAAa;QAAA,wEAAM;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAC1C,wEAkBA;QAAA,+GASE;QAEJ,4DAAM;QACN,yHACE;QAMF,yHACE;QASJ,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;;QA1JJ,4EAAmB;QAQgB,0DAAwB;QAAxB,8IAAwB;QACxB,0DAAwB;QAAxB,8IAAwB;QA4B/C,2DAA2C;QAA3C,0FAA2C;QAsBvC,0DAAyB;QAAzB,sFAAyB;QAKzB,0DAEC;QAFD,gIAEC;QAEA,0DAA6B;QAA7B,2FAA6B;QAS5B,0DAEC;QAFD,+HAEC;QAEA,0DAA4B;QAA5B,0FAA4B;QAQ7B,0DAEC;QAFD,6HAEC;QAEA,0DAA0B;QAA1B,wFAA0B;QAa7B,0DAWC;QAXD,iiCAWC;QAGD,0DAKC;QALD,+pBAKC;QAMG,0DAAuB;QAAvB,qFAAuB;QAOvB,0DAAsB;QAAtB,oFAAsB;;6FD5H/B,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;slBAG0C,WAAW;kBAAnD,uDAAS;mBAAC,UAAU,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;;;;;;;;;;;;AErBzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACmB;AACF;AACa;AACA;AACA;AACnB;AACc;AACR;AACtB;AACa;AACR;;AAexC,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,mBAFV,CAAC,6EAAU,EAAE,oEAAa,CAAC,YAV7B;YACP,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,sEAAiB;YACjB,qFAAgB;YAChB,6EAA0B;YAC1B,wDAAY;YACZ,6DAAgB;SACjB;mIAGU,UAAU,mBAbN,yFAAoB,EAAE,yFAAoB,EAAE,yFAAoB,aAE7E,4DAAY;QACZ,0DAAW;QACX,kEAAmB;QACnB,sEAAiB;QACjB,qFAAgB;QAChB,6EAA0B;QAC1B,wDAAY;QACZ,6DAAgB;6FAIP,UAAU;cAdtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,yFAAoB,EAAE,yFAAoB,EAAE,yFAAoB,CAAC;gBAChF,OAAO,EAAE;oBACP,4DAAY;oBACZ,0DAAW;oBACX,kEAAmB;oBACnB,sEAAiB;oBACjB,qFAAgB;oBAChB,6EAA0B;oBAC1B,wDAAY;oBACZ,6DAAgB;iBACjB;gBACD,SAAS,EAAE,CAAC,6EAAU,EAAE,oEAAa,CAAC;aACvC;;;;;;;;;;;;;;AC1BD;AAAA;AAAA;AAA2C;;AAYpC,MAAM,aAAa;IACxB,aAAa,CACX,SAAiC,EACjC,YAAoC,EACpC,YAAiC,EACjC,SAA+B;QAC/B,OAAO,SAAS,CAAC,aAAa,EAAE,CAAC;IACnC,CAAC;;0EAPU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAHZ,MAAM;6FAGP,aAAa;cAJzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"views-cart-cart-module-es2015.js","sourcesContent":["import { Validators, NgControl } from '@angular/forms';\nimport { Directive, ElementRef, Self, Optional, HostListener, NgModule } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/forms';\nconst defaultFormat = /(\\d{1,4})/g;\nconst cards = [\n    {\n        type: 'maestro',\n        patterns: [5018, 502, 503, 506, 56, 58, 639, 6220, 67],\n        format: defaultFormat,\n        length: [12, 13, 14, 15, 16, 17, 18, 19],\n        cvvLength: [3],\n        luhn: true,\n    }, {\n        type: 'forbrugsforeningen',\n        patterns: [600],\n        format: defaultFormat,\n        length: [16],\n        cvvLength: [3],\n        luhn: true,\n    }, {\n        type: 'dankort',\n        patterns: [5019],\n        format: defaultFormat,\n        length: [16],\n        cvvLength: [3],\n        luhn: true,\n    }, {\n        type: 'visa',\n        patterns: [4],\n        format: defaultFormat,\n        length: [13, 16, 19],\n        cvvLength: [3],\n        luhn: true,\n    }, {\n        type: 'mastercard',\n        patterns: [51, 52, 53, 54, 55, 22, 23, 24, 25, 26, 27],\n        format: defaultFormat,\n        length: [16],\n        cvvLength: [3],\n        luhn: true,\n    }, {\n        type: 'amex',\n        patterns: [34, 37],\n        format: /(\\d{1,4})(\\d{1,6})?(\\d{1,5})?/,\n        length: [15],\n        cvvLength: [3, 4],\n        luhn: true,\n    }, {\n        type: 'dinersclub',\n        patterns: [30, 36, 38, 39],\n        format: /(\\d{1,4})(\\d{1,6})?(\\d{1,4})?/,\n        length: [14],\n        cvvLength: [3],\n        luhn: true,\n    }, {\n        type: 'discover',\n        patterns: [60, 64, 65, 622],\n        format: defaultFormat,\n        length: [16],\n        cvvLength: [3],\n        luhn: true,\n    }, {\n        type: 'unionpay',\n        patterns: [62, 88],\n        format: defaultFormat,\n        length: [16, 17, 18, 19],\n        cvvLength: [3],\n        luhn: false,\n    }, {\n        type: 'jcb',\n        patterns: [35],\n        format: defaultFormat,\n        length: [16, 19],\n        cvvLength: [3],\n        luhn: true,\n    },\n];\n// @dynamic\nclass CreditCard {\n    static cards() {\n        return cards;\n    }\n    static cardFromNumber(num) {\n        num = (num + '').replace(/\\D/g, '');\n        for (let i = 0, len = cards.length; i < len; i++) {\n            const card = cards[i];\n            const ref = card.patterns;\n            for (let j = 0, len1 = ref.length; j < len1; j++) {\n                const pattern = ref[j];\n                const p = pattern + '';\n                if (num.substr(0, p.length) === p) {\n                    return card;\n                }\n            }\n        }\n    }\n    static restrictNumeric(e) {\n        if (e.metaKey || e.ctrlKey) {\n            return true;\n        }\n        if (e.which === 32) {\n            return false;\n        }\n        if (e.which === 0) {\n            return true;\n        }\n        if (e.which < 33) {\n            return true;\n        }\n        const input = String.fromCharCode(e.which);\n        return !!/[\\d\\s]/.test(input);\n    }\n    static hasTextSelected(target) {\n        return target.selectionStart !== null && target.selectionStart !== target.selectionEnd;\n    }\n    static cardType(num) {\n        if (!num) {\n            return num;\n        }\n        const card = this.cardFromNumber(num);\n        if (card !== null && typeof card !== 'undefined') {\n            return card.type;\n        }\n        else {\n            return null;\n        }\n    }\n    static formatCardNumber(num) {\n        num = num.replace(/\\D/g, '');\n        const card = this.cardFromNumber(num);\n        if (!card) {\n            return num;\n        }\n        const upperLength = card.length[card.length.length - 1];\n        num = num.slice(0, upperLength);\n        if (card.format.global) {\n            const matches = num.match(card.format);\n            if (matches != null) {\n                return matches.join(' ');\n            }\n        }\n        else {\n            const groups = card.format.exec(num);\n            if (groups == null) {\n                return;\n            }\n            groups.shift();\n            return groups.filter(Boolean).join(' ');\n        }\n    }\n    static safeVal(value, target, updateValue) {\n        let cursor = null;\n        const last = target.value;\n        let result = null;\n        try {\n            cursor = target.selectionStart;\n        }\n        catch (error) { }\n        updateValue(value);\n        if (cursor !== null && target === document.activeElement) {\n            if (cursor === last.length) {\n                cursor = value.length;\n            }\n            if (last !== value) {\n                const prevPair = last.slice(cursor - 1, +cursor + 1 || 9e9);\n                const currPair = value.slice(cursor - 1, +cursor + 1 || 9e9);\n                const digit = value[cursor];\n                if (/\\d/.test(digit) && prevPair === (`${digit} `) && currPair === (` ${digit}`)) {\n                    cursor = cursor + 1;\n                }\n            }\n            result = cursor;\n        }\n        return result;\n    }\n    static isCardNumber(key, target) {\n        const digit = String.fromCharCode(key);\n        if (!/^\\d+$/.test(digit)) {\n            return false;\n        }\n        if (CreditCard.hasTextSelected(target)) {\n            return true;\n        }\n        const value = (target.value + digit).replace(/\\D/g, '');\n        const card = CreditCard.cardFromNumber(value);\n        if (card) {\n            return value.length <= card.length[card.length.length - 1];\n        }\n        else {\n            return value.length <= 16;\n        }\n    }\n    static restrictExpiry(key, target) {\n        const digit = String.fromCharCode(key);\n        if (!/^\\d+$/.test(digit) || this.hasTextSelected(target)) {\n            return false;\n        }\n        const value = `${target.value}${digit}`.replace(/\\D/g, '');\n        return value.length > 6;\n    }\n    static replaceFullWidthChars(str) {\n        if (str === null) {\n            str = '';\n        }\n        const fullWidth = '\\uff10\\uff11\\uff12\\uff13\\uff14\\uff15\\uff16\\uff17\\uff18\\uff19';\n        const halfWidth = '0123456789';\n        let value = '';\n        const chars = str.split('');\n        // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < chars.length; i++) {\n            let chr = chars[i];\n            const idx = fullWidth.indexOf(chr);\n            if (idx > -1) {\n                chr = halfWidth[idx];\n            }\n            value += chr;\n        }\n        return value;\n    }\n    static formatExpiry(expiry) {\n        const parts = expiry.match(/^\\D*(\\d{1,2})(\\D+)?(\\d{1,4})?/);\n        if (!parts) {\n            return '';\n        }\n        let mon = parts[1] || '';\n        let sep = parts[2] || '';\n        const year = parts[3] || '';\n        if (year.length > 0) {\n            sep = ' / ';\n        }\n        else if (sep === ' /') {\n            mon = mon.substring(0, 1);\n            sep = '';\n        }\n        else if (mon.length === 2 || sep.length > 0) {\n            sep = ' / ';\n        }\n        else if (mon.length === 1 && (mon !== '0' && mon !== '1')) {\n            mon = `0${mon}`;\n            sep = ' / ';\n        }\n        return `${mon}${sep}${year}`;\n    }\n    static restrictCvc(key, target) {\n        const digit = String.fromCharCode(key);\n        if (!/^\\d+$/.test(digit) || this.hasTextSelected(target)) {\n            return false;\n        }\n        const val = `${target.value}${digit}`;\n        return val.length <= 4;\n    }\n    static luhnCheck(num) {\n        const digits = num.split('').reverse();\n        let odd = true;\n        let sum = 0;\n        // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < digits.length; i++) {\n            let digit = parseInt(digits[i], 10);\n            // tslint:disable-next-line:no-conditional-assignment\n            if ((odd = !odd)) {\n                digit *= 2;\n            }\n            if (digit > 9) {\n                digit -= 9;\n            }\n            sum += digit;\n        }\n        return sum % 10 === 0;\n    }\n}\n\nclass CreditCardValidators {\n    static validateCCNumber(control) {\n        if (Validators.required(control) !== undefined && Validators.required(control) !== null) {\n            return { ccNumber: true };\n        }\n        const num = control.value.toString().replace(/\\s+|-/g, '');\n        if (!/^\\d+$/.test(num)) {\n            return { ccNumber: true };\n        }\n        const card = CreditCard.cardFromNumber(num);\n        if (!card) {\n            return { ccNumber: true };\n        }\n        if (card.length.includes(num.length) && (card.luhn === false || CreditCard.luhnCheck(num))) {\n            return null;\n        }\n        const upperlength = card.length[card.length.length - 1];\n        if (num.length > upperlength) {\n            const registeredNum = num.substring(0, upperlength);\n            if (CreditCard.luhnCheck(registeredNum)) {\n                return null;\n            }\n        }\n        return { ccNumber: true };\n    }\n    static validateExpDate(control) {\n        if (Validators.required(control) !== undefined && Validators.required(control) !== null) {\n            return { expDate: true };\n        }\n        if (typeof control.value !== 'undefined' && control.value.length >= 5) {\n            let [month, year] = control.value.split(/[\\s\\/]+/, 2);\n            if ((year != null ? year.length : void 0) === 2 && /^\\d+$/.test(year)) {\n                const prefix = new Date().getFullYear().toString().slice(0, 2);\n                year = prefix + year;\n            }\n            month = parseInt(month, 10).toString();\n            year = parseInt(year, 10).toString();\n            if (/^\\d+$/.test(month) && /^\\d+$/.test(year) && (month >= 1 && month <= 12)) {\n                const expiry = new Date(year, month);\n                const currentTime = new Date();\n                expiry.setMonth(expiry.getMonth() - 1);\n                expiry.setMonth(expiry.getMonth() + 1, 1);\n                if (expiry > currentTime) {\n                    return null;\n                }\n            }\n        }\n        return { expDate: true };\n    }\n}\n\nclass CreditCardFormatDirective {\n    constructor(el, control) {\n        this.el = el;\n        this.control = control;\n        this.cards = CreditCard.cards();\n        this.resolvedScheme$ = new BehaviorSubject('unknown');\n        this.target = this.el.nativeElement;\n    }\n    /**\n     * Updates the value to target element, or FormControl if exists.\n     * @param value New input value.\n     */\n    updateValue(value) {\n        if (this.control) {\n            this.control.control.setValue(value);\n        }\n        else {\n            this.target.value = value;\n        }\n    }\n    onKeypress(e) {\n        if (CreditCard.restrictNumeric(e)) {\n            if (CreditCard.isCardNumber(e.which, this.target)) {\n                this.formatCardNumber(e);\n            }\n        }\n        else {\n            e.preventDefault();\n        }\n    }\n    onKeydown(e) {\n        this.formatBackCardNumber(e);\n        this.reFormatCardNumber();\n    }\n    onKeyup() {\n        this.setCardType();\n    }\n    onPaste() {\n        this.reFormatCardNumber();\n    }\n    onChange() {\n        this.reFormatCardNumber();\n    }\n    onInput() {\n        this.reFormatCardNumber();\n        this.setCardType();\n    }\n    formatCardNumber(e) {\n        const digit = String.fromCharCode(e.which);\n        if (!/^\\d+$/.test(digit)) {\n            return;\n        }\n        const value = this.target.value;\n        const card = CreditCard.cardFromNumber(value + digit);\n        const length = (value.replace(/\\D/g, '') + digit).length;\n        const upperLength = card ? card.length[card.length.length - 1] : 19;\n        if (length >= upperLength) {\n            return;\n        }\n    }\n    formatBackCardNumber(e) {\n        const value = this.target.value;\n        const selStart = this.target.selectionStart;\n        if (e.which !== 8) {\n            return;\n        }\n        if (selStart != null\n            && selStart === this.target.selectionEnd\n            && selStart > 0\n            && selStart !== value.length\n            && value[selStart - 1] === ' ') {\n            e.preventDefault();\n            if (selStart <= 2) {\n                this.updateValue(value.slice(selStart));\n                this.target.selectionStart = 0;\n                this.target.selectionEnd = 0;\n            }\n            else {\n                this.updateValue(value.slice(0, selStart - 2) + value.slice(selStart));\n                this.target.selectionStart = selStart - 2;\n                this.target.selectionEnd = selStart - 2;\n            }\n        }\n    }\n    setCardType() {\n        const cardType = CreditCard.cardType(this.target.value) || 'unknown';\n        this.resolvedScheme$.next(cardType);\n        if (!this.target.classList.contains(cardType)) {\n            this.cards.forEach((card) => {\n                this.target.classList.remove(card.type);\n            });\n            this.target.classList.remove('unknown');\n            this.target.classList.add(cardType);\n            this.target.classList.toggle('identified', cardType !== 'unknown');\n        }\n    }\n    reFormatCardNumber() {\n        const value = CreditCard.formatCardNumber(CreditCard.replaceFullWidthChars(this.target.value));\n        const oldValue = this.target.value;\n        if (value !== oldValue) {\n            this.target.selectionStart = this.target.selectionEnd = CreditCard.safeVal(value, this.target, (safeVal => {\n                this.updateValue(safeVal);\n            }));\n        }\n    }\n}\nCreditCardFormatDirective.ɵfac = function CreditCardFormatDirective_Factory(t) { return new (t || CreditCardFormatDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgControl, 10)); };\nCreditCardFormatDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CreditCardFormatDirective, selectors: [[\"\", \"ccNumber\", \"\"]], hostBindings: function CreditCardFormatDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keypress\", function CreditCardFormatDirective_keypress_HostBindingHandler($event) { return ctx.onKeypress($event); })(\"keydown\", function CreditCardFormatDirective_keydown_HostBindingHandler($event) { return ctx.onKeydown($event); })(\"keyup\", function CreditCardFormatDirective_keyup_HostBindingHandler() { return ctx.onKeyup(); })(\"paste\", function CreditCardFormatDirective_paste_HostBindingHandler() { return ctx.onPaste(); })(\"change\", function CreditCardFormatDirective_change_HostBindingHandler() { return ctx.onChange(); })(\"input\", function CreditCardFormatDirective_input_HostBindingHandler() { return ctx.onInput(); });\n    } }, exportAs: [\"ccNumber\"] });\nCreditCardFormatDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] }\n];\nCreditCardFormatDirective.propDecorators = {\n    onKeypress: [{ type: HostListener, args: ['keypress', ['$event'],] }],\n    onKeydown: [{ type: HostListener, args: ['keydown', ['$event'],] }],\n    onKeyup: [{ type: HostListener, args: ['keyup',] }],\n    onPaste: [{ type: HostListener, args: ['paste',] }],\n    onChange: [{ type: HostListener, args: ['change',] }],\n    onInput: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CreditCardFormatDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ccNumber]',\n                exportAs: 'ccNumber'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }]; }, { onKeypress: [{\n            type: HostListener,\n            args: ['keypress', ['$event']]\n        }], onKeydown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }], onKeyup: [{\n            type: HostListener,\n            args: ['keyup']\n        }], onPaste: [{\n            type: HostListener,\n            args: ['paste']\n        }], onChange: [{\n            type: HostListener,\n            args: ['change']\n        }], onInput: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\nclass CvcFormatDirective {\n    constructor(el, control) {\n        this.el = el;\n        this.control = control;\n        this.target = this.el.nativeElement;\n    }\n    /**\n     * Updates the value to target element, or FormControl if exists.\n     * @param value New input value.\n     */\n    updateValue(value) {\n        if (this.control) {\n            this.control.control.setValue(value);\n        }\n        else {\n            this.target.value = value;\n        }\n    }\n    onKeypress(e) {\n        if (!CreditCard.restrictNumeric(e) && !CreditCard.restrictCvc(e.which, this.target)) {\n            e.preventDefault();\n        }\n    }\n    reformatCvc() {\n        const val = CreditCard.replaceFullWidthChars(this.target.value)\n            .replace(/\\D/g, '')\n            .slice(0, 4);\n        const oldVal = this.target.value;\n        if (val !== oldVal) {\n            this.target.selectionStart = this.target.selectionEnd = CreditCard.safeVal(val, this.target, (safeVal => {\n                this.updateValue(safeVal);\n            }));\n        }\n    }\n}\nCvcFormatDirective.ɵfac = function CvcFormatDirective_Factory(t) { return new (t || CvcFormatDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgControl, 10)); };\nCvcFormatDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CvcFormatDirective, selectors: [[\"\", \"ccCVC\", \"\"]], hostBindings: function CvcFormatDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keypress\", function CvcFormatDirective_keypress_HostBindingHandler($event) { return ctx.onKeypress($event); })(\"paste\", function CvcFormatDirective_paste_HostBindingHandler() { return ctx.reformatCvc(); })(\"change\", function CvcFormatDirective_change_HostBindingHandler() { return ctx.reformatCvc(); })(\"input\", function CvcFormatDirective_input_HostBindingHandler() { return ctx.reformatCvc(); });\n    } } });\nCvcFormatDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] }\n];\nCvcFormatDirective.propDecorators = {\n    onKeypress: [{ type: HostListener, args: ['keypress', ['$event'],] }],\n    reformatCvc: [{ type: HostListener, args: ['paste',] }, { type: HostListener, args: ['change',] }, { type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CvcFormatDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ccCVC]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }]; }, { onKeypress: [{\n            type: HostListener,\n            args: ['keypress', ['$event']]\n        }], reformatCvc: [{\n            type: HostListener,\n            args: ['paste']\n        }, {\n            type: HostListener,\n            args: ['change']\n        }, {\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\nclass ExpiryFormatDirective {\n    constructor(el, control) {\n        this.el = el;\n        this.control = control;\n        this.target = this.el.nativeElement;\n    }\n    /**\n     * Updates the value to target element, or FormControl if exists.\n     * @param value New input value.\n     */\n    updateValue(value) {\n        if (this.control) {\n            this.control.control.setValue(value);\n        }\n        else {\n            this.target.value = value;\n        }\n    }\n    onKeypress(e) {\n        if (CreditCard.restrictNumeric(e)) {\n            if (CreditCard.restrictExpiry(e.which, this.target)) {\n                this.formatExpiry(e);\n                this.formatForwardSlashAndSpace(e);\n                this.formatForwardExpiry(e);\n            }\n        }\n        else {\n            e.preventDefault();\n            return false;\n        }\n    }\n    onKeydown(e) {\n        if (CreditCard.restrictNumeric(e) && CreditCard.restrictExpiry(e.which, this.target)) {\n            this.formatBackExpiry(e);\n        }\n    }\n    onChange() {\n        this.reformatExpiry();\n    }\n    onInput() {\n        this.reformatExpiry();\n    }\n    formatExpiry(e) {\n        const digit = String.fromCharCode(e.which);\n        const val = `${this.target.value}${digit}`;\n        if (!/^\\d+$/.test(digit)) {\n            return;\n        }\n        if (/^\\d$/.test(val) && (val !== '0' && val !== '1')) {\n            e.preventDefault();\n            this.updateValue(`0${val} / `);\n        }\n        else if (/^\\d\\d$/.test(val)) {\n            e.preventDefault();\n            const m1 = parseInt(val[0], 10);\n            const m2 = parseInt(val[1], 10);\n            if (m2 > 2 && m1 !== 0) {\n                this.updateValue(`0${m1} / ${m2}`);\n            }\n            else {\n                this.updateValue(`${val} / `);\n            }\n        }\n    }\n    formatForwardSlashAndSpace(e) {\n        const which = String.fromCharCode(e.which);\n        const val = this.target.value;\n        if (!(which === '/' || which === ' ')) {\n            return false;\n        }\n        if (/^\\d$/.test(val) && val !== '0') {\n            this.updateValue(`0${val} / `);\n        }\n    }\n    formatForwardExpiry(e) {\n        const digit = String.fromCharCode(e.which);\n        const val = this.target.value;\n        if (!/^\\d+$/.test(digit) && /^\\d\\d$/.test(val)) {\n            this.updateValue(this.target.value = `${val} / `);\n        }\n    }\n    formatBackExpiry(e) {\n        const val = this.target.valueOf;\n        if (e.which !== 8) {\n            return;\n        }\n        if ((this.target.selectionStart != null) && this.target.selectionStart !== val.length) {\n            return;\n        }\n        if (/\\d\\s\\/\\s$/.test(val)) {\n            e.preventDefault();\n            this.updateValue(val.replace(/\\d\\s\\/\\s$/, ''));\n        }\n    }\n    reformatExpiry() {\n        const val = CreditCard.formatExpiry(CreditCard.replaceFullWidthChars(this.target.value));\n        const oldVal = this.target.value;\n        if (val !== oldVal) {\n            this.target.selectionStart = this.target.selectionEnd = CreditCard.safeVal(val, this.target, (safeVal => {\n                this.updateValue(safeVal);\n            }));\n        }\n    }\n}\nExpiryFormatDirective.ɵfac = function ExpiryFormatDirective_Factory(t) { return new (t || ExpiryFormatDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgControl, 10)); };\nExpiryFormatDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ExpiryFormatDirective, selectors: [[\"\", \"ccExp\", \"\"]], hostBindings: function ExpiryFormatDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keypress\", function ExpiryFormatDirective_keypress_HostBindingHandler($event) { return ctx.onKeypress($event); })(\"keydown\", function ExpiryFormatDirective_keydown_HostBindingHandler($event) { return ctx.onKeydown($event); })(\"change\", function ExpiryFormatDirective_change_HostBindingHandler() { return ctx.onChange(); })(\"input\", function ExpiryFormatDirective_input_HostBindingHandler() { return ctx.onInput(); });\n    } } });\nExpiryFormatDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] }\n];\nExpiryFormatDirective.propDecorators = {\n    onKeypress: [{ type: HostListener, args: ['keypress', ['$event'],] }],\n    onKeydown: [{ type: HostListener, args: ['keydown', ['$event'],] }],\n    onChange: [{ type: HostListener, args: ['change',] }],\n    onInput: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ExpiryFormatDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ccExp]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }]; }, { onKeypress: [{\n            type: HostListener,\n            args: ['keypress', ['$event']]\n        }], onKeydown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }], onChange: [{\n            type: HostListener,\n            args: ['change']\n        }], onInput: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\nconst CREDIT_CARD_LIBRARY_DIRECTIVES = [\n    CreditCardFormatDirective,\n    ExpiryFormatDirective,\n    CvcFormatDirective,\n];\nclass CreditCardDirectivesModule {\n}\nCreditCardDirectivesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CreditCardDirectivesModule });\nCreditCardDirectivesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CreditCardDirectivesModule_Factory(t) { return new (t || CreditCardDirectivesModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CreditCardDirectivesModule, { declarations: [CreditCardFormatDirective, ExpiryFormatDirective, CvcFormatDirective], exports: [CreditCardFormatDirective, ExpiryFormatDirective, CvcFormatDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CreditCardDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CREDIT_CARD_LIBRARY_DIRECTIVES],\n                exports: [CREDIT_CARD_LIBRARY_DIRECTIVES]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of angular-cc-library\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CreditCard, CreditCardDirectivesModule, CreditCardFormatDirective, CreditCardValidators, CvcFormatDirective, ExpiryFormatDirective };\n\n//# sourceMappingURL=angular-cc-library.js.map","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CartDetailsComponent } from './cart-details/cart-details.component';\r\nimport { CartAddressComponent } from './cart-address/cart-address.component';\r\nimport { CartPaymentComponent } from './cart-payment/cart-payment.component';\r\nimport { RouteGuard } from 'src/app/services/route-guard.guard';\r\nimport { CartResolverService } from './cart-resolver.service';\r\nimport { DeactiveGuard } from './deactive-guard.guard';\r\n\r\nconst routes: Routes = [\r\n  {path: '' , component: CartDetailsComponent, resolve: { cartData : CartResolverService} },\r\n  {path: 'deliveryAddress' , component: CartAddressComponent, canActivate: [RouteGuard], canDeactivate: [DeactiveGuard] },\r\n  {path: 'payment/:id1/:id2' , component: CartPaymentComponent, canActivate: [RouteGuard], canDeactivate: [DeactiveGuard] }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class CartRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { CartDetails } from 'src/app/dataModels/cart-details';\r\n\r\nexport interface OrderResponse {\r\n  code: number;\r\n  details: {};\r\n  message: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartResolverService implements Resolve<OrderResponse>{\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<any> | Promise<any> | OrderResponse {\r\n    if (sessionStorage.getItem('cartId')) {\r\n      return this.apiService.getCartById(window.atob(sessionStorage.getItem('cartId'))).pipe(map((data: CartDetails)  => {\r\n        if (+data[`code`] === 200) {\r\n          return JSON.parse(data[`details`].cart);\r\n        } else {\r\n          return [];\r\n        }\r\n      }));\r\n    }\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { CartDetails } from 'src/app/dataModels/cart-details';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { CanComponentDeactivate } from '../deactive-guard.guard';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n@Component({\r\n  selector: 'app-cart-address',\r\n  templateUrl: './cart-address.component.html',\r\n  styleUrls: ['./cart-address.component.css']\r\n})\r\nexport class CartAddressComponent implements OnInit, CanComponentDeactivate, OnDestroy {\r\n  products: CartDetails[] = []; // assign product to be of CartDetails array type\r\n  grandTotal: number = 0; // used to store totalPrice\r\n  shippingCharges: number = 0; // default shipping charges value\r\n  finalPrice: number = 0; // default final Price\r\n  toggleAddress: string = ''; // change address according to radio buttons\r\n  selectedAddress: any; // assign selectedAddress Assign value\r\n  subscribe: Subscription[] = []; // used to store subscription\r\n  addressForm: FormGroup;  // address form of type formGroup\r\n  addressList: any; // used to store addressList\r\n  userId: any; // used to store userId\r\n  emptyAddress: boolean = false; // emptyAddress\r\n  stateInfo: any[] = [];  // used to store state data\r\n  countryInfo: any[] = []; // used to store country data\r\n  cityInfo: any[] = []; // used to store city data\r\n  buyNowCartId: string = ''; // assign value of buyNowCartId\r\n  toggleCanDeactivate: boolean = true; // change CanDeactivate resolve according to condition\r\n  gstPrice: number;\r\n  applyDealerDiscount: boolean = false; // used to apply for dealer discount\r\n  dealerDiscountAmount: number = 0; // initial dealer discount\r\n  dealerDiscountPercentage: number ;\r\n\r\n  constructor(private apiService: ApiService, private fb: FormBuilder,\r\n              private toaster: ToastrService, private route: Router, private spinner: NgxSpinnerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    if (sessionStorage.getItem('id')) { // checking if userId is present or not\r\n      this.userId = window.atob(sessionStorage.getItem('id')); // assigning userId from sessionStorage Id\r\n      this.getAddressList(window.atob(sessionStorage.getItem('id')));\r\n    }\r\n\r\n    if (\r\n      window.atob(sessionStorage.getItem('userType')) ===\r\n        'Dealer' &&\r\n      window.atob(sessionStorage.getItem('userStatus')) === 'D'\r\n    ) {\r\n      this.applyDealerDiscount = true;\r\n      if (window.atob(sessionStorage.getItem('userDiscount')) === null) {\r\n        this.apiService.dealerDiscount().subscribe(res => {\r\n          if (res[`return`] === true) {\r\n            this.dealerDiscountPercentage = res[`dealer_discount`];\r\n            this.dealerDiscountPercentage = this.dealerDiscountPercentage * 0.01;\r\n          }\r\n        })\r\n      }else {\r\n        let userDiscount = window.atob(sessionStorage.getItem('userDiscount'));\r\n        this.dealerDiscountPercentage = +userDiscount * 0.01;\r\n      }\r\n    }\r\n\r\n    if (sessionStorage.getItem('buyNow')) { // checking if buyNow value is present or not\r\n      this.getCartItems();\r\n      const cartData = {\r\n        // user_id: window.atob(localStorage.getItem('id')),\r\n        user_id: window.atob(sessionStorage.getItem('id')),\r\n        cart: JSON.stringify(this.products)\r\n      };\r\n      // calling addToCart api to add data in cart\r\n      this.apiService.addToCart(cartData).subscribe(res => {\r\n        if (res[`code`] === 200) {\r\n          this.buyNowCartId = res[`cart_details`].id; // assigning buyNowCartId with response cart value id\r\n        }\r\n      });\r\n    } else {\r\n      // calling getCartById api to get CartDetails by cartId\r\n      // this.subscribe.push(this.apiService.getCartById(window.atob(localStorage.getItem('cartId'))).subscribe(res => {\r\n      this.subscribe.push(this.apiService.getCartById(window.atob(sessionStorage.getItem('cartId'))).subscribe(res => {\r\n        if (res[`code`] === 200) {\r\n          this.products = (JSON.parse(res[`details`].cart) as CartDetails[]); // assigning response to products\r\n          this.findGrandTotal();\r\n        }\r\n      }, err => {\r\n        this.toaster.error(err?.error?.message || err?.message);\r\n      }));\r\n    }\r\n\r\n    this.getCountries();\r\n    this.createAddressForm();\r\n  }\r\n\r\n  // function to getSelectedAddress according to addressId\r\n  getSelectedAddress(address): void {\r\n    if (address !== 'newAddress') { // checking if address is newAddress or not\r\n      this.selectedAddress = address;\r\n      this.toggleAddress = '';\r\n      this.emptyAddress = false;\r\n    } else {\r\n      this.toggleAddress = 'newAddress';\r\n      this.emptyAddress = true;\r\n      this.getUserDetails(this.userId);\r\n    }\r\n  }\r\n\r\n  // function to getCartItems from sessionStorage\r\n  getCartItems(): void {\r\n    this.products = (JSON.parse(window.atob(sessionStorage.getItem('buyNow'))) as CartDetails[]);\r\n    this.findGrandTotal();\r\n  }\r\n\r\n  // function to findGrandTotal\r\n  findGrandTotal(): void {\r\n    let productPrice = 0; // default product price\r\n\r\n    // calculating eachProduct price using forEach loop for products array\r\n    this.products.forEach((ele) => {\r\n      if (ele.productQuantity) {  // checking if productQuantity is greater than 0\r\n        // multiplying eachProduct price with eachProduct quantity and adding the result with productPrice\r\n        productPrice = ((ele.discountPrice > 0 ? ele.discountPrice : ele.price) * ele.productQuantity) + productPrice;\r\n      }\r\n    });\r\n    this.grandTotal = productPrice;\r\n    this.shippingCharges = Math.round(+(0.05 * this.grandTotal).toFixed(3)); // 5% of totalCharges\r\n    this.finalPrice = Math.round(this.grandTotal + this.shippingCharges); // adding price with shippingCharges and assigning to total\r\n    this.gstPrice = Math.round(+(0.10 * this.finalPrice).toFixed(3));\r\n    this.dealerDiscountAmount = Math.round(+(this.dealerDiscountPercentage * (this.finalPrice + this.gstPrice)).toFixed(3));\r\n    const additionalPaymentDetails = window.btoa(JSON.stringify({\r\n      subtotal_amount: this.grandTotal, \r\n      shipping_amount: this.shippingCharges, \r\n      gst_amount: this.gstPrice\r\n    }))\r\n    sessionStorage.setItem('additionalPaymentDetails', additionalPaymentDetails);\r\n  }\r\n\r\n  // function to getCountries from getCountryData function\r\n  getCountries(): void {\r\n    this.subscribe.push(this.apiService.getCountryData().subscribe(res => {\r\n      if (res) {\r\n        this.countryInfo = res[`countries`];\r\n        this.onChangeCountry('Australia');\r\n      }\r\n    }));\r\n  }\r\n\r\n  // function to getAddressList according to userId\r\n  getAddressList(userId): void {\r\n    const userData = {\r\n      user_id: +userId\r\n    };\r\n    this.subscribe.push(this.apiService.getAllAddress(userData).subscribe(res => {\r\n      if (res[`code`] === 200) {\r\n        this.addressList = res[`address`]; // assigning address response to addressList\r\n        this.spinner.hide();\r\n        if (this.addressList.length > 0) {\r\n          this.selectedAddress = res[`address`][0];\r\n          this.emptyAddress = false;\r\n        } else {\r\n          this.emptyAddress = true;\r\n          this.getSelectedAddress('newAddress');\r\n        }\r\n      }\r\n    }, err => {\r\n      this.toaster.error('No address found');\r\n      this.spinner.hide();\r\n    }));\r\n  }\r\n\r\n  getUserDetails(userId): void {\r\n    this.apiService.getUserDetails(userId).subscribe(res => {\r\n      if (res[`code`]) {\r\n        // console.log('userDetails', res[`details`])\r\n        this.patchAddressForm(res[`details`].name);\r\n      }\r\n    });\r\n  }\r\n\r\n  patchAddressForm(userName): void {\r\n    const name = userName.split(\" \");\r\n    if (name.length === 3) {\r\n      this.addressForm.patchValue({\r\n        first_name: name[0],\r\n        middle_name: name[1],\r\n        last_name: name[2]\r\n      });\r\n    } else if (name.length > 1 && name.length <= 2) {\r\n      this.addressForm.patchValue({\r\n        first_name: name[0],\r\n        last_name: name[1]\r\n      });\r\n    } else if (name.length === 1) {\r\n      this.addressForm.patchValue({\r\n        first_name: name[0]\r\n      });\r\n    }\r\n  }\r\n\r\n  // function to get countryName and statesList according to countryValue\r\n  onChangeCountry(countryValue): void {\r\n    this.cityInfo = [];\r\n    const countryIndex = this.countryInfo.findIndex(res => res.name === countryValue);\r\n    this.stateInfo = this.countryInfo[countryIndex].states;\r\n  }\r\n\r\n  // function to get stateName and cityList according to stateValue\r\n  onChangeState(stateValue): void {\r\n    const stateIndex = this.stateInfo.findIndex(res => res.name === stateValue);\r\n    this.cityInfo = this.stateInfo[stateIndex].cities;\r\n  }\r\n\r\n\r\n  // function to create addressForm\r\n  createAddressForm(): void {\r\n    this.addressForm = this.fb.group({\r\n      title: new FormControl('', Validators.required),\r\n      first_name: new FormControl('', Validators.required),\r\n      middle_name: new FormControl(''),\r\n      last_name: new FormControl('', Validators.required),\r\n      phone: new FormControl('', [Validators.pattern('[0-9 ]{10,12}'), Validators.required]),\r\n      house_no: new FormControl('', Validators.required),\r\n      city: new FormControl('', Validators.required),\r\n      state: new FormControl('', Validators.required),\r\n      pincode: new FormControl('', [Validators.pattern('[0-9 ]{4}'), Validators.required]),\r\n      country: new FormControl('Australia', Validators.required)\r\n    });\r\n  }\r\n\r\n  // function to get controls of address form\r\n  get formControl(): any {\r\n    return this.addressForm.controls;\r\n  }\r\n\r\n  onInputChange(validNumber, type): void{\r\n    let maxLength = 0;\r\n    if (type === 'phone'){\r\n      maxLength = 12;\r\n      if (validNumber.length >= maxLength){\r\n        this.addressForm.patchValue({\r\n          phone: validNumber.substring(0, 12)\r\n        });\r\n      }\r\n    }else if (type === 'zip'){\r\n      maxLength = 4;\r\n      if (validNumber.length >= maxLength){\r\n        this.addressForm.patchValue({\r\n          pincode: validNumber.substring(0, 4)\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  // function to validate all fields according to formType\r\n  validateAllFields(formGroup: FormGroup): void {\r\n    Object.keys(this.formControl).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        control.markAsTouched({ onlySelf: true });\r\n      } else if (control instanceof FormGroup) {\r\n        this.validateAllFields(control);\r\n      }\r\n    });\r\n  }\r\n\r\n  // function to save address\r\n  saveAddress(form): void {\r\n    if (form.invalid) {\r\n      this.validateAllFields(form); // if form in invalid then call validateAllfields function\r\n    } else {\r\n      form.value.user_id = +this.userId;\r\n      this.subscribe.push(this.apiService.addAddress(form.value).subscribe(res => {\r\n        if (res[`code`] === 200) {\r\n          this.toaster.success(res[`message`]);\r\n          this.getAddressList(this.userId);\r\n          this.toggleAddress = '';\r\n          form.reset();\r\n        }\r\n      }, err => {\r\n        this.toaster.error(err?.error?.message || err?.message);\r\n      }));\r\n    }\r\n  }\r\n\r\n  updateCart(): void {\r\n    const cartLocalData = JSON.parse(window.atob(sessionStorage.getItem('buyNow'))) as CartDetails[]; // assigning buyNow value to cartLocalData\r\n    let cart;\r\n    console.log(cartLocalData, 'cartLocal')\r\n    const accessoriesToAdd = [];  // accessoriesToAdd[] to add accessory\r\n    const sparesToAdd = []; // sparesToAdd[] to add spare\r\n    if (cartLocalData !== null) { // checking if cartLocalData is not null\r\n      cartLocalData.forEach(cartData => {\r\n        if (cartData.type === 'product') {\r\n          // assigning value in cart\r\n          cart = new CartDetails(\r\n            cartData.productId,\r\n            cartData.code,\r\n            cartData.description,\r\n            cartData.price,\r\n            cartData.discountPrice,\r\n            cartData.type,\r\n            cartData.pole,\r\n            cartData.flow,\r\n            cartData.head,\r\n            cartData.speed,\r\n            cartData.power,\r\n            cartData.engineSpeed,\r\n            cartData.enginekW,\r\n            cartData.driveType,\r\n            cartData.productQuantity\r\n          );\r\n        } else if (cartData.type === 'accessory') {\r\n          accessoriesToAdd.push(cartData); // pushing cartData of type accessory in accessoriesToAdd array\r\n        } else if (cartData.type === 'spare') {\r\n          sparesToAdd.push(cartData); // pushing cartData of type spare in sparesToAdd array\r\n        }\r\n      });\r\n    }\r\n    // this.subscribe.push(this.apiService.getCartById(window.atob(localStorage.getItem('cartId'))).subscribe(res => {\r\n    this.subscribe.push(this.apiService.getCartById(window.atob(sessionStorage.getItem('cartId'))).subscribe(res => {\r\n      if (res[`code`] === 200) {\r\n        let cartDetails = [];\r\n        cartDetails = (JSON.parse(res[`details`].cart) as CartDetails[]);  // assigning response value to cartDetails\r\n        console.log(cartDetails, 'cartDetails');\r\n        if (cartDetails.length <= 0) {  // checking cartDetails length is smaller or equal to 0\r\n          // (...)spread operator takes in an iterable (e.g an array) and expands it into individual elements.\r\n          cartDetails.push(cart); // pushing cart value in cartDetails\r\n          cartDetails.push(...accessoriesToAdd); // pushing each accessoriesToAdd value in cartDetails\r\n          cartDetails.push(...sparesToAdd); // pushing each sparesToAdd value in cartDetails\r\n        } else {\r\n          const cartAccessoryDataSet = new Array(); // creating new accessoryArray\r\n          const cartSpareDataSet = new Array(); // creating new spareArray\r\n          let cartProductDataSet; // variable to set productData\r\n          let spareNotExist = true; // check if spare type is present in cartLocalData\r\n          let accessoryNotExist = true; // check if accessory type is present in cartLocalData\r\n\r\n          for (let i = 0; i < cartDetails.length; i++) {\r\n            if (cartDetails[i].type === 'product') { // checking type of product\r\n              // checking cartDetails(got by getCartDetails api) with buyNow cartDetails(from sessionStorage)\r\n              if ((cartDetails[i].driveType === cart.driveType) && (cartDetails[i].code === cart.code) &&\r\n                (cartDetails[i].pole === cart.pole)) {\r\n                cartDetails[i].productQuantity++;\r\n              } else {\r\n                cartProductDataSet = cart;\r\n              }\r\n            } else if (cartDetails[i].type === 'accessory') {\r\n              accessoryNotExist = false;\r\n              for (let j = 0; j < accessoriesToAdd.length; j++) {\r\n                if (accessoriesToAdd[j].description === cartDetails[i].description\r\n                  && accessoriesToAdd[j].pole === cartDetails[i].pole\r\n                  && accessoriesToAdd[j].driveType === cartDetails[i].driveType) {\r\n                  cartDetails[i].productQuantity++;\r\n                } else {\r\n                  /* some() is used to checks whether at least one of the elements of the array satisfies\r\n                      the condition then returns true (and does not check the remaining values) otherwise return false*/\r\n                  if (!cartDetails.some(res => (res.description === accessoriesToAdd[j].description)\r\n                    && (res.pole === accessoriesToAdd[j].pole) && (res.driveType === accessoriesToAdd[j].driveType)) &&\r\n                    (!cartAccessoryDataSet.some(res => (res.description === accessoriesToAdd[j].description)\r\n                      && (res.pole === accessoriesToAdd[j].pole) && (res.driveType === accessoriesToAdd[j].driveType)))) {\r\n                    cartAccessoryDataSet.push(accessoriesToAdd[j]);\r\n                  }\r\n                }\r\n              }\r\n            } else if (cartDetails[i].type === 'spare') {\r\n              spareNotExist = false;\r\n              for (let j = 0; j < sparesToAdd.length; j++) {\r\n                if (sparesToAdd[j].description === cartDetails[i].description\r\n                  && sparesToAdd[j].pole === cartDetails[i].pole\r\n                  && sparesToAdd[j].driveType === cartDetails[i].driveType) {\r\n                  cartDetails[i].productQuantity++;\r\n                } else {\r\n                  /* some() is used to checks whether at least one of the elements of the array satisfies\r\n                      the condition then returns true (and does not check the remaining values) otherwise return false*/\r\n                  if ((!cartDetails.some(res => (res.description === sparesToAdd[j].description)\r\n                    && (res.pole === sparesToAdd[j].pole) && (res.driveType === sparesToAdd[j].driveType))) &&\r\n                    (!cartSpareDataSet.some(res => (res.description === sparesToAdd[j].description) &&\r\n                      (res.pole === sparesToAdd[j].pole) && (res.driveType === sparesToAdd[j].driveType)))) {\r\n                    cartSpareDataSet.push(sparesToAdd[j]);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          // checking to push if cartAccessoryDataSet length is greater than 0\r\n          if (cartAccessoryDataSet.length > 0) {\r\n            cartDetails.push(...cartAccessoryDataSet);\r\n          }\r\n\r\n          // checking to push if cartSpareDataSet length is greater than 0\r\n          if (cartSpareDataSet.length > 0) {\r\n            cartDetails.push(...cartSpareDataSet);\r\n          }\r\n\r\n          // checking to push if cartProductDataSet is not undefined\r\n          if (cartProductDataSet.length > 0) {\r\n            cartDetails.push(cartProductDataSet);\r\n            console.log(cartDetails, 'push')\r\n          }\r\n\r\n          // checking to push if accessory exist\r\n          if (accessoryNotExist) {\r\n            cartDetails.push(...accessoriesToAdd);\r\n          }\r\n\r\n          // checking to push if spare exist\r\n          if (spareNotExist) {\r\n            cartDetails.push(...sparesToAdd);\r\n          }\r\n        }\r\n\r\n        const updateCart = {\r\n          // id: window.atob(localStorage.getItem('cartId')),\r\n          // user_id: window.atob(localStorage.getItem('id')),\r\n          id: window.atob(sessionStorage.getItem('cartId')),\r\n          user_id: window.atob(sessionStorage.getItem('id')),\r\n          cart: JSON.stringify(cartDetails)\r\n        };\r\n        // calling updateCart api\r\n        return this.subscribe.push(this.apiService.updateCart(updateCart).subscribe(response => {\r\n          if (response[`code`] === 200) {\r\n            this.buyNowCartId = updateCart.id;\r\n            sessionStorage.removeItem('buyNow');\r\n            this.apiService.totalItemsInCart();\r\n          }\r\n        }));\r\n      }\r\n    }));\r\n  }\r\n\r\n  // checkOut function to check whether any address is selected or not\r\n  checkOut(): void {\r\n    if (this.toggleAddress === '') {\r\n      this.toggleCanDeactivate = false;\r\n      if (this.buyNowCartId !== '') {\r\n        this.route.navigate(['/cart/payment', this.selectedAddress?.id, this.buyNowCartId]);\r\n      } else {\r\n        this.route.navigate(['/cart/payment', this.selectedAddress?.id, window.atob(sessionStorage.getItem('cartId'))]);\r\n      }\r\n    } else {\r\n      this.toaster.success('Please add and select one address to continue');\r\n    }\r\n  }\r\n\r\n  // canDeactivate router function to  check is navigation allowed or not\r\n  canDeactivate(): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.toggleCanDeactivate) { // checking toggleCanDeactivate value\r\n      // if (localStorage.getItem('cartId')) { // checking cartId is present or not\r\n      if (sessionStorage.getItem('cartId')) { // checking cartId is present or not\r\n        if (sessionStorage.getItem('buyNow')) { // checking buyNow is present or not\r\n          // tslint:disable-next-line: max-line-length\r\n          const cartLocalData = JSON.parse(window.atob(sessionStorage.getItem('buyNow'))) as CartDetails[]; // assigning buyNow value to cartLocalData\r\n          const accessoriesToAdd = [];  // accessoriesToAdd[] to add accessory\r\n          const sparesToAdd = []; // sparesToAdd[] to add spare;\r\n          let cart;\r\n          if (cartLocalData !== null) { // checking if cartLocalData is not null\r\n            cartLocalData.forEach(cartData => {\r\n              if (cartData.type === 'product') {\r\n                // assigning value in cart\r\n                cart = new CartDetails(\r\n                  cartData.productId,\r\n                  cartData.code,\r\n                  cartData.description,\r\n                  cartData.price,\r\n                  cartData.discountPrice,\r\n                  cartData.type,\r\n                  cartData.pole,\r\n                  cartData.flow,\r\n                  cartData.head,\r\n                  cartData.speed,\r\n                  cartData.power,\r\n                  cartData.engineSpeed,\r\n                  cartData.enginekW,\r\n                  cartData.driveType,\r\n                  cartData.productQuantity\r\n                );\r\n              } else if (cartData.type === 'accessory') {\r\n                accessoriesToAdd.push(cartData); // pushing cartData of type accessory in accessoriesToAdd array\r\n              } else if (cartData.type === 'spare') {\r\n                sparesToAdd.push(cartData); // pushing cartData of type spare in sparesToAdd array\r\n              }\r\n            });\r\n          }\r\n          // creating Promise to get return value\r\n          return new Promise((resolve) => {\r\n            // this.subscribe.push(this.apiService.getCartById(window.atob(localStorage.getItem('cartId'))).subscribe(res => {\r\n            this.subscribe.push(this.apiService.getCartById(window.atob(sessionStorage.getItem('cartId'))).subscribe(res => {\r\n              if (res[`code`] === 200) {\r\n                let cartDetails = [];\r\n                cartDetails = (JSON.parse(res[`details`].cart) as CartDetails[]);  // assigning response value to cartDetails\r\n                console.log('cartDetails', cartDetails);\r\n                if (cartDetails.length <= 0) {  // checking cartDetails length is smaller or equal to 0\r\n                  // (...)spread operator takes in an iterable (e.g an array) and expands it into individual elements.\r\n                  cartDetails.push({...cart}); // pushing cart value in cartDetails\r\n                  cartDetails.push(...accessoriesToAdd); // pushing each accessoriesToAdd value in cartDetails\r\n                  cartDetails.push(...sparesToAdd); // pushing each sparesToAdd value in cartDetails\r\n                }\r\n                else {\r\n                  const cartAccessoryDataSet = new Array(); // creating new accessoryArray\r\n                  const cartSpareDataSet = new Array(); // creating new spareArray\r\n                  let cartProductDataSet = {}; // variable to set productData\r\n                  let spareNotExist = true; // check if spare type is present in cartLocalData\r\n                  let accessoryNotExist = true; // check if accessory type is present in cartLocalData\r\n                  let cartNotExist = true;\r\n\r\n                  for (let i = 0; i < cartDetails.length; i++) {\r\n                    if (cartDetails[i].type === 'product') { // checking type of product\r\n                      // checking cartDetails(got by getCartDetails api) with buyNow cartDetails(from sessionStorage)\r\n                      cartNotExist = false;\r\n                      if (((cartDetails[i].driveType === '' || cartDetails[i].driveType)\r\n                        === (cart.driveType === '' || cart.driveType))\r\n                        && (cartDetails[i].code === cart.code) &&\r\n                        (cartDetails[i].pole === cart.pole)) {\r\n                        cartDetails[i].productQuantity++;\r\n                      } else {\r\n                        cartProductDataSet = cart;\r\n                      }\r\n                    } else if (cartDetails[i].type === 'accessory') {\r\n                      accessoryNotExist = false;\r\n                      for (let j = 0; j < accessoriesToAdd.length; j++) {\r\n                        if (accessoriesToAdd[j].description === cartDetails[i].description\r\n                          && accessoriesToAdd[j].pole === cartDetails[i].pole\r\n                          && accessoriesToAdd[j].driveType === cartDetails[i].driveType) {\r\n                          cartDetails[i].productQuantity++;\r\n                        } else {\r\n                          /* some() is used to checks whether at least one of the elements of the array satisfies\r\n                              the condition then returns true (and does not check the remaining values) otherwise return false*/\r\n                          if (!cartDetails.some(res => (res.description === accessoriesToAdd[j].description)\r\n                            && (res.pole === accessoriesToAdd[j].pole) && (res.driveType === accessoriesToAdd[j].driveType)) &&\r\n                            (!cartAccessoryDataSet.some(res => (res.description === accessoriesToAdd[j].description)\r\n                              && (res.pole === accessoriesToAdd[j].pole) && (res.driveType === accessoriesToAdd[j].driveType)))) {\r\n                            cartAccessoryDataSet.push(accessoriesToAdd[j]);\r\n                          }\r\n                        }\r\n                      }\r\n                    } else if (cartDetails[i].type === 'spare') {\r\n                      spareNotExist = false;\r\n                      for (let j = 0; j < sparesToAdd.length; j++) {\r\n                        if (sparesToAdd[j].description === cartDetails[i].description\r\n                          && sparesToAdd[j].pole === cartDetails[i].pole\r\n                          && sparesToAdd[j].driveType === cartDetails[i].driveType) {\r\n                          cartDetails[i].productQuantity++;\r\n                        } else {\r\n                          /* some() is used to checks whether at least one of the elements of the array satisfies\r\n                              the condition then returns true (and does not check the remaining values) otherwise return false*/\r\n                          if ((!cartDetails.some(res => (res.description === sparesToAdd[j].description)\r\n                            && (res.pole === sparesToAdd[j].pole) && (res.driveType === sparesToAdd[j].driveType))) &&\r\n                            (!cartSpareDataSet.some(res => (res.description === sparesToAdd[j].description) &&\r\n                              (res.pole === sparesToAdd[j].pole) && (res.driveType === sparesToAdd[j].driveType)))) {\r\n                            cartSpareDataSet.push(sparesToAdd[j]);\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n\r\n                  // checking to push if cartAccessoryDataSet length is greater than 0\r\n                  if (cartAccessoryDataSet.length > 0) {\r\n                    cartDetails.push(...cartAccessoryDataSet);\r\n                  }\r\n\r\n                  // checking to push if cartSpareDataSet length is greater than 0\r\n                  if (cartSpareDataSet.length > 0) {\r\n                    cartDetails.push(...cartSpareDataSet);\r\n                  }\r\n\r\n                  // checking to push if cartProductDataSet is not undefined\r\n                  if (Object.keys(cartProductDataSet).length > 0) {\r\n                    cartDetails.push({...cartProductDataSet});\r\n                  }\r\n\r\n                  // checking to push if accessory exist\r\n                  if (accessoryNotExist) {\r\n                    cartDetails.push(...accessoriesToAdd);\r\n                  }\r\n\r\n                  // checking to push if spare exist\r\n                  if (spareNotExist) {\r\n                    cartDetails.push(...sparesToAdd);\r\n                  }\r\n\r\n                  if (cartNotExist) {\r\n                    cartDetails.push({...cart});\r\n                  }\r\n                }\r\n\r\n                const updateCart = {\r\n                  // id: window.atob(localStorage.getItem('cartId')),\r\n                  // user_id: window.atob(localStorage.getItem('id')),\r\n                  id: window.atob(sessionStorage.getItem('cartId')),\r\n                  user_id: window.atob(sessionStorage.getItem('id')),\r\n                  cart: JSON.stringify(cartDetails)\r\n                };\r\n                // calling updateCart api\r\n                console.log(cartDetails, 'ooo');\r\n                return this.subscribe.push(this.apiService.updateCart(updateCart).subscribe(response => {\r\n                  if (response[`code`] === 200) {\r\n                    sessionStorage.removeItem('buyNow');\r\n                    this.apiService.totalItemsInCart();\r\n                    return resolve(true);\r\n                  }\r\n                }));\r\n              }\r\n            }));\r\n\r\n          });\r\n        }\r\n        else {\r\n          return true;\r\n        }\r\n      }\r\n      else {\r\n        // localStorage.setItem('cartId', window.btoa(this.buyNowCartId)); // setting buyNowCartId as cartId in localStorage\r\n        sessionStorage.setItem('cartId', window.btoa(this.buyNowCartId)); // setting buyNowCartId as cartId in sessionStorage\r\n        this.apiService.totalItemsInCart(); // calling totalItemsInCart function to update cartQuantity'\r\n        sessionStorage.removeItem('buyNow');\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // used to unsubscribe the subscription\r\n  ngOnDestroy(): void {\r\n    // Called once, before the instance is destroyed.\r\n    // Add 'implements OnDestroy' to the class.\r\n    this.subscribe.forEach(s => {\r\n      if (s) {\r\n        s.unsubscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<ngx-spinner\r\n  bdColor=\"rgb(0,0,0)\"\r\n  size=\"medium\"\r\n  color=\"#2e94ef\"\r\n  type=\"ball-newton-cradle\"\r\n  [fullScreen]=\"true\"\r\n  ><p style=\"color: white\">Loading...</p></ngx-spinner\r\n>\r\n\r\n<div class=\"main-container cartpage addresspage\">\r\n  <div class=\"breadcrum\">\r\n    <div class=\"container\">\r\n      <p>\r\n        <a href=\"javascript:void(0)\" [routerLink]=\"['/home']\">Home</a> /\r\n        <a href=\"javascript:void(0)\" [routerLink]=\"['/cart']\">Cart</a>\r\n        <span>/</span> Address\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"cart-scale\">\r\n    <div class=\"container\">\r\n      <div class=\"cart-scale-inner\">\r\n        <div class=\"scale-no active-scale\">\r\n          <a style=\"pointer-events: none\">1</a><small>Cart</small>\r\n        </div>\r\n        <div class=\"scale-no\">\r\n          <a style=\"pointer-events: none\">2</a><small>Address</small>\r\n        </div>\r\n        <div class=\"scale-no\">\r\n          <a style=\"pointer-events: none\">3</a><small>Payment</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"cart-section\">\r\n    <div class=\"container\">\r\n      <div class=\"cart-inner\">\r\n        <div class=\"cart\">\r\n          <div class=\"address-row same-add-row\">\r\n            <h3>Use saved addresses</h3>\r\n            <div class=\"same-address\">\r\n              <div\r\n                class=\"address-box\"\r\n                *ngFor=\"\r\n                  let eachAddress of addressList;\r\n                  let addressCount = index\r\n                \"\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"address\"\r\n                  id=\"{{ 'address-' + addressCount }}\"\r\n                  (change)=\"getSelectedAddress(eachAddress)\"\r\n                  [checked]=\"addressCount === 0\"\r\n                />\r\n                <label for=\"{{ 'address-' + addressCount }}\"\r\n                  >{{ eachAddress?.house_no }} {{ eachAddress?.city }}\r\n                  {{ eachAddress?.state }} {{ eachAddress?.country }}\r\n                  {{ eachAddress?.pincode }}</label\r\n                >\r\n              </div>\r\n\r\n              <div class=\"address-box\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"address\"\r\n                  id=\"address\"\r\n                  (change)=\"getSelectedAddress('newAddress')\"\r\n                  [checked]=\"emptyAddress\"\r\n                />\r\n                <label for=\"address\">New Address</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            class=\"address-row\"\r\n            [ngStyle]=\"{\r\n              display: toggleAddress === 'newAddress' ? 'flex' : 'none'\r\n            }\"\r\n          >\r\n            <h3>Contact Detail</h3>\r\n\r\n            <form [formGroup]=\"addressForm\">\r\n              <div class=\"address-feild\">\r\n                <label>Title <span>*</span></label>\r\n                <select\r\n                  formControlName=\"title\"\r\n                  [ngClass]=\"\r\n                    formControl?.title?.invalid &&\r\n                    (formControl?.title?.touched || formControl?.title?.dirty)\r\n                      ? 'red'\r\n                      : formControl?.title?.valid &&\r\n                        (formControl?.title?.touched ||\r\n                          formControl?.title?.dirty)\r\n                      ? 'green'\r\n                      : ''\r\n                  \"\r\n                  required\r\n                >\r\n                  <option value=\"\" selected disabled>Select title</option>\r\n                  <option value=\"Mr\">Mr.</option>\r\n                  <option value=\"Ms\">Ms.</option>\r\n                  <option value=\" \"></option>\r\n                </select>\r\n                <p\r\n                  class=\"error-addressMsg\"\r\n                  *ngIf=\"\r\n                    formControl?.title?.invalid &&\r\n                    (formControl?.title?.touched || formControl?.title?.dirty)\r\n                  \"\r\n                >\r\n                  Select title\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"name-container\">\r\n                <div class=\"address-feild address2\">\r\n                  <label>First Name<span>*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    formControlName=\"first_name\"\r\n                    appTextOnly\r\n                    [ngClass]=\"\r\n                      formControl?.first_name?.errors?.required &&\r\n                      (formControl?.first_name?.touched ||\r\n                        formControl?.first_name?.dirty)\r\n                        ? 'red'\r\n                        : formControl?.first_name?.valid &&\r\n                          (formControl?.first_name?.touched ||\r\n                            formControl?.first_name?.dirty)\r\n                        ? 'green'\r\n                        : ''\r\n                    \"\r\n                    required\r\n                  />\r\n                  <ng-container\r\n                    *ngIf=\"\r\n                      formControl?.first_name?.invalid &&\r\n                      (formControl?.first_name?.touched ||\r\n                        formControl?.first_name?.dirty)\r\n                    \"\r\n                  >\r\n                    <p\r\n                      class=\"error-addressMsg\"\r\n                      *ngIf=\"formControl?.first_name?.errors.required\"\r\n                    >\r\n                      First name is required\r\n                    </p>\r\n                  </ng-container>\r\n                </div>\r\n                <div class=\"address-feild address2\">\r\n                  <label>Middle Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Middle Name\"\r\n                    appTextOnly\r\n                    formControlName=\"middle_name\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"address-feild address2\">\r\n                  <label>Last Name <span>*</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    formControlName=\"last_name\"\r\n                    appTextOnly\r\n                    [ngClass]=\"\r\n                      formControl?.last_name?.errors?.required &&\r\n                      (formControl?.last_name?.touched ||\r\n                        formControl?.last_name?.dirty)\r\n                        ? 'red'\r\n                        : formControl?.last_name?.valid &&\r\n                          (formControl?.last_name?.touched ||\r\n                            formControl?.last_name?.dirty)\r\n                        ? 'green'\r\n                        : ''\r\n                    \"\r\n                    required\r\n                  />\r\n                  <ng-container\r\n                    *ngIf=\"\r\n                      formControl?.last_name?.invalid &&\r\n                      (formControl?.last_name?.touched ||\r\n                        formControl?.last_name?.dirty)\r\n                    \"\r\n                  >\r\n                    <p\r\n                      class=\"error-addressMsg\"\r\n                      *ngIf=\"formControl?.last_name?.errors.required\"\r\n                    >\r\n                      Last name is required\r\n                    </p>\r\n                  </ng-container>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"address-feild\">\r\n                <label>Contact Number <span>*</span></label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Contact Number\"\r\n                  appNumOnly\r\n                  (input)=\"onInputChange($event.target.value, 'phone')\"\r\n                  formControlName=\"phone\"\r\n                  [ngClass]=\"\r\n                    (formControl?.phone?.errors?.required ||\r\n                      formControl?.phone?.errors?.pattern) &&\r\n                    (formControl?.phone?.touched || formControl?.phone?.dirty)\r\n                      ? 'red'\r\n                      : formControl?.phone?.valid &&\r\n                        (formControl?.phone?.touched ||\r\n                          formControl?.phone?.dirty)\r\n                      ? 'green'\r\n                      : ''\r\n                  \"\r\n                  required\r\n                />\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    formControl?.phone?.invalid &&\r\n                    (formControl?.phone?.touched || formControl?.phone?.dirty)\r\n                  \"\r\n                >\r\n                  <p\r\n                    class=\"error-addressMsg\"\r\n                    *ngIf=\"formControl?.phone?.errors.required\"\r\n                  >\r\n                    Phone number is required\r\n                  </p>\r\n                  <p\r\n                    class=\"error-addressMsg\"\r\n                    *ngIf=\"formControl?.phone?.errors.pattern\"\r\n                  >\r\n                    Enter valid phone number\r\n                  </p>\r\n                </ng-container>\r\n              </div>\r\n\r\n              <h3>Address</h3>\r\n\r\n              <div class=\"address-feild\">\r\n                <label\r\n                  >Address (House No., Building , Street, Area)\r\n                  <span>*</span></label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Address\"\r\n                  formControlName=\"house_no\"\r\n                  [ngClass]=\"\r\n                    formControl?.house_no?.invalid &&\r\n                    (formControl?.house_no?.touched ||\r\n                      formControl?.house_no?.dirty)\r\n                      ? 'red'\r\n                      : formControl?.house_no?.valid &&\r\n                        (formControl?.house_no?.touched ||\r\n                          formControl?.house_no?.dirty)\r\n                      ? 'green'\r\n                      : ''\r\n                  \"\r\n                  required\r\n                />\r\n                <p\r\n                  class=\"error-addressMsg\"\r\n                  *ngIf=\"\r\n                    formControl?.house_no?.invalid &&\r\n                    (formControl?.house_no?.touched ||\r\n                      formControl?.house_no?.dirty)\r\n                  \"\r\n                >\r\n                  Address is required\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"address-feild\">\r\n                <label>Country <span>*</span></label>\r\n                <select\r\n                  formControlName=\"country\"\r\n                  (change)=\"onChangeCountry($event.target.value)\"\r\n                  [ngClass]=\"\r\n                    formControl?.country?.invalid &&\r\n                    (formControl?.country?.touched ||\r\n                      formControl?.country?.dirty)\r\n                      ? 'red'\r\n                      : formControl?.country?.valid &&\r\n                        (formControl?.country?.touched ||\r\n                          formControl?.country?.dirty)\r\n                      ? 'green'\r\n                      : ''\r\n                  \"\r\n                  required\r\n                >\r\n                  <option\r\n                    *ngFor=\"\r\n                      let eachCountry of countryInfo;\r\n                      let countryCount = index\r\n                    \"\r\n                    value=\"{{ eachCountry?.name }}\"\r\n                  >\r\n                    {{ eachCountry.name }}\r\n                  </option>\r\n                </select>\r\n                <p\r\n                  class=\"error-addressMsg\"\r\n                  *ngIf=\"\r\n                    formControl?.country?.invalid &&\r\n                    (formControl?.country?.touched ||\r\n                      formControl?.country?.dirty)\r\n                  \"\r\n                >\r\n                  Select country from list\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"address-feild\">\r\n                <label>State <span>*</span></label>\r\n                <select\r\n                  formControlName=\"state\"\r\n                  (change)=\"onChangeState($event.target.value)\"\r\n                  [ngClass]=\"\r\n                    formControl?.state?.invalid &&\r\n                    (formControl?.state?.touched || formControl?.state?.dirty)\r\n                      ? 'red'\r\n                      : formControl?.state?.valid &&\r\n                        (formControl?.state?.touched ||\r\n                          formControl?.state?.dirty)\r\n                      ? 'green'\r\n                      : ''\r\n                  \"\r\n                  required\r\n                >\r\n                  <option value=\"\" selected disabled>\r\n                    Please select state\r\n                  </option>\r\n                  <option\r\n                    *ngFor=\"let eachState of stateInfo; let stateCount = index\"\r\n                    value=\"{{ eachState?.name }}\"\r\n                  >\r\n                    {{ eachState.name }}\r\n                  </option>\r\n                </select>\r\n                <p\r\n                  class=\"error-addressMsg\"\r\n                  *ngIf=\"\r\n                    formControl?.state?.invalid &&\r\n                    (formControl?.state?.touched || formControl?.state?.dirty)\r\n                  \"\r\n                >\r\n                  Select state from list\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"address-feild\">\r\n                <label>City <span>*</span></label>\r\n                <select\r\n                  formControlName=\"city\"\r\n                  [ngClass]=\"\r\n                    formControl?.city?.invalid &&\r\n                    (formControl?.city?.touched || formControl?.city?.dirty)\r\n                      ? 'red'\r\n                      : formControl?.city?.valid &&\r\n                        (formControl?.city?.touched || formControl?.city?.dirty)\r\n                      ? 'green'\r\n                      : ''\r\n                  \"\r\n                  required\r\n                >\r\n                  <option value=\"\" selected disabled>\r\n                    Please select state first\r\n                  </option>\r\n                  <option\r\n                    *ngFor=\"let eachCity of cityInfo; let cityCount = index\"\r\n                    value=\"{{ eachCity?.name }}\"\r\n                  >\r\n                    {{ eachCity.name }}\r\n                  </option>\r\n                </select>\r\n                <p\r\n                  class=\"error-addressMsg\"\r\n                  *ngIf=\"\r\n                    formControl?.city?.invalid &&\r\n                    (formControl?.city?.touched || formControl?.city?.dirty)\r\n                  \"\r\n                >\r\n                  Select city\r\n                </p>\r\n              </div>\r\n\r\n              <div class=\"address-feild\">\r\n                <label>Postal code<span>*</span></label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"1234\"\r\n                  appNumOnly\r\n                  formControlName=\"pincode\"\r\n                  (input)=\"onInputChange($event.target.value, 'zip')\"\r\n                  [ngClass]=\"\r\n                    (formControl?.pincode?.errors?.required ||\r\n                      formControl?.pincode?.errors?.pattern) &&\r\n                    (formControl?.pincode?.touched ||\r\n                      formControl?.pincode?.dirty)\r\n                      ? 'red'\r\n                      : formControl?.pincode?.valid &&\r\n                        (formControl?.pincode?.touched ||\r\n                          formControl?.pincode?.dirty)\r\n                      ? 'green'\r\n                      : ''\r\n                  \"\r\n                  required\r\n                />\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    formControl?.pincode?.invalid &&\r\n                    (formControl?.pincode?.touched ||\r\n                      formControl?.pincode?.dirty)\r\n                  \"\r\n                >\r\n                  <p\r\n                    class=\"error-addressMsg\"\r\n                    *ngIf=\"formControl?.pincode?.errors.required\"\r\n                  >\r\n                    Postal code is required\r\n                  </p>\r\n                  <p\r\n                    class=\"error-addressMsg\"\r\n                    *ngIf=\"formControl?.pincode?.errors.pattern\"\r\n                  >\r\n                    Enter valid postal code\r\n                  </p>\r\n                </ng-container>\r\n              </div>\r\n            </form>\r\n            <div class=\"blue-button\" (click)=\"saveAddress(addressForm)\">\r\n              Save this address\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"price-detail\" *ngIf=\"products.length > 0\">\r\n          <h3 class=\"price-title\">Price Detail</h3>\r\n\r\n          <div class=\"price-row\" *ngFor=\"let eachProduct of products\">\r\n            <div\r\n              class=\"left-price\"\r\n              *ngIf=\"eachProduct?.type !== 'spare'; else productSpare\"\r\n            >\r\n              <h3>{{ eachProduct?.description }}</h3>\r\n              <p *ngIf=\"eachProduct?.driveType !== ''\">\r\n                ({{ eachProduct?.driveType }})\r\n              </p>\r\n            </div>\r\n\r\n            <ng-template #productSpare>\r\n              <div class=\"left-price\">\r\n                <h3>{{ eachProduct?.code }}</h3>\r\n                <p *ngIf=\"eachProduct?.description !== ''\">\r\n                  ({{ eachProduct?.description }})\r\n                </p>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <div class=\"right-price\">\r\n              <h3>\r\n                $\r\n                {{\r\n                  eachProduct?.productQuantity *\r\n                    (eachProduct?.discountPrice > 0\r\n                      ? eachProduct?.discountPrice\r\n                      : eachProduct?.price)\r\n                }}\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <div class=\"price-row total-price\">\r\n            <div class=\"left-price-spare\">\r\n              <h3>Sub Total</h3>\r\n              <h3>${{ grandTotal }}</h3>\r\n            </div>\r\n            <div class=\"left-price-spare\">\r\n              <h3>Shipping & Handling</h3>\r\n              <h3>${{ shippingCharges }}</h3>\r\n            </div>\r\n            <div class=\"left-price-spare\">\r\n              <h3>Total (including GST@10%) <br />(In AUD)</h3>\r\n              <h3>${{ finalPrice + gstPrice }}</h3>\r\n            </div>\r\n            <div class=\"left-price-spare\" *ngIf=\"applyDealerDiscount\">\r\n              <h3>\r\n                Dealer Discount (10%) <br />\r\n                (In AUD)\r\n              </h3>\r\n              <h3>${{ finalPrice + gstPrice - dealerDiscountAmount }}</h3>\r\n            </div>\r\n          </div>\r\n          <button *ngIf=\"emptyAddress\" disabled>\r\n            <a class=\"tooltip\"\r\n              >Checkout\r\n              <span class=\"tooltiptext\"\r\n                >Please enter your address to continue</span\r\n              ></a\r\n            >\r\n          </button>\r\n          <button *ngIf=\"!emptyAddress\">\r\n            <a class=\"tooltip\" (click)=\"checkOut()\">Checkout</a>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\n\r\nexport class RouteGuard implements CanActivate {\r\n\r\n  constructor(private toaster: ToastrService, private router: Router){\r\n\r\n  }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n    // to guard the route if user-id present the allow entry to particular component otherwise navigate to sign-in.\r\n    if (sessionStorage.getItem('id')){\r\n      return true;\r\n    }else{\r\n      this.toaster.success('Please sign-in to continue');\r\n      this.router.navigate(['/sign-in']);\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  ViewChild,\r\n  QueryList,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { CartDetails } from 'src/app/dataModels/cart-details';\r\nimport { ApiService } from '../../../services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-cart-details',\r\n  templateUrl: './cart-details.component.html',\r\n  styleUrls: ['./cart-details.component.css'],\r\n})\r\nexport class CartDetailsComponent implements OnInit, OnDestroy {\r\n  @ViewChild('input') inputList: QueryList<ElementRef>;\r\n\r\n  subscribe: Subscription[] = []; // used to store subscription\r\n\r\n  grandTotal: number = 0; // used to store totalPrice\r\n  shippingCharges: number = 0; // default shipping charges value\r\n  finalPrice: number = 0; // default final Price\r\n  productQuantity: number = 0; // used to store the product quantity\r\n\r\n  products: CartDetails[] = []; // assign product to be of CartDetails array type\r\n  deleteItemIndex: number; // used to store the item index number to be deleted\r\n  toggleBtn: boolean = false; // used to show/hide buttons according to user signIn or not\r\n  showDeleteMsg: boolean = false; // used to show/hide delete popup content\r\n  gstPrice: number;\r\n  applyDealerDiscount: boolean = false; // used to apply for dealer discount\r\n  dealerDiscountAmount: number = 0; // initial dealer discount\r\n  dealerDiscountPercentage: number ;\r\n\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // if (localStorage.getItem('id')) { // checking if userId is present or not\r\n    if (sessionStorage.getItem('id')) {\r\n      // checking if userId is present or not\r\n      // console.log('My iD', window.atob(sessionStorage.getItem('id')))\r\n      this.toggleBtn = true; // assign toggleBtn to true\r\n      // if (localStorage.getItem('cartId')) { // checking cartId is present or not\r\n      if (sessionStorage.getItem('cartId')) {\r\n        // checking cartId is present or not\r\n        if (\r\n          window.atob(sessionStorage.getItem('userType')) ===\r\n            'Dealer' &&\r\n          window.atob(sessionStorage.getItem('userStatus')) === 'D'\r\n        ) {\r\n          this.applyDealerDiscount = true;\r\n          if (window.atob(sessionStorage.getItem('userDiscount')) === null) {\r\n            this.apiService.dealerDiscount().subscribe(res => {\r\n              if (res[`return`] === true) {\r\n                this.dealerDiscountPercentage = res[`dealer_discount`];\r\n                this.dealerDiscountPercentage = this.dealerDiscountPercentage * 0.01;\r\n              }\r\n            })\r\n          } else {\r\n            let userDiscount = window.atob(sessionStorage.getItem('userDiscount'));\r\n            this.dealerDiscountPercentage = +userDiscount * 0.01;\r\n          }\r\n        }\r\n        if (sessionStorage.getItem('cart')) {\r\n          // checking cart data is present or not\r\n          // console.log('my cart', window.atob(sessionStorage.getItem('cart')))\r\n          // console.log('my cartId', window.atob(sessionStorage.getItem('cartId')))\r\n          // console.log('userId', window.atob(sessionStorage.getItem('id')))\r\n          this.updateCartDetails(\r\n            window.atob(sessionStorage.getItem('cart')),\r\n            'session'\r\n          );\r\n        } else {\r\n          // getting data from cartResolver\r\n          this.subscribe.push(\r\n            this.activatedRoute.data.subscribe((res: CartDetails[]) => {\r\n              this.products = res[`cartData`];\r\n              this.insertImages(this.products);\r\n              console.log('products', this.products);\r\n              this.getProductQuantity();\r\n              this.findGrandTotal();\r\n            })\r\n          );\r\n        }\r\n      } else {\r\n        this.getCartItems();\r\n        if (this.products.length > 0) {\r\n          const cartData = {\r\n            // user_id: window.atob(localStorage.getItem('id')),\r\n            user_id: window.atob(sessionStorage.getItem('id')),\r\n            cart: JSON.stringify(this.products),\r\n          };\r\n          // calling addToCart api to add items to cart\r\n          this.subscribe.push(\r\n            this.apiService.addToCart(cartData).subscribe((res) => {\r\n              if (res[`code`] === 200) {\r\n                sessionStorage.removeItem('cart');\r\n                // localStorage.setItem('cartId', window.btoa(res[`cart_details`].id));\r\n                sessionStorage.setItem(\r\n                  'cartId',\r\n                  window.btoa(res[`cart_details`].id)\r\n                );\r\n                this.products = JSON.parse(res[`cart_details`].cart);\r\n                this.getProductQuantity();\r\n                this.findGrandTotal();\r\n                this.apiService.totalItemsInCart();\r\n              }\r\n            })\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      // if (localStorage.getItem('cardId') === null) {\r\n      if (sessionStorage.getItem('cardId') === null) {\r\n        this.getCartItems();\r\n        this.getProductQuantity();\r\n        this.toggleBtn = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  insertImages(products): void {\r\n    let pumpModel;\r\n    products.forEach((element) => {\r\n      if (element.type === 'product') {\r\n        pumpModel = element.description.split(' ');\r\n      } else {\r\n        pumpModel = '';\r\n      }\r\n      if (\r\n        pumpModel[0] === 'Surface' &&\r\n        (pumpModel[2] === 'Close' || pumpModel[2] === 'Bare')\r\n      ) {\r\n        element[`img`] = 'assets/images/AGCACC/AGCApumpcopy.png';\r\n        // this.productImages = 'assets/images/banner/SAP-AG-Home.jpg';\r\n      } else if (\r\n        pumpModel[0] === 'Multipurpose' &&\r\n        (pumpModel[1] === 'Close' || pumpModel[1] === 'Bare')\r\n      ) {\r\n        element[`img`] = 'assets/images/banner/DC.png';\r\n        // this.productImages = 'assets/images/banner/DC.png';\r\n      } else if (element.type === 'accessory' || element.type === 'spare') {\r\n        switch (element.code) {\r\n          case 'Baseplate':\r\n            element[`img`] = 'assets/images/SparesImg/Baseplate_pic.png';\r\n            break;\r\n          case 'DRP':\r\n            element[`img`] = 'assets/images/SparesImg/DRP_pic.png';\r\n            break;\r\n          case 'Rotor':\r\n            element[`img`] = 'assets/images/SparesImg/rotor.jpg';\r\n            break;\r\n          case 'Stator':\r\n            element[`img`] = 'assets/images/icons/stator.png';\r\n            break;\r\n          case 'Mech Seal':\r\n            element[`img`] = 'assets/images/SparesImg/Mech_seal.jpeg';\r\n            break;\r\n          case 'UJ M Kit':\r\n            element[`img`] = 'assets/images/SparesImg/UJ_KIT.jpg';\r\n            break;\r\n          case 'Pump Lantern':\r\n            element[`img`] = 'assets/images/SparesImg/PUMPLANTERN.BMP';\r\n            break;\r\n          case 'Foot':\r\n            element[`img`] = 'assets/images/SparesImg/FOOT.BMP';\r\n            break;\r\n          case 'Tie Rod':\r\n            element[`img`] = 'assets/images/SparesImg/TIEROD.BMP';\r\n            break;\r\n          case 'Pump Housing':\r\n            element[`img`] = 'assets/images/SparesImg/PUMPHOUSING.BMP';\r\n            break;\r\n          case 'End Cover':\r\n            element[`img`] = 'assets/images/SparesImg/END_COVER.BMP';\r\n            break;\r\n          case 'Seal Plate':\r\n            element[`img`] = 'assets/images/SparesImg/SEAL_PLATE.BMP';\r\n            break;\r\n          case 'Mech Seal Housing':\r\n            element[`img`] = 'assets/images/SparesImg/MECHSEALHOUSING.BMP';\r\n            break;\r\n          case 'Shaft Stub Price':\r\n            element[`img`] = 'assets/images/SparesImg/SHAFT.BMP';\r\n            break;\r\n          case 'Coupling Rod':\r\n            element[`img`] = 'assets/images/SparesImg/COUPLINGROD.BMP';\r\n            break;\r\n          case 'B.S.R. Retaining Ring':\r\n            element[`img`] = 'assets/images/SparesImg/BOOTSEALRETAINER.BMP'; // will change\r\n            break;\r\n          case 'Boot Seal Reatainer':\r\n            element[`img`] = 'assets/images/SparesImg/BOOTSEALRETAINER.BMP';\r\n            break;\r\n          case 'Boot Seal Support Ring':\r\n            element[`img`] =\r\n              'assets/images/SparesImg/Boot_Seal_Support_Ring.bmp';\r\n            break;\r\n          case 'Boot Seal':\r\n            element[`img`] = 'assets/images/SparesImg/BOOT_SEAL.BMP';\r\n            break;\r\n          case 'Foot And Face Mounted Motor 240v 4Pole':\r\n            element[`img`] =\r\n              'assets/images/SparesImg/Foot_face_mounted_motor.jpg';\r\n            break;\r\n          case 'Foot And Face Mounted Motor 240v 6Pole':\r\n            element[`img`] =\r\n              'assets/images/SparesImg/Foot_face_mounted_motor.jpg';\r\n            break;\r\n          case 'Bearing Cover':\r\n            element[`img`] = 'assets/images/SparesImg/BEARINGCOVER.BMP';\r\n            break;\r\n          case 'Bearing Spacer External':\r\n            element[`img`] = 'assets/images/SparesImg/BEARINGSPACER.BMP';\r\n            break;\r\n          case 'Mechanical Seal':\r\n            element[`img`] =\r\n              'assets/images/SparesImg/Mechanical-Seal_image.jpg';\r\n            break;\r\n          case 'Ball_Bearing':\r\n            element[`img`] = 'assets/images/SparesImg/BALLBEARING.BMP';\r\n            break;\r\n          case 'Foot Support For Stator Housing':\r\n            element[`img`] =\r\n              'assets/images/SparesImg/FOOT_FOR_STATOR_HOUSING.BMP';\r\n            break;\r\n          case 'Foot Support For Bearing Housing':\r\n            element[`img`] =\r\n              'assets/images/SparesImg/FOOTFORBEARINGHOUSING.BMP';\r\n            break;\r\n          case 'Stator Housing':\r\n            element[`img`] = 'assets/images/SparesImg/STATORHOUSING.BMP';\r\n            break;\r\n          case 'Bonded Bush':\r\n            element[`img`] = 'assets/images/SparesImg/BONDEDBUSH.BMP';\r\n            break;\r\n          case 'Bearning Housing':\r\n            element[`img`] = 'assets/images/SparesImg/BEARINGHOUSING.BMP';\r\n            break;\r\n          case 'Ball Bearing Small':\r\n            element[`img`] = 'assets/images/SparesImg/BALLBEARING.BMP';\r\n            break;\r\n          case 'Ball Bearing Large':\r\n            element[`img`] = 'assets/images/SparesImg/BALLBEARING.BMP';\r\n            break;\r\n          case 'Mech Seal Retainer':\r\n            element[`img`] =\r\n              'assets/images/SparesImg/MECHANICHALSEALRETAINER.BMP';\r\n            break;\r\n          case 'Stator Support Ring':\r\n            element[`img`] = 'assets/images/SparesImg/STATOR_SUPPORT_RING.jpg';\r\n            break;\r\n          case 'Drive Shaft':\r\n            element[`img`] = 'assets/images/SparesImg/SHAFT.BMP.BMP';\r\n            break;\r\n          case 'Abutment Ring':\r\n            element[`img`] = 'assets/images/SparesImg/ABUTMENT_RING.jpg';\r\n            break;\r\n          case 'Bearing':\r\n            element[`img`] = 'assets/images/SparesImg/BALLBEARING.BMP';\r\n            break;\r\n          default:\r\n            element[`img`] = 'assets/images/icons/accessories2.png';\r\n        }\r\n        // this.productImages = 'assets/images/icons/accessories.png';\r\n      }\r\n    });\r\n  }\r\n\r\n  // function to getProductQuantity of total products in cart\r\n  getProductQuantity(): void {\r\n    this.productQuantity = 0;\r\n    this.products.forEach((product) => {\r\n      this.productQuantity = product.productQuantity + this.productQuantity;\r\n    });\r\n  }\r\n\r\n  // function to update cart according to type\r\n  updateCartDetails(cartArray, type): void {\r\n    if (type === 'session') {\r\n      // checking if cart data is present in sessionStorage or not\r\n      // console.log('session');\r\n      const cartLocalData = JSON.parse(cartArray) as CartDetails[]; // assigning sessionStoraege cart value to cartLocalData\r\n      let cart = [];\r\n      const accessoriesToAdd = []; // accessoriesToAdd[] to add accessory\r\n      const sparesToAdd = []; // sparesToAdd[] to add spare\r\n      if (cartLocalData !== null) {\r\n        // checking if cartLocalData is not null\r\n        cartLocalData.forEach((cartData) => {\r\n          if (cartData.type === 'product') {\r\n            // assigning value in cart\r\n            cart.push(\r\n              new CartDetails(\r\n                cartData.productId,\r\n                cartData.code,\r\n                cartData.description,\r\n                cartData.price,\r\n                cartData.discountPrice,\r\n                cartData.type,\r\n                cartData.pole,\r\n                cartData.flow,\r\n                cartData.head,\r\n                cartData.speed,\r\n                cartData.power,\r\n                cartData.engineSpeed,\r\n                cartData.enginekW,\r\n                cartData.driveType,\r\n                cartData.productQuantity\r\n              )\r\n            );\r\n          } else if (cartData.type === 'accessory') {\r\n            accessoriesToAdd.push(cartData); // pushing cartData of type accessory in accessoriesToAdd array\r\n          } else if (cartData.type === 'spare') {\r\n            sparesToAdd.push(cartData); // pushing cartData of type spare in sparesToAdd array\r\n          }\r\n        });\r\n        this.subscribe.push(\r\n          this.activatedRoute.data.subscribe((res: CartDetails) => {\r\n            let cartDetails = [];\r\n            cartDetails = res[`cartData`]; // assigning data from cartResolver to cartDetails\r\n            if (cartDetails.length <= 0) {\r\n              // checking cartDetails length is smaller or equal to 0\r\n              // (...)spread operator takes in an iterable (e.g an array) and expands it into individual elements.\r\n              if (cart.length) {\r\n                cartDetails.push(...cart); // pushing cart value in cartDetails\r\n              }\r\n              if (accessoriesToAdd.length) {\r\n                cartDetails.push(...accessoriesToAdd); // pushing each accessoriesToAdd value in cartDetails\r\n              }\r\n              if (sparesToAdd.length) {\r\n                cartDetails.push(...sparesToAdd); // pushing each sparesToAdd value in cartDetails\r\n              }\r\n              const updateCartData = {\r\n                // id: window.atob(localStorage.getItem('cartId')),\r\n                // user_id: window.atob(localStorage.getItem('id')),\r\n                id: window.atob(sessionStorage.getItem('cartId')),\r\n                user_id: window.atob(sessionStorage.getItem('id')),\r\n                cart: JSON.stringify(cartDetails),\r\n              };\r\n              // calling updateCart api\r\n              this.apiService\r\n                .updateCart(updateCartData)\r\n                .subscribe((response) => {\r\n                  if (response[`code`] === 200) {\r\n                    sessionStorage.removeItem('cart');\r\n                    this.apiService\r\n                      .getCartById(updateCartData.id)\r\n                      .subscribe((response) => {\r\n                        if (response[`code`] === 200) {\r\n                          this.products = JSON.parse(\r\n                            response[`details`].cart\r\n                          ) as CartDetails[];\r\n                          this.insertImages(this.products);\r\n                          this.getProductQuantity();\r\n                          this.findGrandTotal();\r\n                          this.apiService.totalItemsInCart();\r\n                        }\r\n                      });\r\n                  }\r\n                });\r\n            } else {\r\n              const cartAccessoryDataSet = new Array(); // creating new accessoryArray\r\n              const cartSpareDataSet = new Array(); // creating new spareArray\r\n              let cartProductDataSet; // variable to set productData\r\n              let spareNotExist = true; // check if spare type is present in cartLocalData\r\n              let accessoryNotExist = true; // check if accessory type is present in cartLocalData\r\n              let cartNotExist = true; // check if cart type is present in cartLocalData\r\n              // cartDetails.filter(eachData => {\r\n              //   if (eachData.motor === null){\r\n              //     return eachData.motor = {volt: 0};\r\n              //   }\r\n              // });\r\n              // for loop starts\r\n              for (let i = 0; i < cartDetails.length; i++) {\r\n                if (cartDetails[i].type === 'product') {\r\n                  // checking productType\r\n                  cartNotExist = false;\r\n                  for (let j = 0; j < cart.length; j++) {\r\n                    if (\r\n                      (cartDetails[i].driveType === '' ||\r\n                        cartDetails[i].driveType) ===\r\n                        (cart[j].driveType === '' || cart[j].driveType) &&\r\n                      cartDetails[i].code === cart[j].code &&\r\n                      cartDetails[i].pole === cart[j].pole\r\n                    ) {\r\n                      cartDetails[i].productQuantity++;\r\n                    } else {\r\n                      cartProductDataSet = cart;\r\n                    }\r\n                  }\r\n                } else if (cartDetails[i].type === 'accessory') {\r\n                  accessoryNotExist = false;\r\n                  for (let j = 0; j < accessoriesToAdd.length; j++) {\r\n                    if (\r\n                      accessoriesToAdd[j].description ===\r\n                        cartDetails[i].description &&\r\n                      accessoriesToAdd[j].driveType ===\r\n                        cartDetails[i].driveType &&\r\n                      accessoriesToAdd[j].pole === cartDetails[i].pole\r\n                    ) {\r\n                      // checking productType\r\n                      cartDetails[i].productQuantity++;\r\n                    } else {\r\n                      /* some() is used to checks whether at least one of the elements of the array satisfies\r\n                      the condition then returns true (and does not check the remaining values) otherwise return false*/\r\n                      if (\r\n                        !cartDetails.some(\r\n                          (res) =>\r\n                            res.description ===\r\n                              accessoriesToAdd[j].description &&\r\n                            res.pole === accessoriesToAdd[j].pole &&\r\n                            res.driveType === accessoriesToAdd[j].driveType\r\n                        ) &&\r\n                        !cartAccessoryDataSet.some(\r\n                          (res) =>\r\n                            res.description ===\r\n                              accessoriesToAdd[j].description &&\r\n                            res.pole === accessoriesToAdd[j].pole &&\r\n                            res.driveType === accessoriesToAdd[j].driveType\r\n                        )\r\n                      ) {\r\n                        cartAccessoryDataSet.push(accessoriesToAdd[j]);\r\n                      }\r\n                    }\r\n                  }\r\n                } else if (cartDetails[i].type === 'spare') {\r\n                  // checking productType\r\n                  spareNotExist = false;\r\n                  // console.log(cartDetails)\r\n                  // console.log(sparesToAdd)\r\n                  for (let j = 0; j < sparesToAdd.length; j++) {\r\n                    if (\r\n                      sparesToAdd[j].description ===\r\n                        cartDetails[i].description &&\r\n                      sparesToAdd[j].pole === cartDetails[i].pole &&\r\n                      sparesToAdd[j].driveType === cartDetails[i].driveType\r\n                    ) {\r\n                      cartDetails[i].productQuantity++;\r\n                    } else {\r\n                      /* some() is used to checks whether at least one of the elements of the array satisfies\r\n                      the condition then returns true (and does not check the remaining values) otherwise return false*/\r\n                      if (\r\n                        !cartDetails.some(\r\n                          (res) =>\r\n                            res.description === sparesToAdd[j].description &&\r\n                            res.pole === sparesToAdd[j].pole &&\r\n                            res.driveType === sparesToAdd[j]?.driveType\r\n                        ) &&\r\n                        !cartSpareDataSet.some(\r\n                          (res) =>\r\n                            res.description === sparesToAdd[j].description &&\r\n                            res.pole === sparesToAdd[j].pole &&\r\n                            res.driveType === sparesToAdd[j]?.driveType\r\n                        )\r\n                      ) {\r\n                        cartSpareDataSet.push(sparesToAdd[j]);\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              // for loops ends\r\n\r\n              // checking to push if cartAccessoryDataSet length is greater than 0\r\n              if (cartAccessoryDataSet.length > 0) {\r\n                cartDetails.push(...cartAccessoryDataSet);\r\n              }\r\n\r\n              // checking to push if cartSpareDataSet length is greater than 0\r\n              if (cartSpareDataSet.length > 0) {\r\n                cartDetails.push(...cartSpareDataSet);\r\n              }\r\n\r\n              // checking to push if cartProductDataSet is not undefined\r\n              if (\r\n                cartProductDataSet !== undefined ||\r\n                cartProductDataSet?.length\r\n              ) {\r\n                cartDetails.push(...cartProductDataSet);\r\n              }\r\n\r\n              // checking to push if accessory exist\r\n              if (accessoryNotExist) {\r\n                cartDetails.push(...accessoriesToAdd);\r\n              }\r\n\r\n              // checking to push if spare exist\r\n              if (spareNotExist) {\r\n                cartDetails.push(...sparesToAdd);\r\n              }\r\n\r\n              // checking to push if cart exist\r\n              if (cartNotExist) {\r\n                cartDetails.push(...cart);\r\n              }\r\n              const updateCartData = {\r\n                // id: window.atob(localStorage.getItem('cartId')),\r\n                // user_id: window.atob(localStorage.getItem('id')),\r\n                id: window.atob(sessionStorage.getItem('cartId')),\r\n                user_id: window.atob(sessionStorage.getItem('id')),\r\n                cart: JSON.stringify(cartDetails),\r\n              };\r\n              // calling updateCart api\r\n              this.apiService\r\n                .updateCart(updateCartData)\r\n                .subscribe((response) => {\r\n                  if (response[`code`] === 200) {\r\n                    sessionStorage.removeItem('cart');\r\n                    this.apiService\r\n                      .getCartById(updateCartData.id)\r\n                      .subscribe((response) => {\r\n                        if (response[`code`] === 200) {\r\n                          // console.log(res, 'output')\r\n                          this.products = JSON.parse(\r\n                            response[`details`].cart\r\n                          ) as CartDetails[];\r\n                          this.insertImages(this.products);\r\n                          this.getProductQuantity();\r\n                          this.findGrandTotal();\r\n                          this.apiService.totalItemsInCart();\r\n                        }\r\n                      });\r\n                  }\r\n                });\r\n            }\r\n          })\r\n        );\r\n      }\r\n    } else if (type === 'cart') {\r\n      const updateCart = {\r\n        // id: window.atob(localStorage.getItem('cartId')),\r\n        // user_id: window.atob(localStorage.getItem('id')),\r\n        id: window.atob(sessionStorage.getItem('cartId')),\r\n        user_id: window.atob(sessionStorage.getItem('id')),\r\n        cart: JSON.stringify(cartArray),\r\n      };\r\n      this.subscribe.push(\r\n        this.apiService.updateCart(updateCart).subscribe((res) => {\r\n          if (res[`code`] === 200) {\r\n            this.apiService.totalItemsInCart();\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  // function to getCartItems from sessionStorage\r\n  getCartItems(): void {\r\n    if (sessionStorage.getItem('cart')) {\r\n      this.products = JSON.parse(\r\n        window.atob(sessionStorage.getItem('cart'))\r\n      ) as CartDetails[];\r\n      // console.log(this.products, 'products')\r\n      this.insertImages(this.products);\r\n      // this.sparePriceChange(this.products);\r\n      this.findGrandTotal();\r\n    } else {\r\n      this.products = [];\r\n    }\r\n  }\r\n\r\n  // sparePriceChange(products: CartDetails[]): void{\r\n  //   products.filter(eachProduct => {\r\n  //     if (eachProduct.type === 'spare'){\r\n  //       eachProduct.price = eachProduct.discountPrice;\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // function to findGrandTotal\r\n  findGrandTotal(): void {\r\n    let productPrice = 0; // default product price\r\n\r\n    // calculating eachProduct price using forEach loop for products array\r\n    this.products.forEach((ele) => {\r\n      if (ele.productQuantity) {\r\n        // checking if productQuantity is greater than 0\r\n        // multiplying eachProduct price with eachProduct quantity and adding the result with productPrice\r\n        productPrice =\r\n          (ele.discountPrice > 0 ? ele.discountPrice : ele.price) *\r\n            ele.productQuantity +\r\n          productPrice;\r\n      }\r\n    });\r\n    this.grandTotal = productPrice;\r\n    this.shippingCharges = Math.round(+(0.05 * this.grandTotal).toFixed(3)); // 5% of totalCharges\r\n    this.finalPrice = Math.round(this.grandTotal + this.shippingCharges); // adding price with shippingCharges and assigning to total\r\n    this.gstPrice = Math.round(+(0.1 * this.finalPrice).toFixed(3));\r\n    this.dealerDiscountAmount = Math.round(+(this.dealerDiscountPercentage * (this.finalPrice + this.gstPrice)).toFixed(3));\r\n  }\r\n\r\n  // function to decrease productQuantity\r\n  decrementProductQuantity(productCount): void {\r\n    let productItemQuantity = this.products[productCount].productQuantity; // assign particular productQuantity according to index number\r\n    productItemQuantity = productItemQuantity - 1; // decrementing productQuantity by 1\r\n    if (productItemQuantity < 1) {\r\n      // checking if productQuantity is less than 1 or not to open delete popup\r\n      const show = document.getElementById('cartdeletemodal') as HTMLElement;\r\n      show.classList.add('in');\r\n      show.style.display = 'block';\r\n      this.deleteItemIndex = productCount;\r\n      const productId = this.products[this.deleteItemIndex].productId;\r\n      const productType = this.products[this.deleteItemIndex].type;\r\n      if (productType === 'product') {\r\n        const productData = this.products.some((eachProduct) => {\r\n          return (\r\n            eachProduct.type === 'accessory' &&\r\n            eachProduct.productId === productId\r\n          );\r\n        });\r\n        if (productData) {\r\n          this.showDeleteMsg = true;\r\n        } else {\r\n          this.showDeleteMsg = false;\r\n        }\r\n      } else {\r\n        this.showDeleteMsg = false;\r\n      }\r\n    } else {\r\n      // if greater than 1 then adding the decremented productQuantity\r\n      this.products[productCount].productQuantity = productItemQuantity;\r\n      // if (localStorage.getItem('id') === null) { // checking if userId is present or not\r\n      if (sessionStorage.getItem('id') === null) {\r\n        // checking if userId is present or not\r\n        sessionStorage.setItem(\r\n          'cart',\r\n          window.btoa(JSON.stringify(this.products))\r\n        ); // setting the product value in sessionStorage\r\n      } else {\r\n        this.updateCartDetails(this.products, 'cart');\r\n      }\r\n      this.getProductQuantity();\r\n    }\r\n    this.findGrandTotal();\r\n  }\r\n\r\n  // function to remove item from cart\r\n  removeItemFromCart(): void {\r\n    let productIndex;\r\n    if (this.deleteItemIndex > -1) {\r\n      // checking deleteItemIndex i.e. product Index is greater than -1 or not\r\n      const productId = this.products[this.deleteItemIndex].productId;\r\n      const productType = this.products[this.deleteItemIndex].type;\r\n\r\n      if (productType === 'product') {\r\n        //this.products = this.products.filter( eachProduct => eachProduct.type === 'accessory' && eachProduct.productId !== productId );\r\n        this.products = this.products.filter((eachProduct) => {\r\n          return !(\r\n            eachProduct.type === 'accessory' &&\r\n            eachProduct.productId === productId\r\n          );\r\n        });\r\n        productIndex = this.products.findIndex(\r\n          (eachProduct) =>\r\n            eachProduct.productId === productId &&\r\n            eachProduct.type === 'product'\r\n        );\r\n      }\r\n\r\n      if (productIndex !== undefined && productIndex !== -1) {\r\n        // splice() method changes the contents of an array by removing or replacing existing elements and/or adding new elements in place.\r\n        this.products.splice(productIndex, 1); // removing the particular product from array\r\n        this.products.forEach((eachProduct) => {\r\n          if (\r\n            eachProduct.type === 'spare' &&\r\n            eachProduct.productId === productId\r\n          ) {\r\n            eachProduct.discountPrice = 0;\r\n          }\r\n        });\r\n      } else {\r\n        this.products.splice(this.deleteItemIndex, 1); // removing the particular product from array\r\n        this.products.forEach((eachProduct) => {\r\n          if (\r\n            eachProduct.type === 'spare' &&\r\n            eachProduct.productId === productId\r\n          ) {\r\n            eachProduct.discountPrice = 0;\r\n          }\r\n        });\r\n      }\r\n    }\r\n    // if (localStorage.getItem('id') === null) { // checking if userId is present or not\r\n    if (sessionStorage.getItem('id') === null) {\r\n      // checking if userId is present or not\r\n      sessionStorage.setItem(\r\n        'cart',\r\n        window.btoa(JSON.stringify(this.products))\r\n      ); // setting products in sessionStorage\r\n    } else {\r\n      this.updateCartDetails(this.products, 'cart');\r\n    }\r\n    // hiding delete Modal after delete is done.\r\n    const show = document.getElementById('cartdeletemodal') as HTMLElement;\r\n    show.classList.remove('in');\r\n    show.style.display = 'none';\r\n    this.findGrandTotal();\r\n    this.apiService.totalItemsInCart();\r\n  }\r\n\r\n  // function to hide delete Modal\r\n  closeDeleteModal(): void {\r\n    const show = document.getElementById('cartdeletemodal') as HTMLElement;\r\n    show.classList.remove('in');\r\n    show.style.display = 'none';\r\n  }\r\n\r\n  // function to increment productQuantity\r\n  incrementProductQuantity(productCount): void {\r\n    let productTotal = this.products[productCount].productQuantity; // assign particular productQuantity\r\n    productTotal++; // incrementing productQuantity by 1\r\n    this.products[productCount].productQuantity = productTotal; // assigning the incremented productQuantity to productArray\r\n    // if (localStorage.getItem('id') === null) { // checking if userID present or not\r\n    if (sessionStorage.getItem('id') === null) {\r\n      // checking if userID present or not\r\n      sessionStorage.setItem(\r\n        'cart',\r\n        window.btoa(JSON.stringify(this.products))\r\n      );\r\n    } else {\r\n      this.updateCartDetails(this.products, 'cart');\r\n    }\r\n    this.getProductQuantity();\r\n    this.findGrandTotal();\r\n  }\r\n\r\n  // function to navigate after continue or sin-in/sign-up\r\n  onContinue(type: string): void {\r\n    // if (localStorage.getItem('id') && type === 'continue') {\r\n    if (sessionStorage.getItem('id') && type === 'continue') {\r\n      // if (localStorage.getItem('cartId')) {\r\n      if (sessionStorage.getItem('cartId')) {\r\n        this.router.navigate(['./deliveryAddress'], {\r\n          relativeTo: this.activatedRoute,\r\n        });\r\n      }\r\n    } else {\r\n      sessionStorage.setItem(\r\n        'cart',\r\n        window.btoa(JSON.stringify(this.products))\r\n      );\r\n      // if (type === 'sign-up') {\r\n      //   this.router.navigate(['/sign-up'], { queryParams: { origin: 'cart' } });\r\n      // } else if (type === 'sign-in') {\r\n      //   this.router.navigate(['/sign-in'], { queryParams: { origin: 'cart' } });\r\n      // }\r\n\r\n      if (type === 'sign-in') {\r\n        this.router.navigate(['/sign-in'], { queryParams: { origin: 'cart' } });\r\n      }\r\n    }\r\n  }\r\n\r\n  // function to navigate according to type\r\n  redirect(type: string): void {\r\n    if (type === 'sign-up') {\r\n      this.router.navigate(['/sign-up'], { queryParams: { origin: 'cart' } });\r\n    } else if (type === 'sign-in') {\r\n      this.router.navigate(['/sign-in'], { queryParams: { origin: 'cart' } });\r\n    }\r\n  }\r\n\r\n  // used to unsubscribe the subscription\r\n  ngOnDestroy(): void {\r\n    // Called once, before the instance is destroyed.\r\n    // Add 'implements OnDestroy' to the class.\r\n    this.subscribe.forEach((sub) => {\r\n      if (sub) {\r\n        sub.unsubscribe();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"main-container cartpage\">\r\n\r\n  <div class=\"breadcrum\">\r\n    <div class=\"container\">\r\n      <p><a href=\"javascript:void(0)\" [routerLink]=\"['/home']\">Home</a> <span>/</span> Cart</p>\r\n    </div>\r\n  </div>\r\n\r\n  <ng-container *ngIf=\"products.length > 0\">\r\n    <div class=\"cart-scale\">\r\n      <div class=\"container\">\r\n        <div class=\"cart-scale-inner\">\r\n          <div class=\"scale-no active-scale\"><a style=\"pointer-events: none;\">1</a><small>Cart</small></div>\r\n          <div class=\"scale-no\"><a style=\"pointer-events: none;\">2</a><small>Address</small></div>\r\n          <div class=\"scale-no\"><a style=\"pointer-events: none;\">3</a><small>Payment</small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"cart-section\">\r\n      <div class=\"container\">\r\n        <div class=\"cart-inner\">\r\n          <div class=\"cart\">\r\n            <h3 class=\"price-title\">Cart</h3>\r\n            <div class=\"cart-row cart-row-products\" *ngFor=\"let eachProduct of products; let productCount=index\">\r\n              <div class=\"left-cart\">\r\n                <div class=\"cart-pic\"> <img [src]=\"eachProduct.img\" height=\"40px\" width=\"40px\"></div>\r\n              </div>\r\n\r\n              <div class=\"right-cart\">\r\n                <span>\r\n                  <strong>{{eachProduct?.code}}</strong>\r\n                  <p *ngIf=\"eachProduct?.description !== ''\">\r\n                    {{eachProduct?.description}}</p>\r\n                  <p *ngIf=\"eachProduct?.driveType !== '' \">{{eachProduct?.driveType}}</p>\r\n                </span>\r\n                <div class=\"mid-cart\">\r\n                  <div class=\"number\">\r\n                    <span class=\"minus\" (click)=\"decrementProductQuantity(productCount)\">-</span>\r\n                    <input type=\"text\" [value]=\"eachProduct?.productQuantity\" appNumOnly disabled />\r\n                    <span class=\"plus\" (click)=\"incrementProductQuantity(productCount)\">+</span>\r\n                  </div>\r\n                </div>\r\n                <h3>$ {{eachProduct?.discountPrice > 0 ? eachProduct?.discountPrice : eachProduct?.price}}</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"price-detail\">\r\n            <h3 class=\"price-title\">Price Detail</h3>\r\n\r\n            <div class=\"price-row\" *ngFor=\"let eachProduct of products\">\r\n              <div class=\"left-price\" *ngIf=\"eachProduct?.type !== 'spare';else productSpare\">\r\n                <h3>{{eachProduct?.description}}</h3>\r\n                <p *ngIf=\"eachProduct?.driveType !== ''\">({{eachProduct?.driveType}})</p>\r\n              </div>\r\n\r\n              <ng-template #productSpare>\r\n                <div class=\"left-price\">\r\n                  <h3>{{eachProduct?.code}}</h3>\r\n                  <p *ngIf=\"eachProduct?.description !== ''\">({{eachProduct?.description}})</p>\r\n                </div>\r\n              </ng-template>\r\n\r\n              <div class=\"right-price\">\r\n                <h3>$ {{eachProduct?.productQuantity * (eachProduct?.discountPrice > 0 ? eachProduct?.discountPrice : eachProduct?.price)}}</h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <div class=\"price-row total-price\">\r\n                <div class=\"left-price-spare\">\r\n                  <h3>Sub Total</h3>\r\n                  <h3>${{grandTotal}}</h3>\r\n                </div>\r\n                <div class=\"left-price-spare\">\r\n                  <h3>Shipping & Handling</h3>\r\n                  <h3>${{shippingCharges}}</h3>\r\n                </div>\r\n                <div class=\"left-price-spare\" >\r\n                  <h3>Total (including GST@10%) <br /> (In AUD)</h3>\r\n                  <h3>${{finalPrice + gstPrice}}</h3>\r\n                </div>\r\n                <div class=\"left-price-spare\" *ngIf=\"applyDealerDiscount\">\r\n                  <h3>Dealer Discount (10%) <br /> (In AUD)</h3>\r\n                  <h3>${{finalPrice + gstPrice - dealerDiscountAmount}}</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"sign-button-sec\" *ngIf=\"!toggleBtn\">\r\n              <button><a class=\"tooltip\" (click)=\"onContinue('sign-in')\">Continue\r\n                <span\r\n                class=\"tooltiptext\">Click here to sign-in</span>\r\n              </a></button>\r\n            </div>\r\n            <ng-container *ngIf=\"toggleBtn\">\r\n              <button><a href=\"javascript:void(0)\" (click)=\"onContinue('continue')\">Continue</a></button>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"products.length == 0\">\r\n    <div class=\"epmtyCartImg\">\r\n      <img src=\"assets/images/icons/EmptyCart.svg\">\r\n    </div>\r\n    <p class=\"emptyCartMsg\" *ngIf=\"!toggleBtn\">Your cart is currently empty. Please <a (click)=\"redirect('sign-in')\">Sign-in</a> or <a (click)=\"redirect('sign-up')\">Sign-up</a> here.</p>\r\n    <p class=\"emptyCartMsg\" *ngIf=\"toggleBtn\">Your cart is currently empty. Please select a pump or spare part to purchase.</p>\r\n  </ng-container>\r\n\r\n  <div id=\"cartdeletemodal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n      <!-- Modal content-->\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-body\">\r\n          <div class=\"delete-txt\">\r\n            <div class=\"remove-sec\">Are you sure to remove this item?\r\n              <p style=\"color: darkred;\" *ngIf=\"showDeleteMsg\">If you remove this, then accessories related to this will be removed and spares will be charged as per original price.</p>\r\n            </div>\r\n\r\n            <button class=\"blue-button\" (click)=\"removeItemFromCart()\">Yes</button>\r\n            <button class=\"blue-button\" (click)=\"closeDeleteModal()\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","export class CardError {\r\n  code: string;\r\n  message: string;\r\n  type: string;\r\n}\r\n","import { Component, OnInit, OnDestroy, NgZone, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CreditCardValidators } from 'angular-cc-library';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { environment } from 'src/environments/environment.prod';\r\nimport { CartDetails } from 'src/app/dataModels/cart-details';\r\nimport { CanComponentDeactivate } from '../deactive-guard.guard';\r\nimport { CardError } from 'src/app/dataModels/cardError';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\ndeclare var Stripe;\r\n@Component({\r\n  selector: 'app-cart-payment',\r\n  templateUrl: './cart-payment.component.html',\r\n  styleUrls: ['./cart-payment.component.css']\r\n})\r\nexport class CartPaymentComponent implements OnInit, CanComponentDeactivate, AfterViewInit, OnDestroy {\r\n\r\n  @ViewChild('cardInfo', { static: true }) cardElement: ElementRef; // used to access the cardInfo element details\r\n\r\n  stripe: any; // taking a variable for stripe of any type\r\n  card: any; // taking a variable for card\r\n  paymentLoading: boolean = false;\r\n  cardNumber: any;\r\n  cardExpiry: any;\r\n  cardCvc: any;\r\n  cardErrors: CardError = new CardError(); // assigning cardErrors of cartError type\r\n  cardHandler = this.onChange.bind(this); // used to get cardField validations\r\n\r\n  subscribe: Subscription[] = []; // used to store subscription\r\n\r\n  total: number = 0; // used to store totalPrice\r\n  toggleCanDeactivate: boolean = true; // change CanDeactivate resolve according to condition\r\n\r\n  paymentForm: FormGroup;  // paymentForm form of type formGroup\r\n  countryList: any[] = []; // used to store countryList\r\n  addressDetails: any; // assigning addressDetail according to id\r\n  products: CartDetails[] = []; // to store cartDetails.\r\n  addressId: any; // used to store addressId\r\n  buyNowCartId: string; // used to store buyNowCArtId\r\n  orderId: number;\r\n  toggleCardNumberError: boolean = false;\r\n  toggleCardMonthError: boolean = false;\r\n  toggleCardCvvError: boolean = false;\r\n  cardNumberError: string;\r\n  cardCvvError: string;\r\n  cardMonthError: string;\r\n  dealerDiscountAmount: number = 0;\r\n  applyDealerDiscount: boolean = false; // used to apply for dealer discount\r\n  dealerDiscountPercentage: number;\r\n\r\n  constructor(private fb: FormBuilder, private apiService: ApiService, private router: Router,\r\n              private toastr: ToastrService, private ngZone: NgZone, private activatedRoute: ActivatedRoute,\r\n              private zone: NgZone, private spinner: NgxSpinnerService) {}\r\n\r\n  ngOnInit(): void {\r\n    // assigning addressId and buyNow id from route params\r\n    this.subscribe.push(this.activatedRoute.params.subscribe(res => {\r\n      if (res.id1) {\r\n        this.addressId = res.id1;\r\n        this.buyNowCartId = res.id2;\r\n        this.getAddress(res.id1);\r\n      }\r\n    }));\r\n    if (\r\n      window.atob(sessionStorage.getItem('userType')) ===\r\n        'Dealer' &&\r\n      window.atob(sessionStorage.getItem('userStatus')) === 'D'\r\n    ) {\r\n      this.applyDealerDiscount = true;\r\n      if (window.atob(sessionStorage.getItem('userDiscount')) === null) {\r\n        this.apiService.dealerDiscount().subscribe(res => {\r\n          if (res[`return`] === true) {\r\n            this.dealerDiscountPercentage = res[`dealer_discount`];\r\n            this.dealerDiscountPercentage = this.dealerDiscountPercentage * 0.01;\r\n          }\r\n        })\r\n      }else {\r\n        let userDiscount = window.atob(sessionStorage.getItem('userDiscount'));\r\n        this.dealerDiscountPercentage = +userDiscount * 0.01;\r\n      }\r\n    }\r\n    if (this.buyNowCartId.length === 0) { // checking buyNow cartId is present or not\r\n      // this.subscribe.push(this.apiService.getCartById(window.atob(localStorage.getItem('cartId'))).subscribe(res => {\r\n      this.subscribe.push(this.apiService.getCartById(window.atob(sessionStorage.getItem('cartId'))).subscribe(res => {\r\n        if (res[`code`] === 200) {\r\n          this.products = (JSON.parse(res[`details`].cart) as CartDetails[]); // assigning cartDetails from response to products\r\n          this.findGrandTotal();\r\n        }\r\n      }, err => {\r\n        this.toastr.error(err?.error?.message || err?.message);\r\n      }));\r\n    } else { // if buyNow cartId is present\r\n      this.subscribe.push(this.apiService.getCartById(this.buyNowCartId).subscribe(res => {\r\n        if (res[`code`] === 200) {\r\n          this.products = (JSON.parse(res[`details`].cart) as CartDetails[]); // assigning cartDetails from response to products\r\n          this.findGrandTotal();\r\n        }\r\n      }, err => {\r\n        this.toastr.error(err?.error?.message || err?.message);\r\n      }));\r\n    }\r\n    // calling getCountryData function to getCountryList\r\n    this.subscribe.push(this.apiService.getCountryData().subscribe(res => {\r\n      if (res) {\r\n        this.countryList = res[`countries`]; // assigning countryList in countryList Array\r\n      }\r\n    }));\r\n    this.createPaymentForm();\r\n  }\r\n\r\n  // used afterviewinit lifecyclehook to load card after view get initialized\r\n  ngAfterViewInit(): void {\r\n    // Giving a base style here, but most of the style is in scss file\r\n    this.spinner.show();\r\n    const cardStyle = {\r\n      base: {\r\n        iconColor: '#1586ad',\r\n        color: '#32325d',\r\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n        fontSmoothing: 'antialiased',\r\n        fontSize: '20px',\r\n        '::placeholder': {\r\n          color: 'rgba(190, 193, 197, 0.9)',\r\n          fontSize: '0.9em',\r\n          fontFamily: '\"Trebuchet MS\", \"Lucida Sans Unicode\", \"Lucida Grande\", \"Lucida Sans\", Arial, sans-serif'\r\n        },\r\n      },\r\n      invalid: {\r\n        color: 'red',\r\n        iconColor: '#fa755a',\r\n      },\r\n    };\r\n\r\n    // assign stripe publish key to stripe variable\r\n    this.stripe = Stripe(environment.stripeTestKey);\r\n    const elements = this.stripe.elements();\r\n\r\n    this.cardNumber = elements.create('cardNumber', { showIcon: true, placeholder: 'Enter your card number', style: cardStyle });\r\n    this.cardNumber.mount('#cc-number');\r\n    this.cardNumber.on('change', (error) => {\r\n      if (error.error === undefined || error) {\r\n        if (error.error !== undefined) {\r\n          this.toggleCardNumberError = true;\r\n          this.cardNumberError = error.error.message;\r\n        }else {\r\n          this.toggleCardNumberError = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.cardExpiry = elements.create('cardExpiry', { placeholder: 'MM / YY', style: cardStyle });\r\n    this.cardExpiry.mount('#cc-exp-date');\r\n    this.cardExpiry.on('change', (error) => {\r\n      if (error.error === undefined || error) {\r\n        if (error.error !== undefined) {\r\n          this.toggleCardMonthError = true;\r\n          this.cardMonthError = error.error.message;\r\n        }else {\r\n          this.toggleCardMonthError = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.cardCvc = elements.create('cardCvc', { placeholder: 'Enter CVC', style: cardStyle });\r\n    this.cardCvc.mount('#cc-cvc');\r\n    this.cardCvc.on('change', (error) => {\r\n      if (error.error === undefined || error) {\r\n        if (error.error !== undefined) {\r\n          this.toggleCardCvvError = true;\r\n          this.cardCvvError = error.error.message;\r\n        }else {\r\n          this.toggleCardCvvError = false;\r\n        }\r\n      }\r\n    });\r\n    this.spinner.hide();\r\n  }\r\n\r\n  // function to findGrandTotal\r\n  findGrandTotal(): void {\r\n    let price;\r\n    let gstPrice;\r\n    let subPrice = 0;\r\n    let shippingCharges = 0; // default shipping charges\r\n    let productPrice = 0; // default product price\r\n\r\n    // calculating eachProduct price using forEach loop for products array\r\n    this.products.forEach((ele) => {\r\n      if (ele.productQuantity) { // checking if productQuantity is greater than 0\r\n        // multiplying eachProduct price with eachProduct quantity and adding the result with productPrice\r\n        productPrice = ((ele.discountPrice > 0 ? ele.discountPrice : ele.price) * ele.productQuantity) + productPrice;\r\n      }\r\n    });\r\n    price = productPrice;\r\n    shippingCharges = 0.05 * price; // 5% of totalCharges\r\n    subPrice = price + shippingCharges; // adding price with shippingCharges and assigning to total\r\n    gstPrice = 0.10 * subPrice;\r\n    this.total = Math.round(gstPrice + subPrice); // adding price with shippingCharges and assigning to total\r\n    this.dealerDiscountAmount = Math.round(this.dealerDiscountPercentage * this.total);\r\n  }\r\n\r\n  // function to getAddress using addressId\r\n  getAddress(addressId: string): void {\r\n    this.subscribe.push(this.apiService.getAddressById(addressId).subscribe(res => {\r\n      if (res[`address`].length > 0) {\r\n        this.addressDetails = res[`address`][0]; // assigning response of address to addressDetails\r\n      }\r\n    }));\r\n  }\r\n\r\n  // function to loadStripe\r\n  loadStripe(): void {\r\n    if (!window.document.getElementById('stripe-custom-form-script')) {\r\n      const s = window.document.createElement('script');\r\n      s.id = 'stripe-custom-form-script';\r\n      s.type = 'text/javascript';\r\n      s.src = 'https://js.stripe.com/v2/';\r\n      s.onload = () => {\r\n        window.Stripe.setPublishableKey(environment.stripeTestKey);\r\n      };\r\n      window.document.body.appendChild(s);\r\n    }\r\n  }\r\n\r\n  // function to create payment form\r\n  createPaymentForm(): void {\r\n    this.paymentForm = this.fb.group({\r\n      cardUserName: new FormControl('', [Validators.minLength(5), Validators.required]),\r\n      // email: new FormControl('', [Validators.email, Validators.required]),\r\n      // cardNumber: new FormControl('', [CreditCardValidators.validateCCNumber, Validators.required]),\r\n      // cardCVV: new FormControl('', Validators.required),\r\n      // cardExpDate: new FormControl('', [CreditCardValidators.validateExpDate, Validators.required]),\r\n      // country: new FormControl('Australia', Validators.required)\r\n    });\r\n  }\r\n\r\n  // function to get controls of payment form\r\n  get formControl(): any {\r\n    return this.paymentForm.controls;\r\n  }\r\n\r\n  // function to validate all fields of payment form\r\n  validateAllFields(formGroup: FormGroup): void {\r\n    Object.keys(this.formControl).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        control.markAsTouched({ onlySelf: true });\r\n      } else if (control instanceof FormGroup) {\r\n        this.validateAllFields(control);\r\n      }\r\n    });\r\n  }\r\n\r\n  onChange({ error }): any {\r\n    if (error) {\r\n      this.cardErrors = error;\r\n    } else {\r\n      this.cardErrors = null;\r\n    }\r\n  }\r\n\r\n  // function to submit signUp form\r\n  async submitPaymentForm(form): Promise<any> {\r\n    // this.spinner.show('sp3');\r\n    if (form.invalid) { // condition checking if form is valid or not\r\n      this.validateAllFields(form); // if form in invalid then call validateAllfields function\r\n    } else {\r\n      this.paymentLoading = true;\r\n      // this.spinner.show('spinner-2');\r\n      this.toggleCanDeactivate = false; // changing toggleCanDeactivate to false\r\n      const { token, error } = await this.stripe.createToken(this.cardNumber, {\r\n        name: form.value.cardUserName,\r\n        address_city: this.addressDetails?.city,\r\n        address_country: this.addressDetails?.country,\r\n        address_line1: this.addressDetails?.house_no,\r\n        address_state: this.addressDetails?.state,\r\n        address_zip: this.addressDetails?.pincode\r\n      });\r\n      if (token) {\r\n        // console.log('address', this.addressDetails, token);\r\n        // this.spinner.hide('sp3');\r\n        this.onSuccess(token);\r\n      } else {\r\n        // console.log('address', this.addressDetails, token);\r\n        this.spinner.hide('sp3');\r\n        this.onError(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  // function to call payment if token is generated\r\n  onSuccess(token): void {\r\n    this.paymentLoading = false;\r\n    const paymentData = {\r\n      token: token.id,\r\n      amount: Math.round(this.total)\r\n    };\r\n    this.subscribe.push(this.apiService.payment(paymentData).subscribe(res => {\r\n      if (res[`code`] === 200) {\r\n        this.createOrder(paymentData.token);\r\n      }\r\n    }, err => {\r\n      this.paymentLoading = false;\r\n      this.toastr.error(err?.error?.message || err?.message);\r\n    }));\r\n  }\r\n\r\n  // function to show error if token is not generated\r\n  onError(error): void {\r\n    this.paymentLoading = false;\r\n    if (error.message) {\r\n      this.toastr.error(error.message);\r\n    }\r\n  }\r\n\r\n\r\n  // function to createOrder\r\n  createOrder(token: string): void {\r\n    const additionalDetails = JSON.parse(window.atob(sessionStorage.getItem('additionalPaymentDetails'))); \r\n    const orderData = {\r\n      address_id: this.addressId,\r\n      // user_id: +window.atob(localStorage.getItem('id')),\r\n      user_id: +window.atob(sessionStorage.getItem('id')),\r\n      amount: (this.total).toString(),\r\n      transaction_id: token,\r\n      purchase_details: this.products,\r\n      // cart_id: +window.atob(localStorage.getItem('cartId'))\r\n      cart_id: +window.atob(sessionStorage.getItem('cartId')),\r\n      ...additionalDetails\r\n    };\r\n    // api function to addOrder using addOrder api\r\n    this.subscribe.push(this.apiService.addOrders(orderData).subscribe(res => {\r\n      if (res[`code`] === 200) {\r\n        this.orderId = res[`details`].id;\r\n        sessionStorage.removeItem('buyNow');\r\n        this.apiService.totalItemsInCart();\r\n        this.router.navigate(['/payment-successful'], { queryParams: { orderId: this.orderId } });\r\n      }\r\n    }, err => {\r\n      this.toastr.error(err?.error?.message || err?.message);\r\n    }));\r\n  }\r\n\r\n  // function to updateCart\r\n  updateCart(): void {\r\n    const updateCart = {\r\n      // id: window.atob(localStorage.getItem('cartId')),\r\n      // user_id: window.atob(localStorage.getItem('id')),\r\n      id: window.atob(sessionStorage.getItem('cartId')),\r\n      user_id: window.atob(sessionStorage.getItem('id')),\r\n      cart: '[]'\r\n    };\r\n    // console.log('update', updateCart);\r\n    // this.subscribe.push(this.apiService.updateCart(updateCart).subscribe(res => {\r\n    //   if (res[`code`] === 200) {\r\n    //     this.apiService.totalItemsInCart(); // calling totalItemsInCart function to update cartQuantity Value.\r\n    //     this.router.navigate(['/payment-successful'], { queryParams: { orderId: this.orderId } });\r\n    //   }\r\n    // }, err => {\r\n    //   this.toastr.error(err?.error?.message || err?.message);\r\n    // }));\r\n  }\r\n\r\n  // canDeactivate router function to  check is navigation allowed or not\r\n  canDeactivate(): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.toggleCanDeactivate) { // checking toggleCanDeactivate value\r\n      // if (localStorage.getItem('cartId')) { // checking cartId is present or not\r\n      if (sessionStorage.getItem('cartId')) { // checking cartId is present or not\r\n        if (sessionStorage.getItem('buyNow')) { // checking buyNow is present or not\r\n          // tslint:disable-next-line: max-line-length\r\n          const cartLocalData = JSON.parse(window.atob(sessionStorage.getItem('buyNow'))) as CartDetails[]; // assigning buyNow value to cartLocalData\r\n          const accessoriesToAdd = [];  // accessoriesToAdd[] to add accessory\r\n          const sparesToAdd = []; // sparesToAdd[] to add spare;\r\n          let cart;\r\n          if (cartLocalData !== null) { // checking if cartLocalData is not null\r\n            cartLocalData.forEach(cartData => {\r\n              if (cartData.type === 'product') {\r\n                // assigning value in cart\r\n                cart = new CartDetails(\r\n                  cartData.productId,\r\n                  cartData.code,\r\n                  cartData.description,\r\n                  cartData.price,\r\n                  cartData.discountPrice,\r\n                  cartData.type,\r\n                  cartData.pole,\r\n                  cartData.flow,\r\n                  cartData.head,\r\n                  cartData.speed,\r\n                  cartData.power,\r\n                  cartData.engineSpeed,\r\n                  cartData.enginekW,\r\n                  cartData.driveType,\r\n                  cartData.productQuantity\r\n                );\r\n              } else if (cartData.type === 'accessory') {\r\n                accessoriesToAdd.push(cartData); // pushing cartData of type accessory in accessoriesToAdd array\r\n              } else if (cartData.type === 'spare') {\r\n                sparesToAdd.push(cartData); // pushing cartData of type spare in sparesToAdd array\r\n              }\r\n            });\r\n          }\r\n          // creating Promise to get return value\r\n          return new Promise((resolve) => {\r\n            // this.subscribe.push(this.apiService.getCartById(window.atob(localStorage.getItem('cartId'))).subscribe(res => {\r\n            this.subscribe.push(this.apiService.getCartById(window.atob(sessionStorage.getItem('cartId'))).subscribe(res => {\r\n              if (res[`code`] === 200) {\r\n                let cartDetails = [];\r\n                cartDetails = (JSON.parse(res[`details`].cart) as CartDetails[]);  // assigning response value to cartDetails\r\n                if (cartDetails.length <= 0) {  // checking cartDetails length is smaller or equal to 0\r\n                  // (...)spread operator takes in an iterable (e.g an array) and expands it into individual elements.\r\n                  cartDetails.push({...cart}); // pushing cart value in cartDetails\r\n                  cartDetails.push(...accessoriesToAdd); // pushing each accessoriesToAdd value in cartDetails\r\n                  cartDetails.push(...sparesToAdd); // pushing each sparesToAdd value in cartDetails\r\n                }\r\n                else {\r\n                  const cartAccessoryDataSet = new Array(); // creating new accessoryArray\r\n                  const cartSpareDataSet = new Array(); // creating new spareArray\r\n                  let cartProductDataSet = {}; // variable to set productData\r\n                  let spareNotExist = true; // check if spare type is present in cartLocalData\r\n                  let accessoryNotExist = true; // check if accessory type is present in cartLocalData\r\n                  let cartNotExist = true;\r\n                  console.log(cart, 'cart');\r\n                  console.log(cartDetails, 'cart1');\r\n                  for (let i = 0; i < cartDetails.length; i++) {\r\n                    if (cartDetails[i].type === 'product') { // checking type of product\r\n                      // checking cartDetails(got by getCartDetails api) with buyNow cartDetails(from sessionStorage)\r\n                      cartNotExist = false;\r\n                      if (((cartDetails[i].driveType === '' || cartDetails[i].driveType)\r\n                        === (cart.driveType === '' || cart.driveType))\r\n                        && (cartDetails[i].code === cart.code) &&\r\n                        (cartDetails[i].pole === cart.pole)) {\r\n                        cartDetails[i].productQuantity++;\r\n                      } else {\r\n                        cartProductDataSet = cart;\r\n                      }\r\n                    } else if (cartDetails[i].type === 'accessory') {\r\n                      accessoryNotExist = false;\r\n                      for (let j = 0; j < accessoriesToAdd.length; j++) {\r\n                        if (accessoriesToAdd[j].description === cartDetails[i].description\r\n                          && accessoriesToAdd[j].pole === cartDetails[i].pole\r\n                          && accessoriesToAdd[j].driveType === cartDetails[i].driveType) {\r\n                          cartDetails[i].productQuantity++;\r\n                        } else {\r\n                          /* some() is used to checks whether at least one of the elements of the array satisfies\r\n                              the condition then returns true (and does not check the remaining values) otherwise return false*/\r\n                          if (!cartDetails.some(res => (res.description === accessoriesToAdd[j].description)\r\n                            && (res.pole === accessoriesToAdd[j].pole) && (res.driveType === accessoriesToAdd[j].driveType)) &&\r\n                            (!cartAccessoryDataSet.some(res => (res.description === accessoriesToAdd[j].description)\r\n                              && (res.pole === accessoriesToAdd[j].pole) && (res.driveType === accessoriesToAdd[j].driveType)))) {\r\n                            cartAccessoryDataSet.push(accessoriesToAdd[j]);\r\n                          }\r\n                        }\r\n                      }\r\n                    } else if (cartDetails[i].type === 'spare') {\r\n                      spareNotExist = false;\r\n                      for (let j = 0; j < sparesToAdd.length; j++) {\r\n                        if (sparesToAdd[j].description === cartDetails[i].description\r\n                          && sparesToAdd[j].pole === cartDetails[i].pole\r\n                          && sparesToAdd[j].driveType === cartDetails[i].driveType) {\r\n                          cartDetails[i].productQuantity++;\r\n                        } else {\r\n                          /* some() is used to checks whether at least one of the elements of the array satisfies\r\n                              the condition then returns true (and does not check the remaining values) otherwise return false*/\r\n                          if ((!cartDetails.some(res => (res.description === sparesToAdd[j].description)\r\n                            && (res.pole === sparesToAdd[j].pole) && (res.driveType === sparesToAdd[j].driveType))) &&\r\n                            (!cartSpareDataSet.some(res => (res.description === sparesToAdd[j].description) &&\r\n                              (res.pole === sparesToAdd[j].pole) && (res.driveType === sparesToAdd[j].driveType)))) {\r\n                            cartSpareDataSet.push(sparesToAdd[j]);\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n\r\n                  // checking to push if cartAccessoryDataSet length is greater than 0\r\n                  if (cartAccessoryDataSet.length > 0) {\r\n                    cartDetails.push(...cartAccessoryDataSet);\r\n                  }\r\n\r\n                  // checking to push if cartSpareDataSet length is greater than 0\r\n                  if (cartSpareDataSet.length > 0) {\r\n                    cartDetails.push(...cartSpareDataSet);\r\n                  }\r\n\r\n                  // checking to push if cartProductDataSet is not undefined\r\n                  if (Object.keys(cartProductDataSet).length > 0) {\r\n                    cartDetails.push({...cartProductDataSet});\r\n                  }\r\n\r\n                  // checking to push if accessory exist\r\n                  if (accessoryNotExist) {\r\n                    cartDetails.push(...accessoriesToAdd);\r\n                  }\r\n\r\n                  // checking to push if spare exist\r\n                  if (spareNotExist) {\r\n                    cartDetails.push(...sparesToAdd);\r\n                  }\r\n\r\n                  if (cartNotExist) {\r\n                    cartDetails.push(...cart);\r\n                  }\r\n                }\r\n\r\n                const updateCart = {\r\n                  // id: window.atob(localStorage.getItem('cartId')),\r\n                  // user_id: window.atob(localStorage.getItem('id')),\r\n                  id: window.atob(sessionStorage.getItem('cartId')),\r\n                  user_id: window.atob(sessionStorage.getItem('id')),\r\n                  cart: JSON.stringify(cartDetails)\r\n                };\r\n                // calling updateCart api\r\n                return this.subscribe.push(this.apiService.updateCart(updateCart).subscribe(response => {\r\n                  if (response[`code`] === 200) {\r\n                    sessionStorage.removeItem('buyNow');\r\n                    this.apiService.totalItemsInCart();\r\n                    return resolve(true);\r\n                  }\r\n                }));\r\n              }\r\n            }));\r\n\r\n          });\r\n        }\r\n        else {\r\n          return true;\r\n        }\r\n      }\r\n      else {\r\n        // localStorage.setItem('cartId', window.btoa(this.buyNowCartId)); // setting buyNowCartId as cartId in localStorage\r\n        sessionStorage.setItem('cartId', window.btoa(this.buyNowCartId)); // setting buyNowCartId as cartId in sessionStorage\r\n        this.apiService.totalItemsInCart(); // calling totalItemsInCart function to update cartQuantity'\r\n        sessionStorage.removeItem('buyNow');\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // used to unsubscribe the subscription\r\n  ngOnDestroy(): void {\r\n    // Called once, before the instance is destroyed.\r\n    // Add 'implements OnDestroy' to the class.\r\n    this.subscribe.forEach(s => {\r\n      if (s) {\r\n        s.unsubscribe();\r\n      }\r\n    });\r\n    // this.card.destroy();\r\n    this.cardNumber.destroy();\r\n    this.cardExpiry.destroy();\r\n    this.cardCvc.destroy();\r\n  }\r\n\r\n}\r\n","<ngx-spinner\r\n  bdColor=\"rgb(0,0,0)\"\r\n  size=\"medium\"\r\n  color=\"#2e94ef\"\r\n  type=\"ball-newton-cradle\"\r\n  [fullScreen]=\"true\"\r\n  ><p style=\"color: white\">Loading...</p></ngx-spinner\r\n>\r\n\r\n<div class=\"main-container cartpage addresspage paymentpage\">\r\n  <div class=\"breadcrum\">\r\n    <div class=\"container\">\r\n      <p>\r\n        <a href=\"javascript:void(0)\" [routerLink]=\"['/home']\">Home</a> /\r\n        <a href=\"javascript:void(0)\" [routerLink]=\"['/cart']\">Cart</a> / Payment\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"cart-scale\">\r\n    <div class=\"container\">\r\n      <div class=\"cart-scale-inner\">\r\n        <div class=\"scale-no active-scale\">\r\n          <a style=\"pointer-events: none\">1</a><small>Cart</small>\r\n        </div>\r\n        <div class=\"scale-no\">\r\n          <a style=\"pointer-events: none\">2</a><small>Address</small>\r\n        </div>\r\n        <div class=\"scale-no\">\r\n          <a style=\"pointer-events: none\">3</a><small>Payment</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"cart-section\">\r\n    <div class=\"container\">\r\n      <div class=\"cart-inner\">\r\n        <div class=\"price-detail\">\r\n          <div class=\"price-row total-price\" style=\"border-top: none\">\r\n            <div\r\n              class=\"left-price-spare\"\r\n              *ngIf=\"!applyDealerDiscount; else elsePart\"\r\n            >\r\n              <h3>Total Price(AUD)</h3>\r\n              <h3>${{ total }}</h3>\r\n            </div>\r\n            <ng-template #elsePart>\r\n              <div class=\"left-price-spare\">\r\n                <h3>Total Price(AUD)</h3>\r\n                <h3>${{ total - dealerDiscountAmount }}</h3>\r\n              </div>\r\n            </ng-template>\r\n            <!-- <div class=\"left-price-spare coupon-field\">\r\n              <input type=\"text\" placeholder=\"Coupon Code\" />\r\n              <button class=\"coupon-btn\">\r\n                <a href=\"javascript:void(0)\">Apply Coupon</a>\r\n              </button>\r\n            </div> -->\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"cart\">\r\n          <div class=\"address-row full-address-row\">\r\n            <form [formGroup]=\"paymentForm\">\r\n              <div class=\"address-feild\">\r\n                <label>Card Information <span>*</span></label>\r\n                <div\r\n                  id=\"cc-number\"\r\n                  [ngClass]=\"\r\n                    toggleCardNumberError ? 'cardErr' : 'address-feildCard'\r\n                  \"\r\n                ></div>\r\n                <p *ngIf=\"toggleCardNumberError\" style=\"color: red !important\">\r\n                  {{ cardNumberError }}\r\n                </p>\r\n              </div>\r\n              <div class=\"address-feild half-field\">\r\n                <div style=\"width: 50%\">\r\n                  <label>Exp. Month & Year <span>*</span></label>\r\n                  <div\r\n                    id=\"cc-exp-date\"\r\n                    [ngClass]=\"\r\n                      toggleCardMonthError ? 'cardErr' : 'address-feildCard'\r\n                    \"\r\n                  ></div>\r\n                  <p *ngIf=\"toggleCardMonthError\" style=\"color: red !important\">\r\n                    {{ cardMonthError }}\r\n                  </p>\r\n                </div>\r\n                <div style=\"width: 50%\">\r\n                  <label> CVV <span>*</span></label>\r\n                  <div\r\n                    id=\"cc-cvc\"\r\n                    [ngClass]=\"\r\n                      toggleCardCvvError ? 'cardErr' : 'address-feildCard'\r\n                    \"\r\n                  ></div>\r\n                  <p *ngIf=\"toggleCardCvvError\" style=\"color: red !important\">\r\n                    {{ cardCvvError }}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"address-feild\">\r\n                <label>Name on Card <span>*</span></label>\r\n                <input\r\n                  type=\"text\"\r\n                  formControlName=\"cardUserName\"\r\n                  placeholder=\"Navodita Aggarwal\"\r\n                  required\r\n                  [ngClass]=\"\r\n                    (formControl?.cardUserName?.errors?.minlength ||\r\n                      formControl?.cardUserName?.errors?.required) &&\r\n                    (formControl?.cardUserName?.touched ||\r\n                      formControl?.cardUserName?.dirty)\r\n                      ? 'red'\r\n                      : formControl?.cardUserName?.valid &&\r\n                        (formControl?.cardUserName?.touched ||\r\n                          formControl?.cardUserName?.dirty)\r\n                      ? 'green'\r\n                      : ''\r\n                  \"\r\n                />\r\n                <p\r\n                  *ngIf=\"\r\n                    (formControl?.cardUserName?.errors?.minlength ||\r\n                      formControl?.cardUserName?.errors?.required) &&\r\n                    (formControl?.cardUserName?.touched ||\r\n                      formControl?.cardUserName?.dirty)\r\n                  \"\r\n                  style=\"color: red\"\r\n                >\r\n                  Name should be of minimum 5 characters\r\n                </p>\r\n              </div>\r\n              <button *ngIf=\"!paymentLoading\">\r\n                <a\r\n                  href=\"javascript:void(0)\"\r\n                  (click)=\"submitPaymentForm(paymentForm)\"\r\n                  >Pay ${{ total }}</a\r\n                >\r\n              </button>\r\n              <button *ngIf=\"paymentLoading\">\r\n                <a href=\"javascript:void(0)\"\r\n                  ><span\r\n                    class=\"spinner-border spinner-border-sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  ></span\r\n                  >Payment Processing <i class=\"fas fa-spinner fa-spin\"></i\r\n                ></a>\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouteGuard } from 'src/app/services/route-guard.guard';\r\nimport { CartDetailsComponent } from './cart-details/cart-details.component';\r\nimport { CartAddressComponent } from './cart-address/cart-address.component';\r\nimport { CartPaymentComponent } from './cart-payment/cart-payment.component';\r\nimport { CartRoutingModule } from './cart-routing.module';\r\nimport { DirectivesModule } from 'src/app/directives/directives.module';\r\nimport { CreditCardDirectivesModule } from 'angular-cc-library';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { DeactiveGuard } from './deactive-guard.guard';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n@NgModule({\r\n  declarations: [CartDetailsComponent, CartAddressComponent, CartPaymentComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CartRoutingModule,\r\n    DirectivesModule,\r\n    CreditCardDirectivesModule,\r\n    ToastrModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  providers: [RouteGuard, DeactiveGuard]\r\n})\r\nexport class CartModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface CanComponentDeactivate {\r\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DeactiveGuard implements CanDeactivate<CanComponentDeactivate> {\r\n  canDeactivate(\r\n    component: CanComponentDeactivate,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot,\r\n    nextState?: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return component.canDeactivate();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}